{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_alloca_use_14_bad()\n{\n    if(globalFive==5)\n    {\n        {\n            twoIntsStruct * pointer = (twoIntsStruct *)ALLOCA(sizeof(twoIntsStruct));\n            twoIntsStruct data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printIntLine(data.intOne);\n            printIntLine(data.intTwo);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int64_t_alloca_use_10_bad()\n{\n    if(globalTrue)\n    {\n        {\n            int64_t * pointer = (int64_t *)ALLOCA(sizeof(int64_t));\n            int64_t data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printLongLongLine(data);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_malloc_use_02_bad()\n{\n    if(1)\n    {\n        {\n            char * pointer = (char *)malloc(sizeof(char));\n            if (pointer == NULL) {exit(-1);}\n            char data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printHexCharLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_alloca_use_11_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(staticTrue)\n    {\n        {\n            int64_t data;\n            int64_t * pointer = (int64_t *)malloc(sizeof(int64_t));\n            if (pointer == NULL) {exit(-1);}\n            data = 5LL;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int64_t data = *pointer;\n                printLongLongLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_pointer_malloc_use_06_bad()\n{\n    if(STATIC_CONST_FIVE==5)\n    {\n        {\n            int * * pointer = (int * *)malloc(sizeof(int *));\n            if (pointer == NULL) {exit(-1);}\n            int * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printIntLine(*data);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_pointer_alloca_use_09_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalReturnsTrueOrFalse())\n    {\n        {\n            wchar_t * data;\n            wchar_t * * pointer = (wchar_t * *)malloc(sizeof(wchar_t *));\n            if (pointer == NULL) {exit(-1);}\n            data = L\"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                wchar_t * data = *pointer;\n                printWLine(data);\n            }\n            free(pointer);\n        }\n    }\n    else\n    {\n        {\n            wchar_t * data;\n            wchar_t * * pointer = (wchar_t * *)malloc(sizeof(wchar_t *));\n            if (pointer == NULL) {exit(-1);}\n            data = L\"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                wchar_t * data = *pointer;\n                printWLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(GLOBAL_CONST_FALSE)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            double * data;\n            double * * pointer = (double * *)ALLOCA(sizeof(double *));\n            /* initialize both the pointer and the data pointed to */\n            data = (double *)malloc(sizeof(double));\n            if (data == NULL) {exit(-1);}\n            *data = 5.0;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                double * data = *pointer;\n                printDoubleLine(*data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    {\n        int data;\n        int * pointer = (int *)ALLOCA(sizeof(int));\n        data = 5;\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            int data = *pointer;\n            printIntLine(data);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__double_pointer_malloc_use_10_bad()\n{\n    if(globalTrue)\n    {\n        {\n            double * * pointer = (double * *)malloc(sizeof(double *));\n            if (pointer == NULL) {exit(-1);}\n            double * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printDoubleLine(*data);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_alloca_use_03_good()\n{\n    good1();\n    good2();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__double_pointer_malloc_use_17_bad()\n{\n    int j;\n    for(j = 0; j < 1; j++)\n    {\n        {\n            double * * pointer = (double * *)malloc(sizeof(double *));\n            if (pointer == NULL) {exit(-1);}\n            double * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printDoubleLine(*data);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int64_t_malloc_use_07_bad()\n{\n    if(staticFive==5)\n    {\n        {\n            int64_t * pointer = (int64_t *)malloc(sizeof(int64_t));\n            if (pointer == NULL) {exit(-1);}\n            int64_t data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printLongLongLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_malloc_use_09_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(staticFive!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            char data;\n            char * pointer = (char *)malloc(sizeof(char));\n            if (pointer == NULL) {exit(-1);}\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char data = *pointer;\n                printHexCharLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_alloca_use_09_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(staticReturnsFalse())\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            twoIntsStruct data;\n            twoIntsStruct * pointer = (twoIntsStruct *)ALLOCA(sizeof(twoIntsStruct));\n            data.intOne = 1;\n            data.intTwo = 2;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct data = *pointer;\n                printIntLine(data.intOne);\n                printIntLine(data.intTwo);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_pointer_malloc_use_10_good()\n{\n    good1();\n    good2();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_alloca_use_02_bad()\n{\n    if(1)\n    {\n        {\n            wchar_t * * pointer = (wchar_t * *)ALLOCA(sizeof(wchar_t *));\n            wchar_t * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printWLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalFalse)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            long data;\n            long * pointer = (long *)malloc(sizeof(long));\n            if (pointer == NULL) {exit(-1);}\n            data = 5L;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                long data = *pointer;\n                printLongLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int64_t_alloca_use_05_bad()\n{\n    if(staticTrue)\n    {\n        {\n            int64_t * pointer = (int64_t *)ALLOCA(sizeof(int64_t));\n            int64_t data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printLongLongLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        {\n            char data;\n            char * pointer = (char *)ALLOCA(sizeof(char));\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char data = *pointer;\n                printHexCharLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    {\n        char * data;\n        char * * pointer = (char * *)malloc(sizeof(char *));\n        if (pointer == NULL) {exit(-1);}\n        data = \"string\";\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            char * data = *pointer;\n            printLine(data);\n        }\n        free(pointer);\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_pointer_alloca_use_10_good()\n{\n    good1();\n    good2();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_pointer_alloca_use_04_bad()\n{\n    if(STATIC_CONST_TRUE)\n    {\n        {\n            int * * pointer = (int * *)ALLOCA(sizeof(int *));\n            int * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printIntLine(*data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(globalTrue)\n    {\n        {\n            twoIntsStruct data;\n            twoIntsStruct * pointer = (twoIntsStruct *)ALLOCA(sizeof(twoIntsStruct));\n            data.intOne = 1;\n            data.intTwo = 2;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct data = *pointer;\n                printIntLine(data.intOne);\n                printIntLine(data.intTwo);\n            }\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_alloca_use_11_bad()\n{\n    if(globalReturnsTrue())\n    {\n        {\n            twoIntsStruct * pointer = (twoIntsStruct *)ALLOCA(sizeof(twoIntsStruct));\n            twoIntsStruct data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printIntLine(data.intOne);\n            printIntLine(data.intTwo);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalFalse)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            twoIntsStruct data;\n            twoIntsStruct * pointer = (twoIntsStruct *)ALLOCA(sizeof(twoIntsStruct));\n            data.intOne = 1;\n            data.intTwo = 2;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct data = *pointer;\n                printIntLine(data.intOne);\n                printIntLine(data.intTwo);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__double_pointer_alloca_use_04_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(STATIC_CONST_FIVE==5)\n    {\n        {\n            int * data;\n            int * * pointer = (int * *)malloc(sizeof(int *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (int *)malloc(sizeof(int));\n            if (data == NULL) {exit(-1);}\n            *data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int * data = *pointer;\n                printIntLine(*data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(STATIC_CONST_FALSE)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int * data;\n            int * * pointer = (int * *)malloc(sizeof(int *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (int *)malloc(sizeof(int));\n            if (data == NULL) {exit(-1);}\n            *data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int * data = *pointer;\n                printIntLine(*data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    int k;\n    for(k = 0; k < 1; k++)\n    {\n        {\n            char data;\n            char * pointer = (char *)malloc(sizeof(char));\n            if (pointer == NULL) {exit(-1);}\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char data = *pointer;\n                printHexCharLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_alloca_use_15_good()\n{\n    good1();\n    good2();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int64_t_alloca_use_13_bad()\n{\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        {\n            int64_t * pointer = (int64_t *)ALLOCA(sizeof(int64_t));\n            int64_t data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printLongLongLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    goto sink;\nsink:\n    {\n        char * data;\n        char * * pointer = (char * *)ALLOCA(sizeof(char *));\n        data = \"string\";\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            char * data = *pointer;\n            printLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(globalFive==5)\n    {\n        {\n            long data;\n            long * pointer = (long *)ALLOCA(sizeof(long));\n            data = 5L;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                long data = *pointer;\n                printLongLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__double_pointer_alloca_use_07_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(staticTrue)\n    {\n        {\n            int64_t data;\n            int64_t * pointer = (int64_t *)ALLOCA(sizeof(int64_t));\n            data = 5LL;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int64_t data = *pointer;\n                printLongLongLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_pointer_alloca_use_02_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1() \n{\n    int intGood1 = helperGood1();\n    printIntLine(intGood1);\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(GLOBAL_CONST_FIVE!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            char * data;\n            char * * pointer = (char * *)malloc(sizeof(char *));\n            if (pointer == NULL) {exit(-1);}\n            data = \"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char * data = *pointer;\n                printLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    {\n        int * data;\n        int * * pointer = (int * *)malloc(sizeof(int *));\n        if (pointer == NULL) {exit(-1);}\n        /* initialize both the pointer and the data pointed to */\n        data = (int *)malloc(sizeof(int));\n        if (data == NULL) {exit(-1);}\n        *data = 5;\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            int * data = *pointer;\n            printIntLine(*data);\n        }\n        free(pointer);\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_pointer_alloca_use_04_good()\n{\n    good1();\n    good2();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int64_t_malloc_use_10_bad()\n{\n    if(globalTrue)\n    {\n        {\n            int64_t * pointer = (int64_t *)malloc(sizeof(int64_t));\n            if (pointer == NULL) {exit(-1);}\n            int64_t data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printLongLongLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    goto sink;\nsink:\n    {\n        double * data;\n        double * * pointer = (double * *)ALLOCA(sizeof(double *));\n        /* initialize both the pointer and the data pointed to */\n        data = (double *)malloc(sizeof(double));\n        if (data == NULL) {exit(-1);}\n        *data = 5.0;\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            double * data = *pointer;\n            printDoubleLine(*data);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_pointer_alloca_use_12_good()\n{\n    good1();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalFive!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            char data;\n            char * pointer = (char *)malloc(sizeof(char));\n            if (pointer == NULL) {exit(-1);}\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char data = *pointer;\n                printHexCharLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_malloc_use_06_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_malloc_use_07_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(GLOBAL_CONST_FALSE)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int * data;\n            int * * pointer = (int * *)malloc(sizeof(int *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (int *)malloc(sizeof(int));\n            if (data == NULL) {exit(-1);}\n            *data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int * data = *pointer;\n                printIntLine(*data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_pointer_malloc_use_16_bad()\n{\n    while(1)\n    {\n        {\n            int * * pointer = (int * *)malloc(sizeof(int *));\n            if (pointer == NULL) {exit(-1);}\n            int * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printIntLine(*data);\n        }\n        break;\n    }\n}"}
{"target": 1, "func": "static int helperBad(void)\n{\n    /* FLAW: no return in a function with an explicit return type of int */\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_pointer_malloc_use_01_bad()\n{\n    {\n        twoIntsStruct * * pointer = (twoIntsStruct * *)malloc(sizeof(twoIntsStruct *));\n        if (pointer == NULL) {exit(-1);}\n        twoIntsStruct * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n        free(pointer);\n        printIntLine(data->intOne);\n        printIntLine(data->intTwo);\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_pointer_malloc_use_11_good()\n{\n    good1();\n    good2();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__double_pointer_alloca_use_10_bad()\n{\n    if(globalTrue)\n    {\n        {\n            double * * pointer = (double * *)ALLOCA(sizeof(double *));\n            double * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printDoubleLine(*data);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_malloc_use_02_bad()\n{\n    if(1)\n    {\n        {\n            wchar_t * * pointer = (wchar_t * *)malloc(sizeof(wchar_t *));\n            if (pointer == NULL) {exit(-1);}\n            wchar_t * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printWLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_pointer_malloc_use_07_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_alloca_use_15_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(5!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            char * data;\n            char * * pointer = (char * *)malloc(sizeof(char *));\n            if (pointer == NULL) {exit(-1);}\n            data = \"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char * data = *pointer;\n                printLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__long_malloc_use_09_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(staticReturnsTrue())\n    {\n        {\n            int * data;\n            int * * pointer = (int * *)malloc(sizeof(int *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (int *)malloc(sizeof(int));\n            if (data == NULL) {exit(-1);}\n            *data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int * data = *pointer;\n                printIntLine(*data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_alloca_use_16_good()\n{\n    good1();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(STATIC_CONST_FIVE!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            char * data;\n            char * * pointer = (char * *)malloc(sizeof(char *));\n            if (pointer == NULL) {exit(-1);}\n            data = \"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char * data = *pointer;\n                printLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_malloc_use_12_bad()\n{\n    if(globalReturnsTrueOrFalse())\n    {\n        {\n            int * pointer = (int *)malloc(sizeof(int));\n            if (pointer == NULL) {exit(-1);}\n            int data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printIntLine(data);\n        }\n    }\n    else\n    {\n        {\n            int data;\n            int * pointer = (int *)malloc(sizeof(int));\n            if (pointer == NULL) {exit(-1);}\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int data = *pointer;\n                printIntLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalFive!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int * data;\n            int * * pointer = (int * *)ALLOCA(sizeof(int *));\n            /* initialize both the pointer and the data pointed to */\n            data = (int *)malloc(sizeof(int));\n            if (data == NULL) {exit(-1);}\n            *data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int * data = *pointer;\n                printIntLine(*data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_alloca_use_10_good()\n{\n    good1();\n    good2();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_alloca_use_11_bad()\n{\n    if(globalReturnsTrue())\n    {\n        {\n            int * pointer = (int *)ALLOCA(sizeof(int));\n            int data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printIntLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(1)\n    {\n        {\n            int data;\n            int * pointer = (int *)ALLOCA(sizeof(int));\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int data = *pointer;\n                printIntLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_pointer_malloc_use_03_good()\n{\n    good1();\n    good2();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__long_alloca_use_02_bad()\n{\n    if(1)\n    {\n        {\n            long * pointer = (long *)ALLOCA(sizeof(long));\n            long data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printLongLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    {\n        long data;\n        long * pointer = (long *)ALLOCA(sizeof(long));\n        data = 5L;\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            long data = *pointer;\n            printLongLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        {\n            char data;\n            char * pointer = (char *)malloc(sizeof(char));\n            if (pointer == NULL) {exit(-1);}\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char data = *pointer;\n                printHexCharLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(STATIC_CONST_TRUE)\n    {\n        {\n            char data;\n            char * pointer = (char *)ALLOCA(sizeof(char));\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char data = *pointer;\n                printHexCharLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    switch(5)\n    {\n    case 6:\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n    {\n        char * data;\n        char * * pointer = (char * *)ALLOCA(sizeof(char *));\n        data = \"string\";\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            char * data = *pointer;\n            printLine(data);\n        }\n    }\n    break;\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__w32_bare_return_01_bad() \n{\n    int intBad = helperBad();\n    printIntLine(intBad);\n}"}
{"target": 0, "func": "static void good1()\n{\n    goto sink;\nsink:\n    {\n        wchar_t * data;\n        wchar_t * * pointer = (wchar_t * *)ALLOCA(sizeof(wchar_t *));\n        data = L\"string\";\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            wchar_t * data = *pointer;\n            printWLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(globalReturnsTrue())\n    {\n        {\n            wchar_t * data;\n            wchar_t * * pointer = (wchar_t * *)ALLOCA(sizeof(wchar_t *));\n            data = L\"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                wchar_t * data = *pointer;\n                printWLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(STATIC_CONST_FIVE==5)\n    {\n        {\n            int * data;\n            int * * pointer = (int * *)ALLOCA(sizeof(int *));\n            /* initialize both the pointer and the data pointed to */\n            data = (int *)malloc(sizeof(int));\n            if (data == NULL) {exit(-1);}\n            *data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int * data = *pointer;\n                printIntLine(*data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(STATIC_CONST_FIVE==5)\n    {\n        {\n            twoIntsStruct data;\n            twoIntsStruct * pointer = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (pointer == NULL) {exit(-1);}\n            data.intOne = 1;\n            data.intTwo = 2;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct data = *pointer;\n                printIntLine(data.intOne);\n                printIntLine(data.intTwo);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    {\n        twoIntsStruct data;\n        twoIntsStruct * pointer = (twoIntsStruct *)ALLOCA(sizeof(twoIntsStruct));\n        data.intOne = 1;\n        data.intTwo = 2;\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            twoIntsStruct data = *pointer;\n            printIntLine(data.intOne);\n            printIntLine(data.intTwo);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalFalse)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            char data;\n            char * pointer = (char *)malloc(sizeof(char));\n            if (pointer == NULL) {exit(-1);}\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char data = *pointer;\n                printHexCharLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    goto sink;\nsink:\n    {\n        int64_t data;\n        int64_t * pointer = (int64_t *)ALLOCA(sizeof(int64_t));\n        data = 5LL;\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            int64_t data = *pointer;\n            printLongLongLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(staticReturnsTrue())\n    {\n        {\n            twoIntsStruct data;\n            twoIntsStruct * pointer = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (pointer == NULL) {exit(-1);}\n            data.intOne = 1;\n            data.intTwo = 2;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct data = *pointer;\n                printIntLine(data.intOne);\n                printIntLine(data.intTwo);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(staticReturnsTrue())\n    {\n        {\n            wchar_t * data;\n            wchar_t * * pointer = (wchar_t * *)malloc(sizeof(wchar_t *));\n            if (pointer == NULL) {exit(-1);}\n            data = L\"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                wchar_t * data = *pointer;\n                printWLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_alloca_use_15_bad()\n{\n    switch(6)\n    {\n    case 6:\n    {\n        twoIntsStruct * pointer = (twoIntsStruct *)ALLOCA(sizeof(twoIntsStruct));\n        twoIntsStruct data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n        printIntLine(data.intOne);\n        printIntLine(data.intTwo);\n    }\n    break;\n    default:\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_pointer_malloc_use_16_good()\n{\n    good1();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__double_pointer_malloc_use_08_bad()\n{\n    if(staticReturnsTrue())\n    {\n        {\n            double * * pointer = (double * *)malloc(sizeof(double *));\n            if (pointer == NULL) {exit(-1);}\n            double * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printDoubleLine(*data);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_pointer_malloc_use_02_bad()\n{\n    if(1)\n    {\n        {\n            char * * pointer = (char * *)malloc(sizeof(char *));\n            if (pointer == NULL) {exit(-1);}\n            char * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printLine(data);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__double_pointer_alloca_use_08_bad()\n{\n    if(staticReturnsTrue())\n    {\n        {\n            double * * pointer = (double * *)ALLOCA(sizeof(double *));\n            double * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printDoubleLine(*data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(staticFalse)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            double * data;\n            double * * pointer = (double * *)ALLOCA(sizeof(double *));\n            /* initialize both the pointer and the data pointed to */\n            data = (double *)malloc(sizeof(double));\n            if (data == NULL) {exit(-1);}\n            *data = 5.0;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                double * data = *pointer;\n                printDoubleLine(*data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_pointer_alloca_use_14_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(1)\n    {\n        {\n            twoIntsStruct data;\n            twoIntsStruct * pointer = (twoIntsStruct *)ALLOCA(sizeof(twoIntsStruct));\n            data.intOne = 1;\n            data.intTwo = 2;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct data = *pointer;\n                printIntLine(data.intOne);\n                printIntLine(data.intTwo);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_alloca_use_13_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(0)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            char * data;\n            char * * pointer = (char * *)ALLOCA(sizeof(char *));\n            data = \"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char * data = *pointer;\n                printLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__long_malloc_use_16_good()\n{\n    good1();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalReturnsTrueOrFalse())\n    {\n        {\n            int data;\n            int * pointer = (int *)ALLOCA(sizeof(int));\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int data = *pointer;\n                printIntLine(data);\n            }\n        }\n    }\n    else\n    {\n        {\n            int data;\n            int * pointer = (int *)ALLOCA(sizeof(int));\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int data = *pointer;\n                printIntLine(data);\n            }\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_malloc_use_08_bad()\n{\n    if(staticReturnsTrue())\n    {\n        {\n            wchar_t * * pointer = (wchar_t * *)malloc(sizeof(wchar_t *));\n            if (pointer == NULL) {exit(-1);}\n            wchar_t * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printWLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__w32_bare_return_implicit_01_good() \n{\n    good1();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_pointer_malloc_use_10_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int64_t_alloca_use_08_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(STATIC_CONST_TRUE)\n    {\n        {\n            wchar_t * data;\n            wchar_t * * pointer = (wchar_t * *)ALLOCA(sizeof(wchar_t *));\n            data = L\"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                wchar_t * data = *pointer;\n                printWLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(STATIC_CONST_FIVE==5)\n    {\n        {\n            twoIntsStruct data;\n            twoIntsStruct * pointer = (twoIntsStruct *)ALLOCA(sizeof(twoIntsStruct));\n            data.intOne = 1;\n            data.intTwo = 2;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct data = *pointer;\n                printIntLine(data.intOne);\n                printIntLine(data.intTwo);\n            }\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_pointer_malloc_use_05_bad()\n{\n    if(staticTrue)\n    {\n        {\n            twoIntsStruct * * pointer = (twoIntsStruct * *)malloc(sizeof(twoIntsStruct *));\n            if (pointer == NULL) {exit(-1);}\n            twoIntsStruct * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printIntLine(data->intOne);\n            printIntLine(data->intTwo);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalFalse)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            char data;\n            char * pointer = (char *)ALLOCA(sizeof(char));\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char data = *pointer;\n                printHexCharLine(data);\n            }\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__long_malloc_use_16_bad()\n{\n    while(1)\n    {\n        {\n            long * pointer = (long *)malloc(sizeof(long));\n            if (pointer == NULL) {exit(-1);}\n            long data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printLongLine(data);\n        }\n        break;\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_malloc_use_15_good()\n{\n    good1();\n    good2();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_malloc_use_13_bad()\n{\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        {\n            char * pointer = (char *)malloc(sizeof(char));\n            if (pointer == NULL) {exit(-1);}\n            char data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printHexCharLine(data);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int64_t_malloc_use_16_bad()\n{\n    while(1)\n    {\n        {\n            int64_t * pointer = (int64_t *)malloc(sizeof(int64_t));\n            if (pointer == NULL) {exit(-1);}\n            int64_t data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printLongLongLine(data);\n        }\n        break;\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(globalFive==5)\n    {\n        {\n            wchar_t * data;\n            wchar_t * * pointer = (wchar_t * *)malloc(sizeof(wchar_t *));\n            if (pointer == NULL) {exit(-1);}\n            data = L\"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                wchar_t * data = *pointer;\n                printWLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_alloca_use_05_bad()\n{\n    if(staticTrue)\n    {\n        {\n            int * pointer = (int *)ALLOCA(sizeof(int));\n            int data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printIntLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_pointer_alloca_use_17_good()\n{\n    good1();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_pointer_malloc_use_14_good()\n{\n    good1();\n    good2();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__long_malloc_use_06_bad()\n{\n    if(STATIC_CONST_FIVE==5)\n    {\n        {\n            long * pointer = (long *)malloc(sizeof(long));\n            if (pointer == NULL) {exit(-1);}\n            long data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printLongLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_malloc_use_12_good()\n{\n    good1();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int64_t_alloca_use_14_bad()\n{\n    if(globalFive==5)\n    {\n        {\n            int64_t * pointer = (int64_t *)ALLOCA(sizeof(int64_t));\n            int64_t data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printLongLongLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    while(1)\n    {\n        {\n            int data;\n            int * pointer = (int *)ALLOCA(sizeof(int));\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int data = *pointer;\n                printIntLine(data);\n            }\n        }\n        break;\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    while(1)\n    {\n        {\n            char * data;\n            char * * pointer = (char * *)ALLOCA(sizeof(char *));\n            data = \"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char * data = *pointer;\n                printLine(data);\n            }\n        }\n        break;\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(STATIC_CONST_FIVE!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            long data;\n            long * pointer = (long *)malloc(sizeof(long));\n            if (pointer == NULL) {exit(-1);}\n            data = 5L;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                long data = *pointer;\n                printLongLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_malloc_use_04_good()\n{\n    good1();\n    good2();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__w32_no_return_implicit_01_bad() \n{\n    int intBad = helperBad();\n    printIntLine(intBad);\n}"}
{"target": 0, "func": "static void good1()\n{\n    goto sink;\nsink:\n    {\n        char * data;\n        char * * pointer = (char * *)malloc(sizeof(char *));\n        if (pointer == NULL) {exit(-1);}\n        data = \"string\";\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            char * data = *pointer;\n            printLine(data);\n        }\n        free(pointer);\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(STATIC_CONST_TRUE)\n    {\n        {\n            char data;\n            char * pointer = (char *)malloc(sizeof(char));\n            if (pointer == NULL) {exit(-1);}\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char data = *pointer;\n                printHexCharLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    goto sink;\nsink:\n    {\n        int * data;\n        int * * pointer = (int * *)ALLOCA(sizeof(int *));\n        /* initialize both the pointer and the data pointed to */\n        data = (int *)malloc(sizeof(int));\n        if (data == NULL) {exit(-1);}\n        *data = 5;\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            int * data = *pointer;\n            printIntLine(*data);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_alloca_use_01_bad()\n{\n    {\n        wchar_t * * pointer = (wchar_t * *)ALLOCA(sizeof(wchar_t *));\n        wchar_t * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n        printWLine(data);\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalFalse)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            char * data;\n            char * * pointer = (char * *)malloc(sizeof(char *));\n            if (pointer == NULL) {exit(-1);}\n            data = \"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char * data = *pointer;\n                printLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(GLOBAL_CONST_FALSE)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int64_t data;\n            int64_t * pointer = (int64_t *)ALLOCA(sizeof(int64_t));\n            data = 5LL;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int64_t data = *pointer;\n                printLongLongLine(data);\n            }\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__long_malloc_use_10_bad()\n{\n    if(globalTrue)\n    {\n        {\n            long * pointer = (long *)malloc(sizeof(long));\n            if (pointer == NULL) {exit(-1);}\n            long data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printLongLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(staticTrue)\n    {\n        {\n            long data;\n            long * pointer = (long *)ALLOCA(sizeof(long));\n            data = 5L;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                long data = *pointer;\n                printLongLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(globalFive==5)\n    {\n        {\n            twoIntsStruct * data;\n            twoIntsStruct * * pointer = (twoIntsStruct * *)malloc(sizeof(twoIntsStruct *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (data == NULL) {exit(-1);}\n            data->intOne = 5;\n            data->intTwo = 6;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct * data = *pointer;\n                printIntLine(data->intOne);\n                printIntLine(data->intTwo);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(staticTrue)\n    {\n        {\n            long data;\n            long * pointer = (long *)malloc(sizeof(long));\n            if (pointer == NULL) {exit(-1);}\n            data = 5L;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                long data = *pointer;\n                printLongLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(0)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            char * data;\n            char * * pointer = (char * *)malloc(sizeof(char *));\n            if (pointer == NULL) {exit(-1);}\n            data = \"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char * data = *pointer;\n                printLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(staticReturnsFalse())\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int64_t data;\n            int64_t * pointer = (int64_t *)ALLOCA(sizeof(int64_t));\n            data = 5LL;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int64_t data = *pointer;\n                printLongLongLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(5==5)\n    {\n        {\n            long data;\n            long * pointer = (long *)malloc(sizeof(long));\n            if (pointer == NULL) {exit(-1);}\n            data = 5L;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                long data = *pointer;\n                printLongLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_alloca_use_11_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(globalFive==5)\n    {\n        {\n            int * data;\n            int * * pointer = (int * *)malloc(sizeof(int *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (int *)malloc(sizeof(int));\n            if (data == NULL) {exit(-1);}\n            *data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int * data = *pointer;\n                printIntLine(*data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_alloca_use_03_bad()\n{\n    if(5==5)\n    {\n        {\n            wchar_t * * pointer = (wchar_t * *)ALLOCA(sizeof(wchar_t *));\n            wchar_t * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printWLine(data);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__double_pointer_malloc_use_01_bad()\n{\n    {\n        double * * pointer = (double * *)malloc(sizeof(double *));\n        if (pointer == NULL) {exit(-1);}\n        double * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n        free(pointer);\n        printDoubleLine(*data);\n    }\n}"}
{"target": 1, "func": "static int helperBad(void)\n{\n    /* FLAW: bare return in a function with an explicit return type of int */\n    return;\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_malloc_use_08_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_pointer_malloc_use_17_good()\n{\n    good1();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_pointer_malloc_use_13_bad()\n{\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        {\n            twoIntsStruct * * pointer = (twoIntsStruct * *)malloc(sizeof(twoIntsStruct *));\n            if (pointer == NULL) {exit(-1);}\n            twoIntsStruct * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printIntLine(data->intOne);\n            printIntLine(data->intTwo);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalReturnsTrueOrFalse())\n    {\n        {\n            double * data;\n            double * * pointer = (double * *)malloc(sizeof(double *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (double *)malloc(sizeof(double));\n            if (data == NULL) {exit(-1);}\n            *data = 5.0;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                double * data = *pointer;\n                printDoubleLine(*data);\n            }\n            free(pointer);\n        }\n    }\n    else\n    {\n        {\n            double * data;\n            double * * pointer = (double * *)malloc(sizeof(double *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (double *)malloc(sizeof(double));\n            if (data == NULL) {exit(-1);}\n            *data = 5.0;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                double * data = *pointer;\n                printDoubleLine(*data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__double_pointer_alloca_use_07_bad()\n{\n    if(staticFive==5)\n    {\n        {\n            double * * pointer = (double * *)ALLOCA(sizeof(double *));\n            double * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printDoubleLine(*data);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_pointer_alloca_use_17_bad()\n{\n    int j;\n    for(j = 0; j < 1; j++)\n    {\n        {\n            int * * pointer = (int * *)ALLOCA(sizeof(int *));\n            int * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printIntLine(*data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(staticFive!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int64_t data;\n            int64_t * pointer = (int64_t *)ALLOCA(sizeof(int64_t));\n            data = 5LL;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int64_t data = *pointer;\n                printLongLongLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(STATIC_CONST_FIVE!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int64_t data;\n            int64_t * pointer = (int64_t *)ALLOCA(sizeof(int64_t));\n            data = 5LL;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int64_t data = *pointer;\n                printLongLongLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_alloca_use_06_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_alloca_use_18_good()\n{\n    good1();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_pointer_malloc_use_18_good()\n{\n    good1();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_alloca_use_02_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(5!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int data;\n            int * pointer = (int *)ALLOCA(sizeof(int));\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int data = *pointer;\n                printIntLine(data);\n            }\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_alloca_use_16_bad()\n{\n    while(1)\n    {\n        {\n            int * pointer = (int *)ALLOCA(sizeof(int));\n            int data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printIntLine(data);\n        }\n        break;\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__long_alloca_use_05_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1() \n{\n    int intGood1 = helperGood1();\n    printIntLine(intGood1);\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_malloc_use_04_bad()\n{\n    if(STATIC_CONST_TRUE)\n    {\n        {\n            int * pointer = (int *)malloc(sizeof(int));\n            if (pointer == NULL) {exit(-1);}\n            int data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printIntLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(5!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int * data;\n            int * * pointer = (int * *)ALLOCA(sizeof(int *));\n            /* initialize both the pointer and the data pointed to */\n            data = (int *)malloc(sizeof(int));\n            if (data == NULL) {exit(-1);}\n            *data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int * data = *pointer;\n                printIntLine(*data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__long_malloc_use_10_good()\n{\n    good1();\n    good2();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_pointer_alloca_use_18_bad()\n{\n    goto sink;\nsink:\n    {\n        int * * pointer = (int * *)ALLOCA(sizeof(int *));\n        int * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n        printIntLine(*data);\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    while(1)\n    {\n        {\n            double * data;\n            double * * pointer = (double * *)malloc(sizeof(double *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (double *)malloc(sizeof(double));\n            if (data == NULL) {exit(-1);}\n            *data = 5.0;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                double * data = *pointer;\n                printDoubleLine(*data);\n            }\n            free(pointer);\n        }\n        break;\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(staticFive==5)\n    {\n        {\n            int data;\n            int * pointer = (int *)malloc(sizeof(int));\n            if (pointer == NULL) {exit(-1);}\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int data = *pointer;\n                printIntLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(STATIC_CONST_FIVE!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            wchar_t * data;\n            wchar_t * * pointer = (wchar_t * *)ALLOCA(sizeof(wchar_t *));\n            data = L\"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                wchar_t * data = *pointer;\n                printWLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_alloca_use_11_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(staticReturnsTrue())\n    {\n        {\n            long data;\n            long * pointer = (long *)malloc(sizeof(long));\n            if (pointer == NULL) {exit(-1);}\n            data = 5L;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                long data = *pointer;\n                printLongLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(globalTrue)\n    {\n        {\n            char data;\n            char * pointer = (char *)malloc(sizeof(char));\n            if (pointer == NULL) {exit(-1);}\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char data = *pointer;\n                printHexCharLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(staticFive==5)\n    {\n        {\n            wchar_t * data;\n            wchar_t * * pointer = (wchar_t * *)malloc(sizeof(wchar_t *));\n            if (pointer == NULL) {exit(-1);}\n            data = L\"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                wchar_t * data = *pointer;\n                printWLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__double_pointer_malloc_use_18_bad()\n{\n    goto sink;\nsink:\n    {\n        double * * pointer = (double * *)malloc(sizeof(double *));\n        if (pointer == NULL) {exit(-1);}\n        double * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n        free(pointer);\n        printDoubleLine(*data);\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    switch(6)\n    {\n    case 6:\n    {\n        wchar_t * data;\n        wchar_t * * pointer = (wchar_t * *)malloc(sizeof(wchar_t *));\n        if (pointer == NULL) {exit(-1);}\n        data = L\"string\";\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            wchar_t * data = *pointer;\n            printWLine(data);\n        }\n        free(pointer);\n    }\n    break;\n    default:\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalReturnsFalse())\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            twoIntsStruct data;\n            twoIntsStruct * pointer = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (pointer == NULL) {exit(-1);}\n            data.intOne = 1;\n            data.intTwo = 2;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct data = *pointer;\n                printIntLine(data.intOne);\n                printIntLine(data.intTwo);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(0)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            twoIntsStruct data;\n            twoIntsStruct * pointer = (twoIntsStruct *)ALLOCA(sizeof(twoIntsStruct));\n            data.intOne = 1;\n            data.intTwo = 2;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct data = *pointer;\n                printIntLine(data.intOne);\n                printIntLine(data.intTwo);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(STATIC_CONST_TRUE)\n    {\n        {\n            long data;\n            long * pointer = (long *)malloc(sizeof(long));\n            if (pointer == NULL) {exit(-1);}\n            data = 5L;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                long data = *pointer;\n                printLongLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(staticReturnsFalse())\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            double * data;\n            double * * pointer = (double * *)malloc(sizeof(double *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (double *)malloc(sizeof(double));\n            if (data == NULL) {exit(-1);}\n            *data = 5.0;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                double * data = *pointer;\n                printDoubleLine(*data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalReturnsFalse())\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            long data;\n            long * pointer = (long *)malloc(sizeof(long));\n            if (pointer == NULL) {exit(-1);}\n            data = 5L;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                long data = *pointer;\n                printLongLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(globalReturnsTrue())\n    {\n        {\n            char * data;\n            char * * pointer = (char * *)malloc(sizeof(char *));\n            if (pointer == NULL) {exit(-1);}\n            data = \"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char * data = *pointer;\n                printLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalReturnsFalse())\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            long data;\n            long * pointer = (long *)ALLOCA(sizeof(long));\n            data = 5L;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                long data = *pointer;\n                printLongLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static int helperGood1(void)\n{\n    /* FIX: return a value */\n    return 5;\n}"}
{"target": 0, "func": "static void good2()\n{\n    switch(6)\n    {\n    case 6:\n    {\n        wchar_t * data;\n        wchar_t * * pointer = (wchar_t * *)ALLOCA(sizeof(wchar_t *));\n        data = L\"string\";\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            wchar_t * data = *pointer;\n            printWLine(data);\n        }\n    }\n    break;\n    default:\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    switch(5)\n    {\n    case 6:\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n    {\n        int * data;\n        int * * pointer = (int * *)malloc(sizeof(int *));\n        if (pointer == NULL) {exit(-1);}\n        /* initialize both the pointer and the data pointed to */\n        data = (int *)malloc(sizeof(int));\n        if (data == NULL) {exit(-1);}\n        *data = 5;\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            int * data = *pointer;\n            printIntLine(*data);\n        }\n        free(pointer);\n    }\n    break;\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_malloc_use_18_good()\n{\n    good1();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(staticFive!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            long data;\n            long * pointer = (long *)ALLOCA(sizeof(long));\n            data = 5L;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                long data = *pointer;\n                printLongLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_alloca_use_18_good()\n{\n    good1();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_pointer_alloca_use_04_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(1)\n    {\n        {\n            char data;\n            char * pointer = (char *)malloc(sizeof(char));\n            if (pointer == NULL) {exit(-1);}\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char data = *pointer;\n                printHexCharLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    switch(5)\n    {\n    case 6:\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n    {\n        int data;\n        int * pointer = (int *)malloc(sizeof(int));\n        if (pointer == NULL) {exit(-1);}\n        data = 5;\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            int data = *pointer;\n            printIntLine(data);\n        }\n        free(pointer);\n    }\n    break;\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(1)\n    {\n        {\n            double * data;\n            double * * pointer = (double * *)malloc(sizeof(double *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (double *)malloc(sizeof(double));\n            if (data == NULL) {exit(-1);}\n            *data = 5.0;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                double * data = *pointer;\n                printDoubleLine(*data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(STATIC_CONST_FIVE!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            double * data;\n            double * * pointer = (double * *)malloc(sizeof(double *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (double *)malloc(sizeof(double));\n            if (data == NULL) {exit(-1);}\n            *data = 5.0;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                double * data = *pointer;\n                printDoubleLine(*data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int64_t_malloc_use_18_bad()\n{\n    goto sink;\nsink:\n    {\n        int64_t * pointer = (int64_t *)malloc(sizeof(int64_t));\n        if (pointer == NULL) {exit(-1);}\n        int64_t data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n        free(pointer);\n        printLongLongLine(data);\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_pointer_alloca_use_10_bad()\n{\n    if(globalTrue)\n    {\n        {\n            twoIntsStruct * * pointer = (twoIntsStruct * *)ALLOCA(sizeof(twoIntsStruct *));\n            twoIntsStruct * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printIntLine(data->intOne);\n            printIntLine(data->intTwo);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_pointer_malloc_use_07_bad()\n{\n    if(staticFive==5)\n    {\n        {\n            char * * pointer = (char * *)malloc(sizeof(char *));\n            if (pointer == NULL) {exit(-1);}\n            char * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    switch(5)\n    {\n    case 6:\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n    {\n        twoIntsStruct data;\n        twoIntsStruct * pointer = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n        if (pointer == NULL) {exit(-1);}\n        data.intOne = 1;\n        data.intTwo = 2;\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            twoIntsStruct data = *pointer;\n            printIntLine(data.intOne);\n            printIntLine(data.intTwo);\n        }\n        free(pointer);\n    }\n    break;\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    int k;\n    for(k = 0; k < 1; k++)\n    {\n        {\n            twoIntsStruct * data;\n            twoIntsStruct * * pointer = (twoIntsStruct * *)ALLOCA(sizeof(twoIntsStruct *));\n            /* initialize both the pointer and the data pointed to */\n            data = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (data == NULL) {exit(-1);}\n            data->intOne = 5;\n            data->intTwo = 6;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct * data = *pointer;\n                printIntLine(data->intOne);\n                printIntLine(data->intTwo);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(GLOBAL_CONST_FIVE!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            twoIntsStruct * data;\n            twoIntsStruct * * pointer = (twoIntsStruct * *)ALLOCA(sizeof(twoIntsStruct *));\n            /* initialize both the pointer and the data pointed to */\n            data = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (data == NULL) {exit(-1);}\n            data->intOne = 5;\n            data->intTwo = 6;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct * data = *pointer;\n                printIntLine(data->intOne);\n                printIntLine(data->intTwo);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    switch(5)\n    {\n    case 6:\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n    {\n        twoIntsStruct data;\n        twoIntsStruct * pointer = (twoIntsStruct *)ALLOCA(sizeof(twoIntsStruct));\n        data.intOne = 1;\n        data.intTwo = 2;\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            twoIntsStruct data = *pointer;\n            printIntLine(data.intOne);\n            printIntLine(data.intTwo);\n        }\n    }\n    break;\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(STATIC_CONST_FIVE==5)\n    {\n        {\n            wchar_t * data;\n            wchar_t * * pointer = (wchar_t * *)malloc(sizeof(wchar_t *));\n            if (pointer == NULL) {exit(-1);}\n            data = L\"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                wchar_t * data = *pointer;\n                printWLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_pointer_alloca_use_17_good()\n{\n    good1();\n}"}
{"target": 0, "func": "static void good2()\n{\n    switch(6)\n    {\n    case 6:\n    {\n        int64_t data;\n        int64_t * pointer = (int64_t *)ALLOCA(sizeof(int64_t));\n        data = 5LL;\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            int64_t data = *pointer;\n            printLongLongLine(data);\n        }\n    }\n    break;\n    default:\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(staticFive==5)\n    {\n        {\n            twoIntsStruct * data;\n            twoIntsStruct * * pointer = (twoIntsStruct * *)ALLOCA(sizeof(twoIntsStruct *));\n            /* initialize both the pointer and the data pointed to */\n            data = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (data == NULL) {exit(-1);}\n            data->intOne = 5;\n            data->intTwo = 6;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct * data = *pointer;\n                printIntLine(data->intOne);\n                printIntLine(data->intTwo);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_malloc_use_06_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalReturnsFalse())\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            double * data;\n            double * * pointer = (double * *)malloc(sizeof(double *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (double *)malloc(sizeof(double));\n            if (data == NULL) {exit(-1);}\n            *data = 5.0;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                double * data = *pointer;\n                printDoubleLine(*data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalReturnsFalse())\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            char data;\n            char * pointer = (char *)malloc(sizeof(char));\n            if (pointer == NULL) {exit(-1);}\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char data = *pointer;\n                printHexCharLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int64_t_alloca_use_08_bad()\n{\n    if(staticReturnsTrue())\n    {\n        {\n            int64_t * pointer = (int64_t *)ALLOCA(sizeof(int64_t));\n            int64_t data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printLongLongLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(5==5)\n    {\n        {\n            twoIntsStruct * data;\n            twoIntsStruct * * pointer = (twoIntsStruct * *)ALLOCA(sizeof(twoIntsStruct *));\n            /* initialize both the pointer and the data pointed to */\n            data = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (data == NULL) {exit(-1);}\n            data->intOne = 5;\n            data->intTwo = 6;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct * data = *pointer;\n                printIntLine(data->intOne);\n                printIntLine(data->intTwo);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_pointer_alloca_use_14_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(globalFive==5)\n    {\n        {\n            int * data;\n            int * * pointer = (int * *)ALLOCA(sizeof(int *));\n            /* initialize both the pointer and the data pointed to */\n            data = (int *)malloc(sizeof(int));\n            if (data == NULL) {exit(-1);}\n            *data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int * data = *pointer;\n                printIntLine(*data);\n            }\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__double_pointer_malloc_use_11_bad()\n{\n    if(globalReturnsTrue())\n    {\n        {\n            double * * pointer = (double * *)malloc(sizeof(double *));\n            if (pointer == NULL) {exit(-1);}\n            double * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printDoubleLine(*data);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__double_pointer_alloca_use_09_bad()\n{\n    if(GLOBAL_CONST_TRUE)\n    {\n        {\n            double * * pointer = (double * *)ALLOCA(sizeof(double *));\n            double * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printDoubleLine(*data);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_pointer_alloca_use_08_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(staticTrue)\n    {\n        {\n            twoIntsStruct data;\n            twoIntsStruct * pointer = (twoIntsStruct *)ALLOCA(sizeof(twoIntsStruct));\n            data.intOne = 1;\n            data.intTwo = 2;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct data = *pointer;\n                printIntLine(data.intOne);\n                printIntLine(data.intTwo);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_pointer_malloc_use_06_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int64_t_alloca_use_16_good()\n{\n    good1();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_pointer_malloc_use_12_good()\n{\n    good1();\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(1)\n    {\n        {\n            int64_t data;\n            int64_t * pointer = (int64_t *)ALLOCA(sizeof(int64_t));\n            data = 5LL;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int64_t data = *pointer;\n                printLongLongLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(staticTrue)\n    {\n        {\n            char data;\n            char * pointer = (char *)malloc(sizeof(char));\n            if (pointer == NULL) {exit(-1);}\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char data = *pointer;\n                printHexCharLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_pointer_malloc_use_16_bad()\n{\n    while(1)\n    {\n        {\n            char * * pointer = (char * *)malloc(sizeof(char *));\n            if (pointer == NULL) {exit(-1);}\n            char * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printLine(data);\n        }\n        break;\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(staticFalse)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            char * data;\n            char * * pointer = (char * *)ALLOCA(sizeof(char *));\n            data = \"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char * data = *pointer;\n                printLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(GLOBAL_CONST_TRUE)\n    {\n        {\n            wchar_t * data;\n            wchar_t * * pointer = (wchar_t * *)ALLOCA(sizeof(wchar_t *));\n            data = L\"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                wchar_t * data = *pointer;\n                printWLine(data);\n            }\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int64_t_malloc_use_11_bad()\n{\n    if(globalReturnsTrue())\n    {\n        {\n            int64_t * pointer = (int64_t *)malloc(sizeof(int64_t));\n            if (pointer == NULL) {exit(-1);}\n            int64_t data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printLongLongLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(staticFive!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            twoIntsStruct * data;\n            twoIntsStruct * * pointer = (twoIntsStruct * *)malloc(sizeof(twoIntsStruct *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (data == NULL) {exit(-1);}\n            data->intOne = 5;\n            data->intTwo = 6;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct * data = *pointer;\n                printIntLine(data->intOne);\n                printIntLine(data->intTwo);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(STATIC_CONST_FALSE)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int64_t data;\n            int64_t * pointer = (int64_t *)ALLOCA(sizeof(int64_t));\n            data = 5LL;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int64_t data = *pointer;\n                printLongLongLine(data);\n            }\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_pointer_malloc_use_04_bad()\n{\n    if(STATIC_CONST_TRUE)\n    {\n        {\n            twoIntsStruct * * pointer = (twoIntsStruct * *)malloc(sizeof(twoIntsStruct *));\n            if (pointer == NULL) {exit(-1);}\n            twoIntsStruct * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printIntLine(data->intOne);\n            printIntLine(data->intTwo);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(5==5)\n    {\n        {\n            wchar_t * data;\n            wchar_t * * pointer = (wchar_t * *)ALLOCA(sizeof(wchar_t *));\n            data = L\"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                wchar_t * data = *pointer;\n                printWLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good1() \n{\n    int intGood1 = helperGood1();\n    printIntLine(intGood1);\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_malloc_use_11_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    int k;\n    for(k = 0; k < 1; k++)\n    {\n        {\n            int64_t data;\n            int64_t * pointer = (int64_t *)malloc(sizeof(int64_t));\n            if (pointer == NULL) {exit(-1);}\n            data = 5LL;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int64_t data = *pointer;\n                printLongLongLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(1)\n    {\n        {\n            twoIntsStruct data;\n            twoIntsStruct * pointer = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (pointer == NULL) {exit(-1);}\n            data.intOne = 1;\n            data.intTwo = 2;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct data = *pointer;\n                printIntLine(data.intOne);\n                printIntLine(data.intTwo);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_alloca_use_14_good()\n{\n    good1();\n    good2();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_pointer_alloca_use_02_bad()\n{\n    if(1)\n    {\n        {\n            char * * pointer = (char * *)ALLOCA(sizeof(char *));\n            char * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalReturnsTrueOrFalse())\n    {\n        {\n            long data;\n            long * pointer = (long *)ALLOCA(sizeof(long));\n            data = 5L;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                long data = *pointer;\n                printLongLine(data);\n            }\n        }\n    }\n    else\n    {\n        {\n            long data;\n            long * pointer = (long *)ALLOCA(sizeof(long));\n            data = 5L;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                long data = *pointer;\n                printLongLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(5==5)\n    {\n        {\n            twoIntsStruct data;\n            twoIntsStruct * pointer = (twoIntsStruct *)ALLOCA(sizeof(twoIntsStruct));\n            data.intOne = 1;\n            data.intTwo = 2;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct data = *pointer;\n                printIntLine(data.intOne);\n                printIntLine(data.intTwo);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_pointer_alloca_use_12_good()\n{\n    good1();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_alloca_use_17_good()\n{\n    good1();\n}"}
{"target": 0, "func": "static void good1()\n{\n    int k;\n    for(k = 0; k < 1; k++)\n    {\n        {\n            long data;\n            long * pointer = (long *)ALLOCA(sizeof(long));\n            data = 5L;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                long data = *pointer;\n                printLongLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(globalReturnsTrue())\n    {\n        {\n            int * data;\n            int * * pointer = (int * *)ALLOCA(sizeof(int *));\n            /* initialize both the pointer and the data pointed to */\n            data = (int *)malloc(sizeof(int));\n            if (data == NULL) {exit(-1);}\n            *data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int * data = *pointer;\n                printIntLine(*data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int64_t_malloc_use_15_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_pointer_alloca_use_06_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int64_t_alloca_use_14_good()\n{\n    good1();\n    good2();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_pointer_malloc_use_05_bad()\n{\n    if(staticTrue)\n    {\n        {\n            char * * pointer = (char * *)malloc(sizeof(char *));\n            if (pointer == NULL) {exit(-1);}\n            char * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(globalTrue)\n    {\n        {\n            int64_t data;\n            int64_t * pointer = (int64_t *)malloc(sizeof(int64_t));\n            if (pointer == NULL) {exit(-1);}\n            data = 5LL;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int64_t data = *pointer;\n                printLongLongLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_malloc_use_01_bad()\n{\n    {\n        wchar_t * * pointer = (wchar_t * *)malloc(sizeof(wchar_t *));\n        if (pointer == NULL) {exit(-1);}\n        wchar_t * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n        free(pointer);\n        printWLine(data);\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_malloc_use_07_bad()\n{\n    if(staticFive==5)\n    {\n        {\n            wchar_t * * pointer = (wchar_t * *)malloc(sizeof(wchar_t *));\n            if (pointer == NULL) {exit(-1);}\n            wchar_t * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printWLine(data);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int64_t_alloca_use_09_bad()\n{\n    if(GLOBAL_CONST_TRUE)\n    {\n        {\n            int64_t * pointer = (int64_t *)ALLOCA(sizeof(int64_t));\n            int64_t data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printLongLongLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__long_malloc_use_17_good()\n{\n    good1();\n}"}
{"target": 0, "func": "static void good1()\n{\n    int k;\n    for(k = 0; k < 1; k++)\n    {\n        {\n            double * data;\n            double * * pointer = (double * *)malloc(sizeof(double *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (double *)malloc(sizeof(double));\n            if (data == NULL) {exit(-1);}\n            *data = 5.0;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                double * data = *pointer;\n                printDoubleLine(*data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_malloc_use_08_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    while(1)\n    {\n        {\n            int data;\n            int * pointer = (int *)malloc(sizeof(int));\n            if (pointer == NULL) {exit(-1);}\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int data = *pointer;\n                printIntLine(data);\n            }\n            free(pointer);\n        }\n        break;\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_pointer_alloca_use_13_bad()\n{\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        {\n            twoIntsStruct * * pointer = (twoIntsStruct * *)ALLOCA(sizeof(twoIntsStruct *));\n            twoIntsStruct * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printIntLine(data->intOne);\n            printIntLine(data->intTwo);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(staticTrue)\n    {\n        {\n            char * data;\n            char * * pointer = (char * *)ALLOCA(sizeof(char *));\n            data = \"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char * data = *pointer;\n                printLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(5!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            wchar_t * data;\n            wchar_t * * pointer = (wchar_t * *)ALLOCA(sizeof(wchar_t *));\n            data = L\"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                wchar_t * data = *pointer;\n                printWLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(GLOBAL_CONST_TRUE)\n    {\n        {\n            wchar_t * data;\n            wchar_t * * pointer = (wchar_t * *)malloc(sizeof(wchar_t *));\n            if (pointer == NULL) {exit(-1);}\n            data = L\"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                wchar_t * data = *pointer;\n                printWLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int64_t_malloc_use_09_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(staticFalse)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int data;\n            int * pointer = (int *)ALLOCA(sizeof(int));\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int data = *pointer;\n                printIntLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_malloc_use_09_good()\n{\n    good1();\n    good2();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_malloc_use_03_bad()\n{\n    if(5==5)\n    {\n        {\n            twoIntsStruct * pointer = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (pointer == NULL) {exit(-1);}\n            twoIntsStruct data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printIntLine(data.intOne);\n            printIntLine(data.intTwo);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(0)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int64_t data;\n            int64_t * pointer = (int64_t *)malloc(sizeof(int64_t));\n            if (pointer == NULL) {exit(-1);}\n            data = 5LL;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int64_t data = *pointer;\n                printLongLongLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalReturnsFalse())\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            wchar_t * data;\n            wchar_t * * pointer = (wchar_t * *)malloc(sizeof(wchar_t *));\n            if (pointer == NULL) {exit(-1);}\n            data = L\"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                wchar_t * data = *pointer;\n                printWLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_alloca_use_12_good()\n{\n    good1();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_malloc_use_14_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalReturnsFalse())\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            twoIntsStruct * data;\n            twoIntsStruct * * pointer = (twoIntsStruct * *)ALLOCA(sizeof(twoIntsStruct *));\n            /* initialize both the pointer and the data pointed to */\n            data = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (data == NULL) {exit(-1);}\n            data->intOne = 5;\n            data->intTwo = 6;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct * data = *pointer;\n                printIntLine(data->intOne);\n                printIntLine(data->intTwo);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalReturnsFalse())\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int data;\n            int * pointer = (int *)malloc(sizeof(int));\n            if (pointer == NULL) {exit(-1);}\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int data = *pointer;\n                printIntLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(GLOBAL_CONST_FIVE!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            wchar_t * data;\n            wchar_t * * pointer = (wchar_t * *)ALLOCA(sizeof(wchar_t *));\n            data = L\"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                wchar_t * data = *pointer;\n                printWLine(data);\n            }\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__long_alloca_use_13_bad()\n{\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        {\n            long * pointer = (long *)ALLOCA(sizeof(long));\n            long data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printLongLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_malloc_use_01_good()\n{\n    good1();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int64_t_malloc_use_17_good()\n{\n    good1();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_alloca_use_07_bad()\n{\n    if(staticFive==5)\n    {\n        {\n            twoIntsStruct * pointer = (twoIntsStruct *)ALLOCA(sizeof(twoIntsStruct));\n            twoIntsStruct data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printIntLine(data.intOne);\n            printIntLine(data.intTwo);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_pointer_malloc_use_09_bad()\n{\n    if(GLOBAL_CONST_TRUE)\n    {\n        {\n            twoIntsStruct * * pointer = (twoIntsStruct * *)malloc(sizeof(twoIntsStruct *));\n            if (pointer == NULL) {exit(-1);}\n            twoIntsStruct * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printIntLine(data->intOne);\n            printIntLine(data->intTwo);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_malloc_use_18_bad()\n{\n    goto sink;\nsink:\n    {\n        wchar_t * * pointer = (wchar_t * *)malloc(sizeof(wchar_t *));\n        if (pointer == NULL) {exit(-1);}\n        wchar_t * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n        free(pointer);\n        printWLine(data);\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_pointer_malloc_use_11_bad()\n{\n    if(globalReturnsTrue())\n    {\n        {\n            int * * pointer = (int * *)malloc(sizeof(int *));\n            if (pointer == NULL) {exit(-1);}\n            int * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printIntLine(*data);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_malloc_use_16_good()\n{\n    good1();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__double_pointer_alloca_use_15_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_malloc_use_07_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_pointer_malloc_use_02_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(1)\n    {\n        {\n            wchar_t * data;\n            wchar_t * * pointer = (wchar_t * *)ALLOCA(sizeof(wchar_t *));\n            data = L\"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                wchar_t * data = *pointer;\n                printWLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalReturnsFalse())\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int64_t data;\n            int64_t * pointer = (int64_t *)ALLOCA(sizeof(int64_t));\n            data = 5LL;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int64_t data = *pointer;\n                printLongLongLine(data);\n            }\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_alloca_use_12_bad()\n{\n    if(globalReturnsTrueOrFalse())\n    {\n        {\n            int * pointer = (int *)ALLOCA(sizeof(int));\n            int data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printIntLine(data);\n        }\n    }\n    else\n    {\n        {\n            int data;\n            int * pointer = (int *)ALLOCA(sizeof(int));\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int data = *pointer;\n                printIntLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(0)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            char data;\n            char * pointer = (char *)malloc(sizeof(char));\n            if (pointer == NULL) {exit(-1);}\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char data = *pointer;\n                printHexCharLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(globalTrue)\n    {\n        {\n            double * data;\n            double * * pointer = (double * *)ALLOCA(sizeof(double *));\n            /* initialize both the pointer and the data pointed to */\n            data = (double *)malloc(sizeof(double));\n            if (data == NULL) {exit(-1);}\n            *data = 5.0;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                double * data = *pointer;\n                printDoubleLine(*data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__long_malloc_use_18_good()\n{\n    good1();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_pointer_alloca_use_12_bad()\n{\n    if(globalReturnsTrueOrFalse())\n    {\n        {\n            int * * pointer = (int * *)ALLOCA(sizeof(int *));\n            int * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printIntLine(*data);\n        }\n    }\n    else\n    {\n        {\n            int * data;\n            int * * pointer = (int * *)ALLOCA(sizeof(int *));\n            /* initialize both the pointer and the data pointed to */\n            data = (int *)malloc(sizeof(int));\n            if (data == NULL) {exit(-1);}\n            *data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int * data = *pointer;\n                printIntLine(*data);\n            }\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_malloc_use_11_bad()\n{\n    if(globalReturnsTrue())\n    {\n        {\n            char * pointer = (char *)malloc(sizeof(char));\n            if (pointer == NULL) {exit(-1);}\n            char data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printHexCharLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_pointer_malloc_use_03_good()\n{\n    good1();\n    good2();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_pointer_alloca_use_04_bad()\n{\n    if(STATIC_CONST_TRUE)\n    {\n        {\n            twoIntsStruct * * pointer = (twoIntsStruct * *)ALLOCA(sizeof(twoIntsStruct *));\n            twoIntsStruct * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printIntLine(data->intOne);\n            printIntLine(data->intTwo);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalReturnsFalse())\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            char * data;\n            char * * pointer = (char * *)ALLOCA(sizeof(char *));\n            data = \"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char * data = *pointer;\n                printLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_pointer_malloc_use_10_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalReturnsTrueOrFalse())\n    {\n        {\n            int * data;\n            int * * pointer = (int * *)malloc(sizeof(int *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (int *)malloc(sizeof(int));\n            if (data == NULL) {exit(-1);}\n            *data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int * data = *pointer;\n                printIntLine(*data);\n            }\n            free(pointer);\n        }\n    }\n    else\n    {\n        {\n            int * data;\n            int * * pointer = (int * *)malloc(sizeof(int *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (int *)malloc(sizeof(int));\n            if (data == NULL) {exit(-1);}\n            *data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int * data = *pointer;\n                printIntLine(*data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalReturnsTrueOrFalse())\n    {\n        {\n            double * data;\n            double * * pointer = (double * *)ALLOCA(sizeof(double *));\n            /* initialize both the pointer and the data pointed to */\n            data = (double *)malloc(sizeof(double));\n            if (data == NULL) {exit(-1);}\n            *data = 5.0;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                double * data = *pointer;\n                printDoubleLine(*data);\n            }\n        }\n    }\n    else\n    {\n        {\n            double * data;\n            double * * pointer = (double * *)ALLOCA(sizeof(double *));\n            /* initialize both the pointer and the data pointed to */\n            data = (double *)malloc(sizeof(double));\n            if (data == NULL) {exit(-1);}\n            *data = 5.0;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                double * data = *pointer;\n                printDoubleLine(*data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(globalTrue)\n    {\n        {\n            wchar_t * data;\n            wchar_t * * pointer = (wchar_t * *)ALLOCA(sizeof(wchar_t *));\n            data = L\"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                wchar_t * data = *pointer;\n                printWLine(data);\n            }\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_pointer_malloc_use_10_bad()\n{\n    if(globalTrue)\n    {\n        {\n            char * * pointer = (char * *)malloc(sizeof(char *));\n            if (pointer == NULL) {exit(-1);}\n            char * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printLine(data);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int64_t_alloca_use_18_bad()\n{\n    goto sink;\nsink:\n    {\n        int64_t * pointer = (int64_t *)ALLOCA(sizeof(int64_t));\n        int64_t data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n        printLongLongLine(data);\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    switch(6)\n    {\n    case 6:\n    {\n        twoIntsStruct * data;\n        twoIntsStruct * * pointer = (twoIntsStruct * *)malloc(sizeof(twoIntsStruct *));\n        if (pointer == NULL) {exit(-1);}\n        /* initialize both the pointer and the data pointed to */\n        data = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n        if (data == NULL) {exit(-1);}\n        data->intOne = 5;\n        data->intTwo = 6;\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            twoIntsStruct * data = *pointer;\n            printIntLine(data->intOne);\n            printIntLine(data->intTwo);\n        }\n        free(pointer);\n    }\n    break;\n    default:\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_alloca_use_13_bad()\n{\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        {\n            char * pointer = (char *)ALLOCA(sizeof(char));\n            char data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printHexCharLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_alloca_use_15_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_pointer_alloca_use_05_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(staticReturnsTrue())\n    {\n        {\n            char * data;\n            char * * pointer = (char * *)malloc(sizeof(char *));\n            if (pointer == NULL) {exit(-1);}\n            data = \"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char * data = *pointer;\n                printLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__double_pointer_malloc_use_03_bad()\n{\n    if(5==5)\n    {\n        {\n            double * * pointer = (double * *)malloc(sizeof(double *));\n            if (pointer == NULL) {exit(-1);}\n            double * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printDoubleLine(*data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    while(1)\n    {\n        {\n            long data;\n            long * pointer = (long *)ALLOCA(sizeof(long));\n            data = 5L;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                long data = *pointer;\n                printLongLine(data);\n            }\n        }\n        break;\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalFive!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            char * data;\n            char * * pointer = (char * *)malloc(sizeof(char *));\n            if (pointer == NULL) {exit(-1);}\n            data = \"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char * data = *pointer;\n                printLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_alloca_use_07_good()\n{\n    good1();\n    good2();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_alloca_use_08_bad()\n{\n    if(staticReturnsTrue())\n    {\n        {\n            int * pointer = (int *)ALLOCA(sizeof(int));\n            int data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printIntLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(STATIC_CONST_FIVE!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int64_t data;\n            int64_t * pointer = (int64_t *)malloc(sizeof(int64_t));\n            if (pointer == NULL) {exit(-1);}\n            data = 5LL;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int64_t data = *pointer;\n                printLongLongLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(5==5)\n    {\n        {\n            int64_t data;\n            int64_t * pointer = (int64_t *)malloc(sizeof(int64_t));\n            if (pointer == NULL) {exit(-1);}\n            data = 5LL;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int64_t data = *pointer;\n                printLongLongLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__long_malloc_use_03_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_pointer_malloc_use_07_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(GLOBAL_CONST_TRUE)\n    {\n        {\n            int data;\n            int * pointer = (int *)malloc(sizeof(int));\n            if (pointer == NULL) {exit(-1);}\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int data = *pointer;\n                printIntLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(staticFalse)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            twoIntsStruct data;\n            twoIntsStruct * pointer = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (pointer == NULL) {exit(-1);}\n            data.intOne = 1;\n            data.intTwo = 2;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct data = *pointer;\n                printIntLine(data.intOne);\n                printIntLine(data.intTwo);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_malloc_use_06_bad()\n{\n    if(STATIC_CONST_FIVE==5)\n    {\n        {\n            int * pointer = (int *)malloc(sizeof(int));\n            if (pointer == NULL) {exit(-1);}\n            int data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printIntLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(0)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int data;\n            int * pointer = (int *)ALLOCA(sizeof(int));\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int data = *pointer;\n                printIntLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(1)\n    {\n        {\n            long data;\n            long * pointer = (long *)malloc(sizeof(long));\n            if (pointer == NULL) {exit(-1);}\n            data = 5L;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                long data = *pointer;\n                printLongLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    switch(6)\n    {\n    case 6:\n    {\n        int data;\n        int * pointer = (int *)ALLOCA(sizeof(int));\n        data = 5;\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            int data = *pointer;\n            printIntLine(data);\n        }\n    }\n    break;\n    default:\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    goto sink;\nsink:\n    {\n        long data;\n        long * pointer = (long *)malloc(sizeof(long));\n        if (pointer == NULL) {exit(-1);}\n        data = 5L;\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            long data = *pointer;\n            printLongLine(data);\n        }\n        free(pointer);\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int64_t_alloca_use_02_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_alloca_use_05_good()\n{\n    good1();\n    good2();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_pointer_malloc_use_16_bad()\n{\n    while(1)\n    {\n        {\n            twoIntsStruct * * pointer = (twoIntsStruct * *)malloc(sizeof(twoIntsStruct *));\n            if (pointer == NULL) {exit(-1);}\n            twoIntsStruct * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printIntLine(data->intOne);\n            printIntLine(data->intTwo);\n        }\n        break;\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(STATIC_CONST_FIVE==5)\n    {\n        {\n            char * data;\n            char * * pointer = (char * *)ALLOCA(sizeof(char *));\n            data = \"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char * data = *pointer;\n                printLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(staticReturnsTrue())\n    {\n        {\n            int * data;\n            int * * pointer = (int * *)ALLOCA(sizeof(int *));\n            /* initialize both the pointer and the data pointed to */\n            data = (int *)malloc(sizeof(int));\n            if (data == NULL) {exit(-1);}\n            *data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int * data = *pointer;\n                printIntLine(*data);\n            }\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__double_pointer_malloc_use_13_bad()\n{\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        {\n            double * * pointer = (double * *)malloc(sizeof(double *));\n            if (pointer == NULL) {exit(-1);}\n            double * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printDoubleLine(*data);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_malloc_use_16_good()\n{\n    good1();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__long_alloca_use_10_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_pointer_malloc_use_11_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__long_malloc_use_05_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_malloc_use_17_good()\n{\n    good1();\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(STATIC_CONST_FIVE==5)\n    {\n        {\n            double * data;\n            double * * pointer = (double * *)ALLOCA(sizeof(double *));\n            /* initialize both the pointer and the data pointed to */\n            data = (double *)malloc(sizeof(double));\n            if (data == NULL) {exit(-1);}\n            *data = 5.0;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                double * data = *pointer;\n                printDoubleLine(*data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_malloc_use_10_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalFalse)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int64_t data;\n            int64_t * pointer = (int64_t *)ALLOCA(sizeof(int64_t));\n            data = 5LL;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int64_t data = *pointer;\n                printLongLongLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_malloc_use_18_good()\n{\n    good1();\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(GLOBAL_CONST_TRUE)\n    {\n        {\n            int * data;\n            int * * pointer = (int * *)ALLOCA(sizeof(int *));\n            /* initialize both the pointer and the data pointed to */\n            data = (int *)malloc(sizeof(int));\n            if (data == NULL) {exit(-1);}\n            *data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int * data = *pointer;\n                printIntLine(*data);\n            }\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_malloc_use_01_bad()\n{\n    {\n        char * pointer = (char *)malloc(sizeof(char));\n        if (pointer == NULL) {exit(-1);}\n        char data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n        free(pointer);\n        printHexCharLine(data);\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_pointer_alloca_use_15_bad()\n{\n    switch(6)\n    {\n    case 6:\n    {\n        char * * pointer = (char * *)ALLOCA(sizeof(char *));\n        char * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n        printLine(data);\n    }\n    break;\n    default:\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_malloc_use_11_bad()\n{\n    if(globalReturnsTrue())\n    {\n        {\n            twoIntsStruct * pointer = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (pointer == NULL) {exit(-1);}\n            twoIntsStruct data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printIntLine(data.intOne);\n            printIntLine(data.intTwo);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    while(1)\n    {\n        {\n            long data;\n            long * pointer = (long *)malloc(sizeof(long));\n            if (pointer == NULL) {exit(-1);}\n            data = 5L;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                long data = *pointer;\n                printLongLine(data);\n            }\n            free(pointer);\n        }\n        break;\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_pointer_alloca_use_07_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_pointer_alloca_use_16_good()\n{\n    good1();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_pointer_malloc_use_05_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(STATIC_CONST_FIVE!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            twoIntsStruct * data;\n            twoIntsStruct * * pointer = (twoIntsStruct * *)malloc(sizeof(twoIntsStruct *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (data == NULL) {exit(-1);}\n            data->intOne = 5;\n            data->intTwo = 6;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct * data = *pointer;\n                printIntLine(data->intOne);\n                printIntLine(data->intTwo);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(GLOBAL_CONST_TRUE)\n    {\n        {\n            char * data;\n            char * * pointer = (char * *)ALLOCA(sizeof(char *));\n            data = \"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char * data = *pointer;\n                printLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    goto sink;\nsink:\n    {\n        twoIntsStruct data;\n        twoIntsStruct * pointer = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n        if (pointer == NULL) {exit(-1);}\n        data.intOne = 1;\n        data.intTwo = 2;\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            twoIntsStruct data = *pointer;\n            printIntLine(data.intOne);\n            printIntLine(data.intTwo);\n        }\n        free(pointer);\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_malloc_use_15_bad()\n{\n    switch(6)\n    {\n    case 6:\n    {\n        wchar_t * * pointer = (wchar_t * *)malloc(sizeof(wchar_t *));\n        if (pointer == NULL) {exit(-1);}\n        wchar_t * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n        free(pointer);\n        printWLine(data);\n    }\n    break;\n    default:\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(staticFive==5)\n    {\n        {\n            char data;\n            char * pointer = (char *)malloc(sizeof(char));\n            if (pointer == NULL) {exit(-1);}\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char data = *pointer;\n                printHexCharLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(GLOBAL_CONST_TRUE)\n    {\n        {\n            twoIntsStruct data;\n            twoIntsStruct * pointer = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (pointer == NULL) {exit(-1);}\n            data.intOne = 1;\n            data.intTwo = 2;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct data = *pointer;\n                printIntLine(data.intOne);\n                printIntLine(data.intTwo);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_malloc_use_12_bad()\n{\n    if(globalReturnsTrueOrFalse())\n    {\n        {\n            char * pointer = (char *)malloc(sizeof(char));\n            if (pointer == NULL) {exit(-1);}\n            char data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printHexCharLine(data);\n        }\n    }\n    else\n    {\n        {\n            char data;\n            char * pointer = (char *)malloc(sizeof(char));\n            if (pointer == NULL) {exit(-1);}\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char data = *pointer;\n                printHexCharLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_pointer_alloca_use_15_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(1)\n    {\n        {\n            twoIntsStruct * data;\n            twoIntsStruct * * pointer = (twoIntsStruct * *)malloc(sizeof(twoIntsStruct *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (data == NULL) {exit(-1);}\n            data->intOne = 5;\n            data->intTwo = 6;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct * data = *pointer;\n                printIntLine(data->intOne);\n                printIntLine(data->intTwo);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_alloca_use_09_bad()\n{\n    if(GLOBAL_CONST_TRUE)\n    {\n        {\n            int * pointer = (int *)ALLOCA(sizeof(int));\n            int data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printIntLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_alloca_use_01_good()\n{\n    good1();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_malloc_use_09_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(5==5)\n    {\n        {\n            double * data;\n            double * * pointer = (double * *)malloc(sizeof(double *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (double *)malloc(sizeof(double));\n            if (data == NULL) {exit(-1);}\n            *data = 5.0;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                double * data = *pointer;\n                printDoubleLine(*data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalReturnsFalse())\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            wchar_t * data;\n            wchar_t * * pointer = (wchar_t * *)ALLOCA(sizeof(wchar_t *));\n            data = L\"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                wchar_t * data = *pointer;\n                printWLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_pointer_malloc_use_08_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_malloc_use_01_good()\n{\n    good1();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_malloc_use_13_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(staticFive!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int data;\n            int * pointer = (int *)malloc(sizeof(int));\n            if (pointer == NULL) {exit(-1);}\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int data = *pointer;\n                printIntLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__double_pointer_alloca_use_05_bad()\n{\n    if(staticTrue)\n    {\n        {\n            double * * pointer = (double * *)ALLOCA(sizeof(double *));\n            double * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printDoubleLine(*data);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_alloca_use_02_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(staticFive==5)\n    {\n        {\n            char * data;\n            char * * pointer = (char * *)malloc(sizeof(char *));\n            if (pointer == NULL) {exit(-1);}\n            data = \"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char * data = *pointer;\n                printLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(STATIC_CONST_FIVE!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int data;\n            int * pointer = (int *)ALLOCA(sizeof(int));\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int data = *pointer;\n                printIntLine(data);\n            }\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int64_t_alloca_use_02_bad()\n{\n    if(1)\n    {\n        {\n            int64_t * pointer = (int64_t *)ALLOCA(sizeof(int64_t));\n            int64_t data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printLongLongLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalFalse)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int * data;\n            int * * pointer = (int * *)malloc(sizeof(int *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (int *)malloc(sizeof(int));\n            if (data == NULL) {exit(-1);}\n            *data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int * data = *pointer;\n                printIntLine(*data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int64_t_malloc_use_16_good()\n{\n    good1();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__double_pointer_alloca_use_03_bad()\n{\n    if(5==5)\n    {\n        {\n            double * * pointer = (double * *)ALLOCA(sizeof(double *));\n            double * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printDoubleLine(*data);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_pointer_alloca_use_16_good()\n{\n    good1();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__long_alloca_use_03_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(STATIC_CONST_FALSE)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            long data;\n            long * pointer = (long *)ALLOCA(sizeof(long));\n            data = 5L;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                long data = *pointer;\n                printLongLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(5!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int64_t data;\n            int64_t * pointer = (int64_t *)malloc(sizeof(int64_t));\n            if (pointer == NULL) {exit(-1);}\n            data = 5LL;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int64_t data = *pointer;\n                printLongLongLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_pointer_alloca_use_08_bad()\n{\n    if(staticReturnsTrue())\n    {\n        {\n            int * * pointer = (int * *)ALLOCA(sizeof(int *));\n            int * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printIntLine(*data);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_malloc_use_12_good()\n{\n    good1();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int64_t_alloca_use_05_good()\n{\n    good1();\n    good2();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_malloc_use_18_bad()\n{\n    goto sink;\nsink:\n    {\n        twoIntsStruct * pointer = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n        if (pointer == NULL) {exit(-1);}\n        twoIntsStruct data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n        free(pointer);\n        printIntLine(data.intOne);\n        printIntLine(data.intTwo);\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_pointer_malloc_use_07_bad()\n{\n    if(staticFive==5)\n    {\n        {\n            twoIntsStruct * * pointer = (twoIntsStruct * *)malloc(sizeof(twoIntsStruct *));\n            if (pointer == NULL) {exit(-1);}\n            twoIntsStruct * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printIntLine(data->intOne);\n            printIntLine(data->intTwo);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalFalse)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            twoIntsStruct data;\n            twoIntsStruct * pointer = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (pointer == NULL) {exit(-1);}\n            data.intOne = 1;\n            data.intTwo = 2;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct data = *pointer;\n                printIntLine(data.intOne);\n                printIntLine(data.intTwo);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_pointer_alloca_use_08_bad()\n{\n    if(staticReturnsTrue())\n    {\n        {\n            twoIntsStruct * * pointer = (twoIntsStruct * *)ALLOCA(sizeof(twoIntsStruct *));\n            twoIntsStruct * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printIntLine(data->intOne);\n            printIntLine(data->intTwo);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    goto sink;\nsink:\n    {\n        twoIntsStruct data;\n        twoIntsStruct * pointer = (twoIntsStruct *)ALLOCA(sizeof(twoIntsStruct));\n        data.intOne = 1;\n        data.intTwo = 2;\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            twoIntsStruct data = *pointer;\n            printIntLine(data.intOne);\n            printIntLine(data.intTwo);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__double_pointer_alloca_use_18_bad()\n{\n    goto sink;\nsink:\n    {\n        double * * pointer = (double * *)ALLOCA(sizeof(double *));\n        double * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n        printDoubleLine(*data);\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int64_t_malloc_use_18_good()\n{\n    good1();\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(globalFive==5)\n    {\n        {\n            int data;\n            int * pointer = (int *)ALLOCA(sizeof(int));\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int data = *pointer;\n                printIntLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalReturnsTrueOrFalse())\n    {\n        {\n            twoIntsStruct * data;\n            twoIntsStruct * * pointer = (twoIntsStruct * *)malloc(sizeof(twoIntsStruct *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (data == NULL) {exit(-1);}\n            data->intOne = 5;\n            data->intTwo = 6;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct * data = *pointer;\n                printIntLine(data->intOne);\n                printIntLine(data->intTwo);\n            }\n            free(pointer);\n        }\n    }\n    else\n    {\n        {\n            twoIntsStruct * data;\n            twoIntsStruct * * pointer = (twoIntsStruct * *)malloc(sizeof(twoIntsStruct *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (data == NULL) {exit(-1);}\n            data->intOne = 5;\n            data->intTwo = 6;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct * data = *pointer;\n                printIntLine(data->intOne);\n                printIntLine(data->intTwo);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(GLOBAL_CONST_FIVE!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            long data;\n            long * pointer = (long *)ALLOCA(sizeof(long));\n            data = 5L;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                long data = *pointer;\n                printLongLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(GLOBAL_CONST_FIVE!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            twoIntsStruct data;\n            twoIntsStruct * pointer = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (pointer == NULL) {exit(-1);}\n            data.intOne = 1;\n            data.intTwo = 2;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct data = *pointer;\n                printIntLine(data.intOne);\n                printIntLine(data.intTwo);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_alloca_use_03_good()\n{\n    good1();\n    good2();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__long_malloc_use_03_bad()\n{\n    if(5==5)\n    {\n        {\n            long * pointer = (long *)malloc(sizeof(long));\n            if (pointer == NULL) {exit(-1);}\n            long data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printLongLine(data);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_pointer_alloca_use_01_bad()\n{\n    {\n        char * * pointer = (char * *)ALLOCA(sizeof(char *));\n        char * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n        printLine(data);\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(GLOBAL_CONST_TRUE)\n    {\n        {\n            double * data;\n            double * * pointer = (double * *)malloc(sizeof(double *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (double *)malloc(sizeof(double));\n            if (data == NULL) {exit(-1);}\n            *data = 5.0;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                double * data = *pointer;\n                printDoubleLine(*data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_malloc_use_10_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(STATIC_CONST_FIVE!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            twoIntsStruct data;\n            twoIntsStruct * pointer = (twoIntsStruct *)ALLOCA(sizeof(twoIntsStruct));\n            data.intOne = 1;\n            data.intTwo = 2;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct data = *pointer;\n                printIntLine(data.intOne);\n                printIntLine(data.intTwo);\n            }\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_malloc_use_11_bad()\n{\n    if(globalReturnsTrue())\n    {\n        {\n            wchar_t * * pointer = (wchar_t * *)malloc(sizeof(wchar_t *));\n            if (pointer == NULL) {exit(-1);}\n            wchar_t * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printWLine(data);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_pointer_malloc_use_08_bad()\n{\n    if(staticReturnsTrue())\n    {\n        {\n            twoIntsStruct * * pointer = (twoIntsStruct * *)malloc(sizeof(twoIntsStruct *));\n            if (pointer == NULL) {exit(-1);}\n            twoIntsStruct * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printIntLine(data->intOne);\n            printIntLine(data->intTwo);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(staticReturnsTrue())\n    {\n        {\n            double * data;\n            double * * pointer = (double * *)ALLOCA(sizeof(double *));\n            /* initialize both the pointer and the data pointed to */\n            data = (double *)malloc(sizeof(double));\n            if (data == NULL) {exit(-1);}\n            *data = 5.0;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                double * data = *pointer;\n                printDoubleLine(*data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_malloc_use_13_good()\n{\n    good1();\n    good2();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int64_t_malloc_use_13_bad()\n{\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        {\n            int64_t * pointer = (int64_t *)malloc(sizeof(int64_t));\n            if (pointer == NULL) {exit(-1);}\n            int64_t data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printLongLongLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(GLOBAL_CONST_FALSE)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int64_t data;\n            int64_t * pointer = (int64_t *)malloc(sizeof(int64_t));\n            if (pointer == NULL) {exit(-1);}\n            data = 5LL;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int64_t data = *pointer;\n                printLongLongLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_malloc_use_03_good()\n{\n    good1();\n    good2();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_pointer_alloca_use_01_bad()\n{\n    {\n        int * * pointer = (int * *)ALLOCA(sizeof(int *));\n        int * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n        printIntLine(*data);\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_malloc_use_01_bad()\n{\n    {\n        int * pointer = (int *)malloc(sizeof(int));\n        if (pointer == NULL) {exit(-1);}\n        int data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n        free(pointer);\n        printIntLine(data);\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_malloc_use_17_good()\n{\n    good1();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__long_malloc_use_07_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(staticFalse)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            char data;\n            char * pointer = (char *)ALLOCA(sizeof(char));\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char data = *pointer;\n                printHexCharLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_pointer_alloca_use_15_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__double_pointer_alloca_use_18_good()\n{\n    good1();\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(globalReturnsTrue())\n    {\n        {\n            wchar_t * data;\n            wchar_t * * pointer = (wchar_t * *)malloc(sizeof(wchar_t *));\n            if (pointer == NULL) {exit(-1);}\n            data = L\"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                wchar_t * data = *pointer;\n                printWLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__long_malloc_use_12_good()\n{\n    good1();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalReturnsTrueOrFalse())\n    {\n        {\n            int data;\n            int * pointer = (int *)malloc(sizeof(int));\n            if (pointer == NULL) {exit(-1);}\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int data = *pointer;\n                printIntLine(data);\n            }\n            free(pointer);\n        }\n    }\n    else\n    {\n        {\n            int data;\n            int * pointer = (int *)malloc(sizeof(int));\n            if (pointer == NULL) {exit(-1);}\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int data = *pointer;\n                printIntLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_alloca_use_15_bad()\n{\n    switch(6)\n    {\n    case 6:\n    {\n        int * pointer = (int *)ALLOCA(sizeof(int));\n        int data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n        printIntLine(data);\n    }\n    break;\n    default:\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_malloc_use_15_bad()\n{\n    switch(6)\n    {\n    case 6:\n    {\n        char * pointer = (char *)malloc(sizeof(char));\n        if (pointer == NULL) {exit(-1);}\n        char data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n        free(pointer);\n        printHexCharLine(data);\n    }\n    break;\n    default:\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__double_pointer_malloc_use_15_good()\n{\n    good1();\n    good2();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_pointer_alloca_use_10_bad()\n{\n    if(globalTrue)\n    {\n        {\n            char * * pointer = (char * *)ALLOCA(sizeof(char *));\n            char * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    switch(6)\n    {\n    case 6:\n    {\n        twoIntsStruct data;\n        twoIntsStruct * pointer = (twoIntsStruct *)ALLOCA(sizeof(twoIntsStruct));\n        data.intOne = 1;\n        data.intTwo = 2;\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            twoIntsStruct data = *pointer;\n            printIntLine(data.intOne);\n            printIntLine(data.intTwo);\n        }\n    }\n    break;\n    default:\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_alloca_use_06_bad()\n{\n    if(STATIC_CONST_FIVE==5)\n    {\n        {\n            int * pointer = (int *)ALLOCA(sizeof(int));\n            int data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printIntLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_alloca_use_18_good()\n{\n    good1();\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(staticTrue)\n    {\n        {\n            twoIntsStruct data;\n            twoIntsStruct * pointer = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (pointer == NULL) {exit(-1);}\n            data.intOne = 1;\n            data.intTwo = 2;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct data = *pointer;\n                printIntLine(data.intOne);\n                printIntLine(data.intTwo);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(staticFalse)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            double * data;\n            double * * pointer = (double * *)malloc(sizeof(double *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (double *)malloc(sizeof(double));\n            if (data == NULL) {exit(-1);}\n            *data = 5.0;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                double * data = *pointer;\n                printDoubleLine(*data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(staticFalse)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int64_t data;\n            int64_t * pointer = (int64_t *)malloc(sizeof(int64_t));\n            if (pointer == NULL) {exit(-1);}\n            data = 5LL;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int64_t data = *pointer;\n                printLongLongLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__double_pointer_malloc_use_06_bad()\n{\n    if(STATIC_CONST_FIVE==5)\n    {\n        {\n            double * * pointer = (double * *)malloc(sizeof(double *));\n            if (pointer == NULL) {exit(-1);}\n            double * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printDoubleLine(*data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        {\n            char * data;\n            char * * pointer = (char * *)ALLOCA(sizeof(char *));\n            data = \"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char * data = *pointer;\n                printLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(STATIC_CONST_FIVE==5)\n    {\n        {\n            twoIntsStruct * data;\n            twoIntsStruct * * pointer = (twoIntsStruct * *)ALLOCA(sizeof(twoIntsStruct *));\n            /* initialize both the pointer and the data pointed to */\n            data = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (data == NULL) {exit(-1);}\n            data->intOne = 5;\n            data->intTwo = 6;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct * data = *pointer;\n                printIntLine(data->intOne);\n                printIntLine(data->intTwo);\n            }\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_malloc_use_18_bad()\n{\n    goto sink;\nsink:\n    {\n        int * pointer = (int *)malloc(sizeof(int));\n        if (pointer == NULL) {exit(-1);}\n        int data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n        free(pointer);\n        printIntLine(data);\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__double_pointer_malloc_use_08_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1() \n{\n    int intGood1 = helperGood1();\n    printIntLine(intGood1);\n}"}
{"target": 0, "func": "static void good1()\n{\n    goto sink;\nsink:\n    {\n        double * data;\n        double * * pointer = (double * *)malloc(sizeof(double *));\n        if (pointer == NULL) {exit(-1);}\n        /* initialize both the pointer and the data pointed to */\n        data = (double *)malloc(sizeof(double));\n        if (data == NULL) {exit(-1);}\n        *data = 5.0;\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            double * data = *pointer;\n            printDoubleLine(*data);\n        }\n        free(pointer);\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(staticReturnsFalse())\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            twoIntsStruct * data;\n            twoIntsStruct * * pointer = (twoIntsStruct * *)ALLOCA(sizeof(twoIntsStruct *));\n            /* initialize both the pointer and the data pointed to */\n            data = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (data == NULL) {exit(-1);}\n            data->intOne = 5;\n            data->intTwo = 6;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct * data = *pointer;\n                printIntLine(data->intOne);\n                printIntLine(data->intTwo);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    while(1)\n    {\n        {\n            int * data;\n            int * * pointer = (int * *)malloc(sizeof(int *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (int *)malloc(sizeof(int));\n            if (data == NULL) {exit(-1);}\n            *data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int * data = *pointer;\n                printIntLine(*data);\n            }\n            free(pointer);\n        }\n        break;\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(globalTrue)\n    {\n        {\n            int * data;\n            int * * pointer = (int * *)malloc(sizeof(int *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (int *)malloc(sizeof(int));\n            if (data == NULL) {exit(-1);}\n            *data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int * data = *pointer;\n                printIntLine(*data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalFive!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            wchar_t * data;\n            wchar_t * * pointer = (wchar_t * *)malloc(sizeof(wchar_t *));\n            if (pointer == NULL) {exit(-1);}\n            data = L\"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                wchar_t * data = *pointer;\n                printWLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__double_pointer_malloc_use_16_bad()\n{\n    while(1)\n    {\n        {\n            double * * pointer = (double * *)malloc(sizeof(double *));\n            if (pointer == NULL) {exit(-1);}\n            double * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printDoubleLine(*data);\n        }\n        break;\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(staticFive==5)\n    {\n        {\n            wchar_t * data;\n            wchar_t * * pointer = (wchar_t * *)ALLOCA(sizeof(wchar_t *));\n            data = L\"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                wchar_t * data = *pointer;\n                printWLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(STATIC_CONST_TRUE)\n    {\n        {\n            wchar_t * data;\n            wchar_t * * pointer = (wchar_t * *)malloc(sizeof(wchar_t *));\n            if (pointer == NULL) {exit(-1);}\n            data = L\"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                wchar_t * data = *pointer;\n                printWLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(STATIC_CONST_FIVE!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int * data;\n            int * * pointer = (int * *)malloc(sizeof(int *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (int *)malloc(sizeof(int));\n            if (data == NULL) {exit(-1);}\n            *data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int * data = *pointer;\n                printIntLine(*data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    switch(6)\n    {\n    case 6:\n    {\n        char data;\n        char * pointer = (char *)ALLOCA(sizeof(char));\n        data = 5;\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            char data = *pointer;\n            printHexCharLine(data);\n        }\n    }\n    break;\n    default:\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        {\n            int64_t data;\n            int64_t * pointer = (int64_t *)ALLOCA(sizeof(int64_t));\n            data = 5LL;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int64_t data = *pointer;\n                printLongLongLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(GLOBAL_CONST_TRUE)\n    {\n        {\n            int64_t data;\n            int64_t * pointer = (int64_t *)malloc(sizeof(int64_t));\n            if (pointer == NULL) {exit(-1);}\n            data = 5LL;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int64_t data = *pointer;\n                printLongLongLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(1)\n    {\n        {\n            twoIntsStruct * data;\n            twoIntsStruct * * pointer = (twoIntsStruct * *)ALLOCA(sizeof(twoIntsStruct *));\n            /* initialize both the pointer and the data pointed to */\n            data = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (data == NULL) {exit(-1);}\n            data->intOne = 5;\n            data->intTwo = 6;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct * data = *pointer;\n                printIntLine(data->intOne);\n                printIntLine(data->intTwo);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__double_pointer_malloc_use_18_good()\n{\n    good1();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__long_malloc_use_12_bad()\n{\n    if(globalReturnsTrueOrFalse())\n    {\n        {\n            long * pointer = (long *)malloc(sizeof(long));\n            if (pointer == NULL) {exit(-1);}\n            long data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printLongLine(data);\n        }\n    }\n    else\n    {\n        {\n            long data;\n            long * pointer = (long *)malloc(sizeof(long));\n            if (pointer == NULL) {exit(-1);}\n            data = 5L;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                long data = *pointer;\n                printLongLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__double_pointer_alloca_use_17_bad()\n{\n    int j;\n    for(j = 0; j < 1; j++)\n    {\n        {\n            double * * pointer = (double * *)ALLOCA(sizeof(double *));\n            double * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printDoubleLine(*data);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_pointer_malloc_use_05_bad()\n{\n    if(staticTrue)\n    {\n        {\n            int * * pointer = (int * *)malloc(sizeof(int *));\n            if (pointer == NULL) {exit(-1);}\n            int * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printIntLine(*data);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__double_pointer_alloca_use_10_good()\n{\n    good1();\n    good2();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_alloca_use_10_bad()\n{\n    if(globalTrue)\n    {\n        {\n            char * pointer = (char *)ALLOCA(sizeof(char));\n            char data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printHexCharLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(globalFive==5)\n    {\n        {\n            char * data;\n            char * * pointer = (char * *)ALLOCA(sizeof(char *));\n            data = \"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char * data = *pointer;\n                printLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_pointer_alloca_use_05_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(GLOBAL_CONST_FALSE)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            wchar_t * data;\n            wchar_t * * pointer = (wchar_t * *)malloc(sizeof(wchar_t *));\n            if (pointer == NULL) {exit(-1);}\n            data = L\"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                wchar_t * data = *pointer;\n                printWLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    {\n        char data;\n        char * pointer = (char *)malloc(sizeof(char));\n        if (pointer == NULL) {exit(-1);}\n        data = 5;\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            char data = *pointer;\n            printHexCharLine(data);\n        }\n        free(pointer);\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    while(1)\n    {\n        {\n            twoIntsStruct data;\n            twoIntsStruct * pointer = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (pointer == NULL) {exit(-1);}\n            data.intOne = 1;\n            data.intTwo = 2;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct data = *pointer;\n                printIntLine(data.intOne);\n                printIntLine(data.intTwo);\n            }\n            free(pointer);\n        }\n        break;\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__double_pointer_alloca_use_11_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(globalTrue)\n    {\n        {\n            twoIntsStruct data;\n            twoIntsStruct * pointer = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (pointer == NULL) {exit(-1);}\n            data.intOne = 1;\n            data.intTwo = 2;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct data = *pointer;\n                printIntLine(data.intOne);\n                printIntLine(data.intTwo);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__long_malloc_use_13_bad()\n{\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        {\n            long * pointer = (long *)malloc(sizeof(long));\n            if (pointer == NULL) {exit(-1);}\n            long data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printLongLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static int helperGood1(void)\n{\n    /* FIX: return a value */\n    return 5;\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_alloca_use_16_good()\n{\n    good1();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(GLOBAL_CONST_FIVE!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int64_t data;\n            int64_t * pointer = (int64_t *)ALLOCA(sizeof(int64_t));\n            data = 5LL;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int64_t data = *pointer;\n                printLongLongLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_pointer_malloc_use_17_good()\n{\n    good1();\n}"}
{"target": 0, "func": "static void good1()\n{\n    switch(5)\n    {\n    case 6:\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n    {\n        double * data;\n        double * * pointer = (double * *)malloc(sizeof(double *));\n        if (pointer == NULL) {exit(-1);}\n        /* initialize both the pointer and the data pointed to */\n        data = (double *)malloc(sizeof(double));\n        if (data == NULL) {exit(-1);}\n        *data = 5.0;\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            double * data = *pointer;\n            printDoubleLine(*data);\n        }\n        free(pointer);\n    }\n    break;\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_pointer_alloca_use_11_good()\n{\n    good1();\n    good2();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_alloca_use_09_bad()\n{\n    if(GLOBAL_CONST_TRUE)\n    {\n        {\n            char * pointer = (char *)ALLOCA(sizeof(char));\n            char data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printHexCharLine(data);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_alloca_use_15_bad()\n{\n    switch(6)\n    {\n    case 6:\n    {\n        wchar_t * * pointer = (wchar_t * *)ALLOCA(sizeof(wchar_t *));\n        wchar_t * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n        printWLine(data);\n    }\n    break;\n    default:\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(5==5)\n    {\n        {\n            int64_t data;\n            int64_t * pointer = (int64_t *)ALLOCA(sizeof(int64_t));\n            data = 5LL;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int64_t data = *pointer;\n                printLongLongLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(GLOBAL_CONST_FIVE!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            char data;\n            char * pointer = (char *)malloc(sizeof(char));\n            if (pointer == NULL) {exit(-1);}\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char data = *pointer;\n                printHexCharLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(0)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int64_t data;\n            int64_t * pointer = (int64_t *)ALLOCA(sizeof(int64_t));\n            data = 5LL;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int64_t data = *pointer;\n                printLongLongLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__double_pointer_alloca_use_17_good()\n{\n    good1();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(staticReturnsFalse())\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int data;\n            int * pointer = (int *)malloc(sizeof(int));\n            if (pointer == NULL) {exit(-1);}\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int data = *pointer;\n                printIntLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(globalTrue)\n    {\n        {\n            char * data;\n            char * * pointer = (char * *)ALLOCA(sizeof(char *));\n            data = \"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char * data = *pointer;\n                printLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    goto sink;\nsink:\n    {\n        int data;\n        int * pointer = (int *)malloc(sizeof(int));\n        if (pointer == NULL) {exit(-1);}\n        data = 5;\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            int data = *pointer;\n            printIntLine(data);\n        }\n        free(pointer);\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_pointer_malloc_use_06_bad()\n{\n    if(STATIC_CONST_FIVE==5)\n    {\n        {\n            char * * pointer = (char * *)malloc(sizeof(char *));\n            if (pointer == NULL) {exit(-1);}\n            char * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printLine(data);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_pointer_alloca_use_15_bad()\n{\n    switch(6)\n    {\n    case 6:\n    {\n        int * * pointer = (int * *)ALLOCA(sizeof(int *));\n        int * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n        printIntLine(*data);\n    }\n    break;\n    default:\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__double_pointer_malloc_use_09_good()\n{\n    good1();\n    good2();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_alloca_use_03_bad()\n{\n    if(5==5)\n    {\n        {\n            twoIntsStruct * pointer = (twoIntsStruct *)ALLOCA(sizeof(twoIntsStruct));\n            twoIntsStruct data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printIntLine(data.intOne);\n            printIntLine(data.intTwo);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(GLOBAL_CONST_FIVE!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            double * data;\n            double * * pointer = (double * *)malloc(sizeof(double *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (double *)malloc(sizeof(double));\n            if (data == NULL) {exit(-1);}\n            *data = 5.0;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                double * data = *pointer;\n                printDoubleLine(*data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    goto sink;\nsink:\n    {\n        twoIntsStruct * data;\n        twoIntsStruct * * pointer = (twoIntsStruct * *)malloc(sizeof(twoIntsStruct *));\n        if (pointer == NULL) {exit(-1);}\n        /* initialize both the pointer and the data pointed to */\n        data = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n        if (data == NULL) {exit(-1);}\n        data->intOne = 5;\n        data->intTwo = 6;\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            twoIntsStruct * data = *pointer;\n            printIntLine(data->intOne);\n            printIntLine(data->intTwo);\n        }\n        free(pointer);\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int64_t_malloc_use_12_bad()\n{\n    if(globalReturnsTrueOrFalse())\n    {\n        {\n            int64_t * pointer = (int64_t *)malloc(sizeof(int64_t));\n            if (pointer == NULL) {exit(-1);}\n            int64_t data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printLongLongLine(data);\n        }\n    }\n    else\n    {\n        {\n            int64_t data;\n            int64_t * pointer = (int64_t *)malloc(sizeof(int64_t));\n            if (pointer == NULL) {exit(-1);}\n            data = 5LL;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int64_t data = *pointer;\n                printLongLongLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(GLOBAL_CONST_TRUE)\n    {\n        {\n            twoIntsStruct data;\n            twoIntsStruct * pointer = (twoIntsStruct *)ALLOCA(sizeof(twoIntsStruct));\n            data.intOne = 1;\n            data.intTwo = 2;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct data = *pointer;\n                printIntLine(data.intOne);\n                printIntLine(data.intTwo);\n            }\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_pointer_alloca_use_18_bad()\n{\n    goto sink;\nsink:\n    {\n        char * * pointer = (char * *)ALLOCA(sizeof(char *));\n        char * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n        printLine(data);\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int64_t_malloc_use_17_bad()\n{\n    int j;\n    for(j = 0; j < 1; j++)\n    {\n        {\n            int64_t * pointer = (int64_t *)malloc(sizeof(int64_t));\n            if (pointer == NULL) {exit(-1);}\n            int64_t data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printLongLongLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int64_t_malloc_use_12_good()\n{\n    good1();\n}"}
{"target": 0, "func": "static void good1()\n{\n    int k;\n    for(k = 0; k < 1; k++)\n    {\n        {\n            char data;\n            char * pointer = (char *)ALLOCA(sizeof(char));\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char data = *pointer;\n                printHexCharLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_malloc_use_13_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalFive!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            twoIntsStruct * data;\n            twoIntsStruct * * pointer = (twoIntsStruct * *)ALLOCA(sizeof(twoIntsStruct *));\n            /* initialize both the pointer and the data pointed to */\n            data = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (data == NULL) {exit(-1);}\n            data->intOne = 5;\n            data->intTwo = 6;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct * data = *pointer;\n                printIntLine(data->intOne);\n                printIntLine(data->intTwo);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        {\n            long data;\n            long * pointer = (long *)malloc(sizeof(long));\n            if (pointer == NULL) {exit(-1);}\n            data = 5L;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                long data = *pointer;\n                printLongLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_pointer_alloca_use_18_good()\n{\n    good1();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(staticReturnsFalse())\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            long data;\n            long * pointer = (long *)ALLOCA(sizeof(long));\n            data = 5L;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                long data = *pointer;\n                printLongLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__long_alloca_use_07_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalFalse)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int data;\n            int * pointer = (int *)malloc(sizeof(int));\n            if (pointer == NULL) {exit(-1);}\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int data = *pointer;\n                printIntLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_alloca_use_01_bad()\n{\n    {\n        char * pointer = (char *)ALLOCA(sizeof(char));\n        char data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n        printHexCharLine(data);\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_alloca_use_04_bad()\n{\n    if(STATIC_CONST_TRUE)\n    {\n        {\n            char * pointer = (char *)ALLOCA(sizeof(char));\n            char data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printHexCharLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(0)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            wchar_t * data;\n            wchar_t * * pointer = (wchar_t * *)malloc(sizeof(wchar_t *));\n            if (pointer == NULL) {exit(-1);}\n            data = L\"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                wchar_t * data = *pointer;\n                printWLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_alloca_use_04_bad()\n{\n    if(STATIC_CONST_TRUE)\n    {\n        {\n            wchar_t * * pointer = (wchar_t * *)ALLOCA(sizeof(wchar_t *));\n            wchar_t * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printWLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalFalse)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            double * data;\n            double * * pointer = (double * *)malloc(sizeof(double *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (double *)malloc(sizeof(double));\n            if (data == NULL) {exit(-1);}\n            *data = 5.0;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                double * data = *pointer;\n                printDoubleLine(*data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(staticFive!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            twoIntsStruct * data;\n            twoIntsStruct * * pointer = (twoIntsStruct * *)ALLOCA(sizeof(twoIntsStruct *));\n            /* initialize both the pointer and the data pointed to */\n            data = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (data == NULL) {exit(-1);}\n            data->intOne = 5;\n            data->intTwo = 6;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct * data = *pointer;\n                printIntLine(data->intOne);\n                printIntLine(data->intTwo);\n            }\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_malloc_use_10_bad()\n{\n    if(globalTrue)\n    {\n        {\n            int * pointer = (int *)malloc(sizeof(int));\n            if (pointer == NULL) {exit(-1);}\n            int data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printIntLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_pointer_malloc_use_15_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(staticFive!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            twoIntsStruct data;\n            twoIntsStruct * pointer = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (pointer == NULL) {exit(-1);}\n            data.intOne = 1;\n            data.intTwo = 2;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct data = *pointer;\n                printIntLine(data.intOne);\n                printIntLine(data.intTwo);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    {\n        wchar_t * data;\n        wchar_t * * pointer = (wchar_t * *)malloc(sizeof(wchar_t *));\n        if (pointer == NULL) {exit(-1);}\n        data = L\"string\";\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            wchar_t * data = *pointer;\n            printWLine(data);\n        }\n        free(pointer);\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(5==5)\n    {\n        {\n            char * data;\n            char * * pointer = (char * *)ALLOCA(sizeof(char *));\n            data = \"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char * data = *pointer;\n                printLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__double_pointer_alloca_use_06_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_pointer_malloc_use_04_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    switch(5)\n    {\n    case 6:\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n    {\n        int64_t data;\n        int64_t * pointer = (int64_t *)malloc(sizeof(int64_t));\n        if (pointer == NULL) {exit(-1);}\n        data = 5LL;\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            int64_t data = *pointer;\n            printLongLongLine(data);\n        }\n        free(pointer);\n    }\n    break;\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__double_pointer_malloc_use_04_bad()\n{\n    if(STATIC_CONST_TRUE)\n    {\n        {\n            double * * pointer = (double * *)malloc(sizeof(double *));\n            if (pointer == NULL) {exit(-1);}\n            double * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printDoubleLine(*data);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_malloc_use_15_good()\n{\n    good1();\n    good2();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_pointer_malloc_use_12_bad()\n{\n    if(globalReturnsTrueOrFalse())\n    {\n        {\n            char * * pointer = (char * *)malloc(sizeof(char *));\n            if (pointer == NULL) {exit(-1);}\n            char * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printLine(data);\n        }\n    }\n    else\n    {\n        {\n            char * data;\n            char * * pointer = (char * *)malloc(sizeof(char *));\n            if (pointer == NULL) {exit(-1);}\n            data = \"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char * data = *pointer;\n                printLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalFalse)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int64_t data;\n            int64_t * pointer = (int64_t *)malloc(sizeof(int64_t));\n            if (pointer == NULL) {exit(-1);}\n            data = 5LL;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int64_t data = *pointer;\n                printLongLongLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int64_t_alloca_use_03_bad()\n{\n    if(5==5)\n    {\n        {\n            int64_t * pointer = (int64_t *)ALLOCA(sizeof(int64_t));\n            int64_t data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printLongLongLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(staticTrue)\n    {\n        {\n            int * data;\n            int * * pointer = (int * *)ALLOCA(sizeof(int *));\n            /* initialize both the pointer and the data pointed to */\n            data = (int *)malloc(sizeof(int));\n            if (data == NULL) {exit(-1);}\n            *data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int * data = *pointer;\n                printIntLine(*data);\n            }\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_alloca_use_08_bad()\n{\n    if(staticReturnsTrue())\n    {\n        {\n            twoIntsStruct * pointer = (twoIntsStruct *)ALLOCA(sizeof(twoIntsStruct));\n            twoIntsStruct data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printIntLine(data.intOne);\n            printIntLine(data.intTwo);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__long_alloca_use_16_good()\n{\n    good1();\n}"}
{"target": 0, "func": "static void good1()\n{\n    while(1)\n    {\n        {\n            char data;\n            char * pointer = (char *)malloc(sizeof(char));\n            if (pointer == NULL) {exit(-1);}\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char data = *pointer;\n                printHexCharLine(data);\n            }\n            free(pointer);\n        }\n        break;\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_pointer_malloc_use_18_bad()\n{\n    goto sink;\nsink:\n    {\n        twoIntsStruct * * pointer = (twoIntsStruct * *)malloc(sizeof(twoIntsStruct *));\n        if (pointer == NULL) {exit(-1);}\n        twoIntsStruct * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n        free(pointer);\n        printIntLine(data->intOne);\n        printIntLine(data->intTwo);\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(staticFalse)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            char * data;\n            char * * pointer = (char * *)malloc(sizeof(char *));\n            if (pointer == NULL) {exit(-1);}\n            data = \"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char * data = *pointer;\n                printLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_pointer_malloc_use_04_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int64_t_malloc_use_02_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good2()\n{\n    switch(6)\n    {\n    case 6:\n    {\n        int64_t data;\n        int64_t * pointer = (int64_t *)malloc(sizeof(int64_t));\n        if (pointer == NULL) {exit(-1);}\n        data = 5LL;\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            int64_t data = *pointer;\n            printLongLongLine(data);\n        }\n        free(pointer);\n    }\n    break;\n    default:\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int64_t_malloc_use_05_bad()\n{\n    if(staticTrue)\n    {\n        {\n            int64_t * pointer = (int64_t *)malloc(sizeof(int64_t));\n            if (pointer == NULL) {exit(-1);}\n            int64_t data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printLongLongLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int64_t_alloca_use_04_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(1)\n    {\n        {\n            int * data;\n            int * * pointer = (int * *)ALLOCA(sizeof(int *));\n            /* initialize both the pointer and the data pointed to */\n            data = (int *)malloc(sizeof(int));\n            if (data == NULL) {exit(-1);}\n            *data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int * data = *pointer;\n                printIntLine(*data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(globalReturnsTrue())\n    {\n        {\n            int * data;\n            int * * pointer = (int * *)malloc(sizeof(int *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (int *)malloc(sizeof(int));\n            if (data == NULL) {exit(-1);}\n            *data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int * data = *pointer;\n                printIntLine(*data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_malloc_use_10_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(staticReturnsFalse())\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            twoIntsStruct * data;\n            twoIntsStruct * * pointer = (twoIntsStruct * *)malloc(sizeof(twoIntsStruct *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (data == NULL) {exit(-1);}\n            data->intOne = 5;\n            data->intTwo = 6;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct * data = *pointer;\n                printIntLine(data->intOne);\n                printIntLine(data->intTwo);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_alloca_use_06_bad()\n{\n    if(STATIC_CONST_FIVE==5)\n    {\n        {\n            wchar_t * * pointer = (wchar_t * *)ALLOCA(sizeof(wchar_t *));\n            wchar_t * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printWLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    switch(5)\n    {\n    case 6:\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n    {\n        int64_t data;\n        int64_t * pointer = (int64_t *)ALLOCA(sizeof(int64_t));\n        data = 5LL;\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            int64_t data = *pointer;\n            printLongLongLine(data);\n        }\n    }\n    break;\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_malloc_use_01_good()\n{\n    good1();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(5!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            long data;\n            long * pointer = (long *)malloc(sizeof(long));\n            if (pointer == NULL) {exit(-1);}\n            data = 5L;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                long data = *pointer;\n                printLongLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_pointer_malloc_use_14_bad()\n{\n    if(globalFive==5)\n    {\n        {\n            int * * pointer = (int * *)malloc(sizeof(int *));\n            if (pointer == NULL) {exit(-1);}\n            int * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printIntLine(*data);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_malloc_use_02_bad()\n{\n    if(1)\n    {\n        {\n            twoIntsStruct * pointer = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (pointer == NULL) {exit(-1);}\n            twoIntsStruct data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printIntLine(data.intOne);\n            printIntLine(data.intTwo);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__long_malloc_use_11_bad()\n{\n    if(globalReturnsTrue())\n    {\n        {\n            long * pointer = (long *)malloc(sizeof(long));\n            if (pointer == NULL) {exit(-1);}\n            long data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printLongLine(data);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__double_pointer_alloca_use_02_bad()\n{\n    if(1)\n    {\n        {\n            double * * pointer = (double * *)ALLOCA(sizeof(double *));\n            double * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printDoubleLine(*data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(STATIC_CONST_FIVE==5)\n    {\n        {\n            long data;\n            long * pointer = (long *)malloc(sizeof(long));\n            if (pointer == NULL) {exit(-1);}\n            data = 5L;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                long data = *pointer;\n                printLongLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    switch(5)\n    {\n    case 6:\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n    {\n        long data;\n        long * pointer = (long *)ALLOCA(sizeof(long));\n        data = 5L;\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            long data = *pointer;\n            printLongLine(data);\n        }\n    }\n    break;\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__double_pointer_malloc_use_07_good()\n{\n    good1();\n    good2();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__double_pointer_alloca_use_12_bad()\n{\n    if(globalReturnsTrueOrFalse())\n    {\n        {\n            double * * pointer = (double * *)ALLOCA(sizeof(double *));\n            double * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printDoubleLine(*data);\n        }\n    }\n    else\n    {\n        {\n            double * data;\n            double * * pointer = (double * *)ALLOCA(sizeof(double *));\n            /* initialize both the pointer and the data pointed to */\n            data = (double *)malloc(sizeof(double));\n            if (data == NULL) {exit(-1);}\n            *data = 5.0;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                double * data = *pointer;\n                printDoubleLine(*data);\n            }\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_alloca_use_10_bad()\n{\n    if(globalTrue)\n    {\n        {\n            wchar_t * * pointer = (wchar_t * *)ALLOCA(sizeof(wchar_t *));\n            wchar_t * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printWLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    {\n        wchar_t * data;\n        wchar_t * * pointer = (wchar_t * *)ALLOCA(sizeof(wchar_t *));\n        data = L\"string\";\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            wchar_t * data = *pointer;\n            printWLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    switch(5)\n    {\n    case 6:\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n    {\n        double * data;\n        double * * pointer = (double * *)ALLOCA(sizeof(double *));\n        /* initialize both the pointer and the data pointed to */\n        data = (double *)malloc(sizeof(double));\n        if (data == NULL) {exit(-1);}\n        *data = 5.0;\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            double * data = *pointer;\n            printDoubleLine(*data);\n        }\n    }\n    break;\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_malloc_use_09_bad()\n{\n    if(GLOBAL_CONST_TRUE)\n    {\n        {\n            char * pointer = (char *)malloc(sizeof(char));\n            if (pointer == NULL) {exit(-1);}\n            char data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printHexCharLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__double_pointer_alloca_use_03_good()\n{\n    good1();\n    good2();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__long_malloc_use_08_bad()\n{\n    if(staticReturnsTrue())\n    {\n        {\n            long * pointer = (long *)malloc(sizeof(long));\n            if (pointer == NULL) {exit(-1);}\n            long data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printLongLine(data);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_malloc_use_08_bad()\n{\n    if(staticReturnsTrue())\n    {\n        {\n            int * pointer = (int *)malloc(sizeof(int));\n            if (pointer == NULL) {exit(-1);}\n            int data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printIntLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static int helperGood1(void)\n{\n    /* FIX: return a value */\n    return 5;\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(staticFalse)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            wchar_t * data;\n            wchar_t * * pointer = (wchar_t * *)malloc(sizeof(wchar_t *));\n            if (pointer == NULL) {exit(-1);}\n            data = L\"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                wchar_t * data = *pointer;\n                printWLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(GLOBAL_CONST_TRUE)\n    {\n        {\n            twoIntsStruct * data;\n            twoIntsStruct * * pointer = (twoIntsStruct * *)malloc(sizeof(twoIntsStruct *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (data == NULL) {exit(-1);}\n            data->intOne = 5;\n            data->intTwo = 6;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct * data = *pointer;\n                printIntLine(data->intOne);\n                printIntLine(data->intTwo);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_pointer_alloca_use_06_good()\n{\n    good1();\n    good2();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__w32_bare_return_implicit_01_bad() \n{\n    int intBad = helperBad();\n    printIntLine(intBad);\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_alloca_use_04_bad()\n{\n    if(STATIC_CONST_TRUE)\n    {\n        {\n            twoIntsStruct * pointer = (twoIntsStruct *)ALLOCA(sizeof(twoIntsStruct));\n            twoIntsStruct data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printIntLine(data.intOne);\n            printIntLine(data.intTwo);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_alloca_use_07_bad()\n{\n    if(staticFive==5)\n    {\n        {\n            char * pointer = (char *)ALLOCA(sizeof(char));\n            char data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printHexCharLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalReturnsFalse())\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int data;\n            int * pointer = (int *)ALLOCA(sizeof(int));\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int data = *pointer;\n                printIntLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(staticFive==5)\n    {\n        {\n            twoIntsStruct data;\n            twoIntsStruct * pointer = (twoIntsStruct *)ALLOCA(sizeof(twoIntsStruct));\n            data.intOne = 1;\n            data.intTwo = 2;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct data = *pointer;\n                printIntLine(data.intOne);\n                printIntLine(data.intTwo);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(0)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int * data;\n            int * * pointer = (int * *)malloc(sizeof(int *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (int *)malloc(sizeof(int));\n            if (data == NULL) {exit(-1);}\n            *data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int * data = *pointer;\n                printIntLine(*data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_pointer_malloc_use_12_good()\n{\n    good1();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__double_pointer_alloca_use_04_bad()\n{\n    if(STATIC_CONST_TRUE)\n    {\n        {\n            double * * pointer = (double * *)ALLOCA(sizeof(double *));\n            double * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printDoubleLine(*data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    {\n        int * data;\n        int * * pointer = (int * *)ALLOCA(sizeof(int *));\n        /* initialize both the pointer and the data pointed to */\n        data = (int *)malloc(sizeof(int));\n        if (data == NULL) {exit(-1);}\n        *data = 5;\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            int * data = *pointer;\n            printIntLine(*data);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_pointer_alloca_use_11_bad()\n{\n    if(globalReturnsTrue())\n    {\n        {\n            twoIntsStruct * * pointer = (twoIntsStruct * *)ALLOCA(sizeof(twoIntsStruct *));\n            twoIntsStruct * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printIntLine(data->intOne);\n            printIntLine(data->intTwo);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(0)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            long data;\n            long * pointer = (long *)malloc(sizeof(long));\n            if (pointer == NULL) {exit(-1);}\n            data = 5L;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                long data = *pointer;\n                printLongLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(STATIC_CONST_FALSE)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            twoIntsStruct * data;\n            twoIntsStruct * * pointer = (twoIntsStruct * *)malloc(sizeof(twoIntsStruct *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (data == NULL) {exit(-1);}\n            data->intOne = 5;\n            data->intTwo = 6;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct * data = *pointer;\n                printIntLine(data->intOne);\n                printIntLine(data->intTwo);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(5==5)\n    {\n        {\n            int * data;\n            int * * pointer = (int * *)ALLOCA(sizeof(int *));\n            /* initialize both the pointer and the data pointed to */\n            data = (int *)malloc(sizeof(int));\n            if (data == NULL) {exit(-1);}\n            *data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int * data = *pointer;\n                printIntLine(*data);\n            }\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_pointer_alloca_use_01_bad()\n{\n    {\n        twoIntsStruct * * pointer = (twoIntsStruct * *)ALLOCA(sizeof(twoIntsStruct *));\n        twoIntsStruct * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n        printIntLine(data->intOne);\n        printIntLine(data->intTwo);\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(globalFive==5)\n    {\n        {\n            double * data;\n            double * * pointer = (double * *)malloc(sizeof(double *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (double *)malloc(sizeof(double));\n            if (data == NULL) {exit(-1);}\n            *data = 5.0;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                double * data = *pointer;\n                printDoubleLine(*data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(GLOBAL_CONST_TRUE)\n    {\n        {\n            int data;\n            int * pointer = (int *)ALLOCA(sizeof(int));\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int data = *pointer;\n                printIntLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_malloc_use_07_good()\n{\n    good1();\n    good2();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int64_t_alloca_use_16_bad()\n{\n    while(1)\n    {\n        {\n            int64_t * pointer = (int64_t *)ALLOCA(sizeof(int64_t));\n            int64_t data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printLongLongLine(data);\n        }\n        break;\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(globalFive==5)\n    {\n        {\n            wchar_t * data;\n            wchar_t * * pointer = (wchar_t * *)ALLOCA(sizeof(wchar_t *));\n            data = L\"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                wchar_t * data = *pointer;\n                printWLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(GLOBAL_CONST_TRUE)\n    {\n        {\n            twoIntsStruct * data;\n            twoIntsStruct * * pointer = (twoIntsStruct * *)ALLOCA(sizeof(twoIntsStruct *));\n            /* initialize both the pointer and the data pointed to */\n            data = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (data == NULL) {exit(-1);}\n            data->intOne = 5;\n            data->intTwo = 6;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct * data = *pointer;\n                printIntLine(data->intOne);\n                printIntLine(data->intTwo);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    switch(5)\n    {\n    case 6:\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n    {\n        long data;\n        long * pointer = (long *)malloc(sizeof(long));\n        if (pointer == NULL) {exit(-1);}\n        data = 5L;\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            long data = *pointer;\n            printLongLine(data);\n        }\n        free(pointer);\n    }\n    break;\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_pointer_alloca_use_15_bad()\n{\n    switch(6)\n    {\n    case 6:\n    {\n        twoIntsStruct * * pointer = (twoIntsStruct * *)ALLOCA(sizeof(twoIntsStruct *));\n        twoIntsStruct * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n        printIntLine(data->intOne);\n        printIntLine(data->intTwo);\n    }\n    break;\n    default:\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_alloca_use_12_bad()\n{\n    if(globalReturnsTrueOrFalse())\n    {\n        {\n            char * pointer = (char *)ALLOCA(sizeof(char));\n            char data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printHexCharLine(data);\n        }\n    }\n    else\n    {\n        {\n            char data;\n            char * pointer = (char *)ALLOCA(sizeof(char));\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char data = *pointer;\n                printHexCharLine(data);\n            }\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_malloc_use_05_bad()\n{\n    if(staticTrue)\n    {\n        {\n            wchar_t * * pointer = (wchar_t * *)malloc(sizeof(wchar_t *));\n            if (pointer == NULL) {exit(-1);}\n            wchar_t * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printWLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalFalse)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            twoIntsStruct * data;\n            twoIntsStruct * * pointer = (twoIntsStruct * *)malloc(sizeof(twoIntsStruct *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (data == NULL) {exit(-1);}\n            data->intOne = 5;\n            data->intTwo = 6;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct * data = *pointer;\n                printIntLine(data->intOne);\n                printIntLine(data->intTwo);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_alloca_use_17_good()\n{\n    good1();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_malloc_use_17_bad()\n{\n    int j;\n    for(j = 0; j < 1; j++)\n    {\n        {\n            char * pointer = (char *)malloc(sizeof(char));\n            if (pointer == NULL) {exit(-1);}\n            char data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printHexCharLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(STATIC_CONST_TRUE)\n    {\n        {\n            char * data;\n            char * * pointer = (char * *)ALLOCA(sizeof(char *));\n            data = \"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char * data = *pointer;\n                printLine(data);\n            }\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__double_pointer_alloca_use_16_bad()\n{\n    while(1)\n    {\n        {\n            double * * pointer = (double * *)ALLOCA(sizeof(double *));\n            double * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printDoubleLine(*data);\n        }\n        break;\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(globalTrue)\n    {\n        {\n            int data;\n            int * pointer = (int *)malloc(sizeof(int));\n            if (pointer == NULL) {exit(-1);}\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int data = *pointer;\n                printIntLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    switch(6)\n    {\n    case 6:\n    {\n        twoIntsStruct data;\n        twoIntsStruct * pointer = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n        if (pointer == NULL) {exit(-1);}\n        data.intOne = 1;\n        data.intTwo = 2;\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            twoIntsStruct data = *pointer;\n            printIntLine(data.intOne);\n            printIntLine(data.intTwo);\n        }\n        free(pointer);\n    }\n    break;\n    default:\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(staticReturnsFalse())\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            double * data;\n            double * * pointer = (double * *)ALLOCA(sizeof(double *));\n            /* initialize both the pointer and the data pointed to */\n            data = (double *)malloc(sizeof(double));\n            if (data == NULL) {exit(-1);}\n            *data = 5.0;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                double * data = *pointer;\n                printDoubleLine(*data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(staticReturnsTrue())\n    {\n        {\n            char * data;\n            char * * pointer = (char * *)ALLOCA(sizeof(char *));\n            data = \"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char * data = *pointer;\n                printLine(data);\n            }\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_pointer_malloc_use_10_bad()\n{\n    if(globalTrue)\n    {\n        {\n            twoIntsStruct * * pointer = (twoIntsStruct * *)malloc(sizeof(twoIntsStruct *));\n            if (pointer == NULL) {exit(-1);}\n            twoIntsStruct * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printIntLine(data->intOne);\n            printIntLine(data->intTwo);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_pointer_malloc_use_13_bad()\n{\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        {\n            int * * pointer = (int * *)malloc(sizeof(int *));\n            if (pointer == NULL) {exit(-1);}\n            int * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printIntLine(*data);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_malloc_use_15_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_pointer_malloc_use_08_good()\n{\n    good1();\n    good2();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_malloc_use_03_bad()\n{\n    if(5==5)\n    {\n        {\n            int * pointer = (int *)malloc(sizeof(int));\n            if (pointer == NULL) {exit(-1);}\n            int data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printIntLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(staticReturnsFalse())\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            char data;\n            char * pointer = (char *)malloc(sizeof(char));\n            if (pointer == NULL) {exit(-1);}\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char data = *pointer;\n                printHexCharLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(globalReturnsTrue())\n    {\n        {\n            twoIntsStruct data;\n            twoIntsStruct * pointer = (twoIntsStruct *)ALLOCA(sizeof(twoIntsStruct));\n            data.intOne = 1;\n            data.intTwo = 2;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct data = *pointer;\n                printIntLine(data.intOne);\n                printIntLine(data.intTwo);\n            }\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_pointer_alloca_use_06_bad()\n{\n    if(STATIC_CONST_FIVE==5)\n    {\n        {\n            int * * pointer = (int * *)ALLOCA(sizeof(int *));\n            int * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printIntLine(*data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(STATIC_CONST_FALSE)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            wchar_t * data;\n            wchar_t * * pointer = (wchar_t * *)malloc(sizeof(wchar_t *));\n            if (pointer == NULL) {exit(-1);}\n            data = L\"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                wchar_t * data = *pointer;\n                printWLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int64_t_alloca_use_17_bad()\n{\n    int j;\n    for(j = 0; j < 1; j++)\n    {\n        {\n            int64_t * pointer = (int64_t *)ALLOCA(sizeof(int64_t));\n            int64_t data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printLongLongLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(staticReturnsFalse())\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int * data;\n            int * * pointer = (int * *)malloc(sizeof(int *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (int *)malloc(sizeof(int));\n            if (data == NULL) {exit(-1);}\n            *data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int * data = *pointer;\n                printIntLine(*data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(globalReturnsTrue())\n    {\n        {\n            int64_t data;\n            int64_t * pointer = (int64_t *)malloc(sizeof(int64_t));\n            if (pointer == NULL) {exit(-1);}\n            data = 5LL;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int64_t data = *pointer;\n                printLongLongLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(staticFalse)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int64_t data;\n            int64_t * pointer = (int64_t *)ALLOCA(sizeof(int64_t));\n            data = 5LL;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int64_t data = *pointer;\n                printLongLongLine(data);\n            }\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_alloca_use_13_bad()\n{\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        {\n            int * pointer = (int *)ALLOCA(sizeof(int));\n            int data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printIntLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_malloc_use_04_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_pointer_alloca_use_17_good()\n{\n    good1();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_pointer_alloca_use_13_bad()\n{\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        {\n            int * * pointer = (int * *)ALLOCA(sizeof(int *));\n            int * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printIntLine(*data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(GLOBAL_CONST_TRUE)\n    {\n        {\n            int * data;\n            int * * pointer = (int * *)malloc(sizeof(int *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (int *)malloc(sizeof(int));\n            if (data == NULL) {exit(-1);}\n            *data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int * data = *pointer;\n                printIntLine(*data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_malloc_use_06_bad()\n{\n    if(STATIC_CONST_FIVE==5)\n    {\n        {\n            char * pointer = (char *)malloc(sizeof(char));\n            if (pointer == NULL) {exit(-1);}\n            char data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printHexCharLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    {\n        twoIntsStruct * data;\n        twoIntsStruct * * pointer = (twoIntsStruct * *)malloc(sizeof(twoIntsStruct *));\n        if (pointer == NULL) {exit(-1);}\n        /* initialize both the pointer and the data pointed to */\n        data = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n        if (data == NULL) {exit(-1);}\n        data->intOne = 5;\n        data->intTwo = 6;\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            twoIntsStruct * data = *pointer;\n            printIntLine(data->intOne);\n            printIntLine(data->intTwo);\n        }\n        free(pointer);\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(STATIC_CONST_FIVE==5)\n    {\n        {\n            int data;\n            int * pointer = (int *)ALLOCA(sizeof(int));\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int data = *pointer;\n                printIntLine(data);\n            }\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_pointer_alloca_use_17_bad()\n{\n    int j;\n    for(j = 0; j < 1; j++)\n    {\n        {\n            twoIntsStruct * * pointer = (twoIntsStruct * *)ALLOCA(sizeof(twoIntsStruct *));\n            twoIntsStruct * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printIntLine(data->intOne);\n            printIntLine(data->intTwo);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_pointer_malloc_use_03_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(staticReturnsTrue())\n    {\n        {\n            twoIntsStruct data;\n            twoIntsStruct * pointer = (twoIntsStruct *)ALLOCA(sizeof(twoIntsStruct));\n            data.intOne = 1;\n            data.intTwo = 2;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct data = *pointer;\n                printIntLine(data.intOne);\n                printIntLine(data.intTwo);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    int k;\n    for(k = 0; k < 1; k++)\n    {\n        {\n            int64_t data;\n            int64_t * pointer = (int64_t *)ALLOCA(sizeof(int64_t));\n            data = 5LL;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int64_t data = *pointer;\n                printLongLongLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(5!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            wchar_t * data;\n            wchar_t * * pointer = (wchar_t * *)malloc(sizeof(wchar_t *));\n            if (pointer == NULL) {exit(-1);}\n            data = L\"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                wchar_t * data = *pointer;\n                printWLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_pointer_alloca_use_08_bad()\n{\n    if(staticReturnsTrue())\n    {\n        {\n            char * * pointer = (char * *)ALLOCA(sizeof(char *));\n            char * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printLine(data);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_alloca_use_02_bad()\n{\n    if(1)\n    {\n        {\n            int * pointer = (int *)ALLOCA(sizeof(int));\n            int data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printIntLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(5!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            twoIntsStruct data;\n            twoIntsStruct * pointer = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (pointer == NULL) {exit(-1);}\n            data.intOne = 1;\n            data.intTwo = 2;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct data = *pointer;\n                printIntLine(data.intOne);\n                printIntLine(data.intTwo);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__long_alloca_use_04_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalReturnsFalse())\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int * data;\n            int * * pointer = (int * *)ALLOCA(sizeof(int *));\n            /* initialize both the pointer and the data pointed to */\n            data = (int *)malloc(sizeof(int));\n            if (data == NULL) {exit(-1);}\n            *data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int * data = *pointer;\n                printIntLine(*data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(staticTrue)\n    {\n        {\n            double * data;\n            double * * pointer = (double * *)malloc(sizeof(double *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (double *)malloc(sizeof(double));\n            if (data == NULL) {exit(-1);}\n            *data = 5.0;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                double * data = *pointer;\n                printDoubleLine(*data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_malloc_use_05_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int64_t_alloca_use_07_good()\n{\n    good1();\n    good2();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_pointer_alloca_use_18_bad()\n{\n    goto sink;\nsink:\n    {\n        twoIntsStruct * * pointer = (twoIntsStruct * *)ALLOCA(sizeof(twoIntsStruct *));\n        twoIntsStruct * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n        printIntLine(data->intOne);\n        printIntLine(data->intTwo);\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__long_malloc_use_06_good()\n{\n    good1();\n    good2();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_malloc_use_09_bad()\n{\n    if(GLOBAL_CONST_TRUE)\n    {\n        {\n            wchar_t * * pointer = (wchar_t * *)malloc(sizeof(wchar_t *));\n            if (pointer == NULL) {exit(-1);}\n            wchar_t * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printWLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(STATIC_CONST_FALSE)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            char * data;\n            char * * pointer = (char * *)malloc(sizeof(char *));\n            if (pointer == NULL) {exit(-1);}\n            data = \"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char * data = *pointer;\n                printLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(STATIC_CONST_TRUE)\n    {\n        {\n            int data;\n            int * pointer = (int *)ALLOCA(sizeof(int));\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int data = *pointer;\n                printIntLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    switch(6)\n    {\n    case 6:\n    {\n        char * data;\n        char * * pointer = (char * *)malloc(sizeof(char *));\n        if (pointer == NULL) {exit(-1);}\n        data = \"string\";\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            char * data = *pointer;\n            printLine(data);\n        }\n        free(pointer);\n    }\n    break;\n    default:\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__double_pointer_malloc_use_06_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(1)\n    {\n        {\n            int data;\n            int * pointer = (int *)malloc(sizeof(int));\n            if (pointer == NULL) {exit(-1);}\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int data = *pointer;\n                printIntLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(STATIC_CONST_FALSE)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            char data;\n            char * pointer = (char *)malloc(sizeof(char));\n            if (pointer == NULL) {exit(-1);}\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char data = *pointer;\n                printHexCharLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__w32_return_implicit_01_bad() \n{\n    int intBad = helperBad();\n    printIntLine(intBad);\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_alloca_use_10_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_malloc_use_08_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalFive!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int * data;\n            int * * pointer = (int * *)malloc(sizeof(int *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (int *)malloc(sizeof(int));\n            if (data == NULL) {exit(-1);}\n            *data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int * data = *pointer;\n                printIntLine(*data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    while(1)\n    {\n        {\n            double * data;\n            double * * pointer = (double * *)ALLOCA(sizeof(double *));\n            /* initialize both the pointer and the data pointed to */\n            data = (double *)malloc(sizeof(double));\n            if (data == NULL) {exit(-1);}\n            *data = 5.0;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                double * data = *pointer;\n                printDoubleLine(*data);\n            }\n        }\n        break;\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(1)\n    {\n        {\n            char * data;\n            char * * pointer = (char * *)ALLOCA(sizeof(char *));\n            data = \"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char * data = *pointer;\n                printLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(staticReturnsTrue())\n    {\n        {\n            double * data;\n            double * * pointer = (double * *)malloc(sizeof(double *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (double *)malloc(sizeof(double));\n            if (data == NULL) {exit(-1);}\n            *data = 5.0;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                double * data = *pointer;\n                printDoubleLine(*data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(globalTrue)\n    {\n        {\n            int * data;\n            int * * pointer = (int * *)ALLOCA(sizeof(int *));\n            /* initialize both the pointer and the data pointed to */\n            data = (int *)malloc(sizeof(int));\n            if (data == NULL) {exit(-1);}\n            *data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int * data = *pointer;\n                printIntLine(*data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalFive!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int64_t data;\n            int64_t * pointer = (int64_t *)ALLOCA(sizeof(int64_t));\n            data = 5LL;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int64_t data = *pointer;\n                printLongLongLine(data);\n            }\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_alloca_use_13_bad()\n{\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        {\n            twoIntsStruct * pointer = (twoIntsStruct *)ALLOCA(sizeof(twoIntsStruct));\n            twoIntsStruct data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printIntLine(data.intOne);\n            printIntLine(data.intTwo);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_pointer_malloc_use_12_bad()\n{\n    if(globalReturnsTrueOrFalse())\n    {\n        {\n            int * * pointer = (int * *)malloc(sizeof(int *));\n            if (pointer == NULL) {exit(-1);}\n            int * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printIntLine(*data);\n        }\n    }\n    else\n    {\n        {\n            int * data;\n            int * * pointer = (int * *)malloc(sizeof(int *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (int *)malloc(sizeof(int));\n            if (data == NULL) {exit(-1);}\n            *data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int * data = *pointer;\n                printIntLine(*data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__double_pointer_alloca_use_01_bad()\n{\n    {\n        double * * pointer = (double * *)ALLOCA(sizeof(double *));\n        double * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n        printDoubleLine(*data);\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int64_t_malloc_use_02_bad()\n{\n    if(1)\n    {\n        {\n            int64_t * pointer = (int64_t *)malloc(sizeof(int64_t));\n            if (pointer == NULL) {exit(-1);}\n            int64_t data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printLongLongLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_malloc_use_14_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(GLOBAL_CONST_FIVE!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int * data;\n            int * * pointer = (int * *)ALLOCA(sizeof(int *));\n            /* initialize both the pointer and the data pointed to */\n            data = (int *)malloc(sizeof(int));\n            if (data == NULL) {exit(-1);}\n            *data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int * data = *pointer;\n                printIntLine(*data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(globalTrue)\n    {\n        {\n            wchar_t * data;\n            wchar_t * * pointer = (wchar_t * *)malloc(sizeof(wchar_t *));\n            if (pointer == NULL) {exit(-1);}\n            data = L\"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                wchar_t * data = *pointer;\n                printWLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalReturnsFalse())\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            twoIntsStruct data;\n            twoIntsStruct * pointer = (twoIntsStruct *)ALLOCA(sizeof(twoIntsStruct));\n            data.intOne = 1;\n            data.intTwo = 2;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct data = *pointer;\n                printIntLine(data.intOne);\n                printIntLine(data.intTwo);\n            }\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int64_t_alloca_use_12_bad()\n{\n    if(globalReturnsTrueOrFalse())\n    {\n        {\n            int64_t * pointer = (int64_t *)ALLOCA(sizeof(int64_t));\n            int64_t data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printLongLongLine(data);\n        }\n    }\n    else\n    {\n        {\n            int64_t data;\n            int64_t * pointer = (int64_t *)ALLOCA(sizeof(int64_t));\n            data = 5LL;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int64_t data = *pointer;\n                printLongLongLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    switch(5)\n    {\n    case 6:\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n    {\n        char data;\n        char * pointer = (char *)ALLOCA(sizeof(char));\n        data = 5;\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            char data = *pointer;\n            printHexCharLine(data);\n        }\n    }\n    break;\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    while(1)\n    {\n        {\n            int * data;\n            int * * pointer = (int * *)ALLOCA(sizeof(int *));\n            /* initialize both the pointer and the data pointed to */\n            data = (int *)malloc(sizeof(int));\n            if (data == NULL) {exit(-1);}\n            *data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int * data = *pointer;\n                printIntLine(*data);\n            }\n        }\n        break;\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(5==5)\n    {\n        {\n            twoIntsStruct data;\n            twoIntsStruct * pointer = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (pointer == NULL) {exit(-1);}\n            data.intOne = 1;\n            data.intTwo = 2;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct data = *pointer;\n                printIntLine(data.intOne);\n                printIntLine(data.intTwo);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_malloc_use_11_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(staticFive!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int * data;\n            int * * pointer = (int * *)ALLOCA(sizeof(int *));\n            /* initialize both the pointer and the data pointed to */\n            data = (int *)malloc(sizeof(int));\n            if (data == NULL) {exit(-1);}\n            *data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int * data = *pointer;\n                printIntLine(*data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__long_alloca_use_01_good()\n{\n    good1();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_malloc_use_09_bad()\n{\n    if(GLOBAL_CONST_TRUE)\n    {\n        {\n            int * pointer = (int *)malloc(sizeof(int));\n            if (pointer == NULL) {exit(-1);}\n            int data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printIntLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(GLOBAL_CONST_FALSE)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            char data;\n            char * pointer = (char *)ALLOCA(sizeof(char));\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char data = *pointer;\n                printHexCharLine(data);\n            }\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__double_pointer_malloc_use_02_bad()\n{\n    if(1)\n    {\n        {\n            double * * pointer = (double * *)malloc(sizeof(double *));\n            if (pointer == NULL) {exit(-1);}\n            double * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printDoubleLine(*data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(0)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            twoIntsStruct data;\n            twoIntsStruct * pointer = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (pointer == NULL) {exit(-1);}\n            data.intOne = 1;\n            data.intTwo = 2;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct data = *pointer;\n                printIntLine(data.intOne);\n                printIntLine(data.intTwo);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_malloc_use_03_good()\n{\n    good1();\n    good2();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_alloca_use_14_bad()\n{\n    if(globalFive==5)\n    {\n        {\n            char * pointer = (char *)ALLOCA(sizeof(char));\n            char data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printHexCharLine(data);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__long_alloca_use_17_bad()\n{\n    int j;\n    for(j = 0; j < 1; j++)\n    {\n        {\n            long * pointer = (long *)ALLOCA(sizeof(long));\n            long data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printLongLine(data);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_alloca_use_17_bad()\n{\n    int j;\n    for(j = 0; j < 1; j++)\n    {\n        {\n            char * pointer = (char *)ALLOCA(sizeof(char));\n            char data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printHexCharLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_alloca_use_08_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_pointer_malloc_use_07_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(5!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            twoIntsStruct data;\n            twoIntsStruct * pointer = (twoIntsStruct *)ALLOCA(sizeof(twoIntsStruct));\n            data.intOne = 1;\n            data.intTwo = 2;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct data = *pointer;\n                printIntLine(data.intOne);\n                printIntLine(data.intTwo);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(GLOBAL_CONST_FALSE)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            char * data;\n            char * * pointer = (char * *)malloc(sizeof(char *));\n            if (pointer == NULL) {exit(-1);}\n            data = \"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char * data = *pointer;\n                printLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(staticFalse)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int * data;\n            int * * pointer = (int * *)ALLOCA(sizeof(int *));\n            /* initialize both the pointer and the data pointed to */\n            data = (int *)malloc(sizeof(int));\n            if (data == NULL) {exit(-1);}\n            *data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int * data = *pointer;\n                printIntLine(*data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(staticFive!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            double * data;\n            double * * pointer = (double * *)ALLOCA(sizeof(double *));\n            /* initialize both the pointer and the data pointed to */\n            data = (double *)malloc(sizeof(double));\n            if (data == NULL) {exit(-1);}\n            *data = 5.0;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                double * data = *pointer;\n                printDoubleLine(*data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_pointer_malloc_use_13_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(STATIC_CONST_TRUE)\n    {\n        {\n            int64_t data;\n            int64_t * pointer = (int64_t *)malloc(sizeof(int64_t));\n            if (pointer == NULL) {exit(-1);}\n            data = 5LL;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int64_t data = *pointer;\n                printLongLongLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__double_pointer_alloca_use_01_good()\n{\n    good1();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int64_t_alloca_use_01_bad()\n{\n    {\n        int64_t * pointer = (int64_t *)ALLOCA(sizeof(int64_t));\n        int64_t data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n        printLongLongLine(data);\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    while(1)\n    {\n        {\n            char * data;\n            char * * pointer = (char * *)malloc(sizeof(char *));\n            if (pointer == NULL) {exit(-1);}\n            data = \"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char * data = *pointer;\n                printLine(data);\n            }\n            free(pointer);\n        }\n        break;\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_pointer_malloc_use_12_bad()\n{\n    if(globalReturnsTrueOrFalse())\n    {\n        {\n            twoIntsStruct * * pointer = (twoIntsStruct * *)malloc(sizeof(twoIntsStruct *));\n            if (pointer == NULL) {exit(-1);}\n            twoIntsStruct * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printIntLine(data->intOne);\n            printIntLine(data->intTwo);\n        }\n    }\n    else\n    {\n        {\n            twoIntsStruct * data;\n            twoIntsStruct * * pointer = (twoIntsStruct * *)malloc(sizeof(twoIntsStruct *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (data == NULL) {exit(-1);}\n            data->intOne = 5;\n            data->intTwo = 6;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct * data = *pointer;\n                printIntLine(data->intOne);\n                printIntLine(data->intTwo);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int64_t_alloca_use_15_bad()\n{\n    switch(6)\n    {\n    case 6:\n    {\n        int64_t * pointer = (int64_t *)ALLOCA(sizeof(int64_t));\n        int64_t data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n        printLongLongLine(data);\n    }\n    break;\n    default:\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(staticReturnsTrue())\n    {\n        {\n            int64_t data;\n            int64_t * pointer = (int64_t *)malloc(sizeof(int64_t));\n            if (pointer == NULL) {exit(-1);}\n            data = 5LL;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int64_t data = *pointer;\n                printLongLongLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_pointer_alloca_use_14_bad()\n{\n    if(globalFive==5)\n    {\n        {\n            twoIntsStruct * * pointer = (twoIntsStruct * *)ALLOCA(sizeof(twoIntsStruct *));\n            twoIntsStruct * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printIntLine(data->intOne);\n            printIntLine(data->intTwo);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__long_alloca_use_08_bad()\n{\n    if(staticReturnsTrue())\n    {\n        {\n            long * pointer = (long *)ALLOCA(sizeof(long));\n            long data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printLongLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(staticReturnsFalse())\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int * data;\n            int * * pointer = (int * *)ALLOCA(sizeof(int *));\n            /* initialize both the pointer and the data pointed to */\n            data = (int *)malloc(sizeof(int));\n            if (data == NULL) {exit(-1);}\n            *data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int * data = *pointer;\n                printIntLine(*data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__long_alloca_use_13_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalReturnsTrueOrFalse())\n    {\n        {\n            int64_t data;\n            int64_t * pointer = (int64_t *)ALLOCA(sizeof(int64_t));\n            data = 5LL;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int64_t data = *pointer;\n                printLongLongLine(data);\n            }\n        }\n    }\n    else\n    {\n        {\n            int64_t data;\n            int64_t * pointer = (int64_t *)ALLOCA(sizeof(int64_t));\n            data = 5LL;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int64_t data = *pointer;\n                printLongLongLine(data);\n            }\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_pointer_alloca_use_06_bad()\n{\n    if(STATIC_CONST_FIVE==5)\n    {\n        {\n            char * * pointer = (char * *)ALLOCA(sizeof(char *));\n            char * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printLine(data);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__long_malloc_use_04_bad()\n{\n    if(STATIC_CONST_TRUE)\n    {\n        {\n            long * pointer = (long *)malloc(sizeof(long));\n            if (pointer == NULL) {exit(-1);}\n            long data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printLongLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(STATIC_CONST_FALSE)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            char * data;\n            char * * pointer = (char * *)ALLOCA(sizeof(char *));\n            data = \"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char * data = *pointer;\n                printLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__w32_return_implicit_01_good() \n{\n    good1();\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(5==5)\n    {\n        {\n            twoIntsStruct * data;\n            twoIntsStruct * * pointer = (twoIntsStruct * *)malloc(sizeof(twoIntsStruct *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (data == NULL) {exit(-1);}\n            data->intOne = 5;\n            data->intTwo = 6;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct * data = *pointer;\n                printIntLine(data->intOne);\n                printIntLine(data->intTwo);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int64_t_malloc_use_14_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(STATIC_CONST_FALSE)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            double * data;\n            double * * pointer = (double * *)malloc(sizeof(double *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (double *)malloc(sizeof(double));\n            if (data == NULL) {exit(-1);}\n            *data = 5.0;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                double * data = *pointer;\n                printDoubleLine(*data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalReturnsFalse())\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            twoIntsStruct * data;\n            twoIntsStruct * * pointer = (twoIntsStruct * *)malloc(sizeof(twoIntsStruct *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (data == NULL) {exit(-1);}\n            data->intOne = 5;\n            data->intTwo = 6;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct * data = *pointer;\n                printIntLine(data->intOne);\n                printIntLine(data->intTwo);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        {\n            int * data;\n            int * * pointer = (int * *)ALLOCA(sizeof(int *));\n            /* initialize both the pointer and the data pointed to */\n            data = (int *)malloc(sizeof(int));\n            if (data == NULL) {exit(-1);}\n            *data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int * data = *pointer;\n                printIntLine(*data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__long_alloca_use_02_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_pointer_alloca_use_14_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(0)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            twoIntsStruct * data;\n            twoIntsStruct * * pointer = (twoIntsStruct * *)ALLOCA(sizeof(twoIntsStruct *));\n            /* initialize both the pointer and the data pointed to */\n            data = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (data == NULL) {exit(-1);}\n            data->intOne = 5;\n            data->intTwo = 6;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct * data = *pointer;\n                printIntLine(data->intOne);\n                printIntLine(data->intTwo);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(0)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            double * data;\n            double * * pointer = (double * *)ALLOCA(sizeof(double *));\n            /* initialize both the pointer and the data pointed to */\n            data = (double *)malloc(sizeof(double));\n            if (data == NULL) {exit(-1);}\n            *data = 5.0;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                double * data = *pointer;\n                printDoubleLine(*data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    switch(6)\n    {\n    case 6:\n    {\n        char data;\n        char * pointer = (char *)malloc(sizeof(char));\n        if (pointer == NULL) {exit(-1);}\n        data = 5;\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            char data = *pointer;\n            printHexCharLine(data);\n        }\n        free(pointer);\n    }\n    break;\n    default:\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_pointer_alloca_use_13_good()\n{\n    good1();\n    good2();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_pointer_alloca_use_06_bad()\n{\n    if(STATIC_CONST_FIVE==5)\n    {\n        {\n            twoIntsStruct * * pointer = (twoIntsStruct * *)ALLOCA(sizeof(twoIntsStruct *));\n            twoIntsStruct * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printIntLine(data->intOne);\n            printIntLine(data->intTwo);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_pointer_malloc_use_18_bad()\n{\n    goto sink;\nsink:\n    {\n        char * * pointer = (char * *)malloc(sizeof(char *));\n        if (pointer == NULL) {exit(-1);}\n        char * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n        free(pointer);\n        printLine(data);\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_pointer_malloc_use_04_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int64_t_alloca_use_06_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(staticFive!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int * data;\n            int * * pointer = (int * *)malloc(sizeof(int *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (int *)malloc(sizeof(int));\n            if (data == NULL) {exit(-1);}\n            *data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int * data = *pointer;\n                printIntLine(*data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    switch(6)\n    {\n    case 6:\n    {\n        long data;\n        long * pointer = (long *)malloc(sizeof(long));\n        if (pointer == NULL) {exit(-1);}\n        data = 5L;\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            long data = *pointer;\n            printLongLine(data);\n        }\n        free(pointer);\n    }\n    break;\n    default:\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__double_pointer_alloca_use_08_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(staticFalse)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            wchar_t * data;\n            wchar_t * * pointer = (wchar_t * *)ALLOCA(sizeof(wchar_t *));\n            data = L\"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                wchar_t * data = *pointer;\n                printWLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    while(1)\n    {\n        {\n            char data;\n            char * pointer = (char *)ALLOCA(sizeof(char));\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char data = *pointer;\n                printHexCharLine(data);\n            }\n        }\n        break;\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    int k;\n    for(k = 0; k < 1; k++)\n    {\n        {\n            char * data;\n            char * * pointer = (char * *)ALLOCA(sizeof(char *));\n            data = \"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char * data = *pointer;\n                printLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int64_t_malloc_use_10_good()\n{\n    good1();\n    good2();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_malloc_use_14_bad()\n{\n    if(globalFive==5)\n    {\n        {\n            char * pointer = (char *)malloc(sizeof(char));\n            if (pointer == NULL) {exit(-1);}\n            char data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printHexCharLine(data);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_malloc_use_10_bad()\n{\n    if(globalTrue)\n    {\n        {\n            wchar_t * * pointer = (wchar_t * *)malloc(sizeof(wchar_t *));\n            if (pointer == NULL) {exit(-1);}\n            wchar_t * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printWLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalReturnsTrueOrFalse())\n    {\n        {\n            twoIntsStruct * data;\n            twoIntsStruct * * pointer = (twoIntsStruct * *)ALLOCA(sizeof(twoIntsStruct *));\n            /* initialize both the pointer and the data pointed to */\n            data = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (data == NULL) {exit(-1);}\n            data->intOne = 5;\n            data->intTwo = 6;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct * data = *pointer;\n                printIntLine(data->intOne);\n                printIntLine(data->intTwo);\n            }\n        }\n    }\n    else\n    {\n        {\n            twoIntsStruct * data;\n            twoIntsStruct * * pointer = (twoIntsStruct * *)ALLOCA(sizeof(twoIntsStruct *));\n            /* initialize both the pointer and the data pointed to */\n            data = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (data == NULL) {exit(-1);}\n            data->intOne = 5;\n            data->intTwo = 6;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct * data = *pointer;\n                printIntLine(data->intOne);\n                printIntLine(data->intTwo);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(globalTrue)\n    {\n        {\n            double * data;\n            double * * pointer = (double * *)malloc(sizeof(double *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (double *)malloc(sizeof(double));\n            if (data == NULL) {exit(-1);}\n            *data = 5.0;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                double * data = *pointer;\n                printDoubleLine(*data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalFive!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int64_t data;\n            int64_t * pointer = (int64_t *)malloc(sizeof(int64_t));\n            if (pointer == NULL) {exit(-1);}\n            data = 5LL;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int64_t data = *pointer;\n                printLongLongLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    int k;\n    for(k = 0; k < 1; k++)\n    {\n        {\n            twoIntsStruct data;\n            twoIntsStruct * pointer = (twoIntsStruct *)ALLOCA(sizeof(twoIntsStruct));\n            data.intOne = 1;\n            data.intTwo = 2;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct data = *pointer;\n                printIntLine(data.intOne);\n                printIntLine(data.intTwo);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(staticFive!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            char * data;\n            char * * pointer = (char * *)malloc(sizeof(char *));\n            if (pointer == NULL) {exit(-1);}\n            data = \"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char * data = *pointer;\n                printLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(STATIC_CONST_FIVE==5)\n    {\n        {\n            wchar_t * data;\n            wchar_t * * pointer = (wchar_t * *)ALLOCA(sizeof(wchar_t *));\n            data = L\"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                wchar_t * data = *pointer;\n                printWLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(GLOBAL_CONST_FIVE!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            long data;\n            long * pointer = (long *)malloc(sizeof(long));\n            if (pointer == NULL) {exit(-1);}\n            data = 5L;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                long data = *pointer;\n                printLongLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_pointer_alloca_use_08_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(globalReturnsTrue())\n    {\n        {\n            int data;\n            int * pointer = (int *)malloc(sizeof(int));\n            if (pointer == NULL) {exit(-1);}\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int data = *pointer;\n                printIntLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    int k;\n    for(k = 0; k < 1; k++)\n    {\n        {\n            wchar_t * data;\n            wchar_t * * pointer = (wchar_t * *)ALLOCA(sizeof(wchar_t *));\n            data = L\"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                wchar_t * data = *pointer;\n                printWLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    goto sink;\nsink:\n    {\n        int data;\n        int * pointer = (int *)ALLOCA(sizeof(int));\n        data = 5;\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            int data = *pointer;\n            printIntLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalFalse)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            long data;\n            long * pointer = (long *)ALLOCA(sizeof(long));\n            data = 5L;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                long data = *pointer;\n                printLongLine(data);\n            }\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_malloc_use_09_bad()\n{\n    if(GLOBAL_CONST_TRUE)\n    {\n        {\n            twoIntsStruct * pointer = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (pointer == NULL) {exit(-1);}\n            twoIntsStruct data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printIntLine(data.intOne);\n            printIntLine(data.intTwo);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(staticFive==5)\n    {\n        {\n            double * data;\n            double * * pointer = (double * *)malloc(sizeof(double *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (double *)malloc(sizeof(double));\n            if (data == NULL) {exit(-1);}\n            *data = 5.0;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                double * data = *pointer;\n                printDoubleLine(*data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(STATIC_CONST_TRUE)\n    {\n        {\n            int data;\n            int * pointer = (int *)malloc(sizeof(int));\n            if (pointer == NULL) {exit(-1);}\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int data = *pointer;\n                printIntLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_pointer_alloca_use_02_good()\n{\n    good1();\n    good2();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_pointer_malloc_use_15_bad()\n{\n    switch(6)\n    {\n    case 6:\n    {\n        twoIntsStruct * * pointer = (twoIntsStruct * *)malloc(sizeof(twoIntsStruct *));\n        if (pointer == NULL) {exit(-1);}\n        twoIntsStruct * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n        free(pointer);\n        printIntLine(data->intOne);\n        printIntLine(data->intTwo);\n    }\n    break;\n    default:\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(globalReturnsTrue())\n    {\n        {\n            long data;\n            long * pointer = (long *)malloc(sizeof(long));\n            if (pointer == NULL) {exit(-1);}\n            data = 5L;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                long data = *pointer;\n                printLongLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    goto sink;\nsink:\n    {\n        twoIntsStruct * data;\n        twoIntsStruct * * pointer = (twoIntsStruct * *)ALLOCA(sizeof(twoIntsStruct *));\n        /* initialize both the pointer and the data pointed to */\n        data = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n        if (data == NULL) {exit(-1);}\n        data->intOne = 5;\n        data->intTwo = 6;\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            twoIntsStruct * data = *pointer;\n            printIntLine(data->intOne);\n            printIntLine(data->intTwo);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(globalTrue)\n    {\n        {\n            char * data;\n            char * * pointer = (char * *)malloc(sizeof(char *));\n            if (pointer == NULL) {exit(-1);}\n            data = \"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char * data = *pointer;\n                printLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(staticReturnsTrue())\n    {\n        {\n            twoIntsStruct * data;\n            twoIntsStruct * * pointer = (twoIntsStruct * *)malloc(sizeof(twoIntsStruct *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (data == NULL) {exit(-1);}\n            data->intOne = 5;\n            data->intTwo = 6;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct * data = *pointer;\n                printIntLine(data->intOne);\n                printIntLine(data->intTwo);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__long_alloca_use_03_bad()\n{\n    if(5==5)\n    {\n        {\n            long * pointer = (long *)ALLOCA(sizeof(long));\n            long data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printLongLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(0)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int data;\n            int * pointer = (int *)malloc(sizeof(int));\n            if (pointer == NULL) {exit(-1);}\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int data = *pointer;\n                printIntLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(globalFive==5)\n    {\n        {\n            int64_t data;\n            int64_t * pointer = (int64_t *)ALLOCA(sizeof(int64_t));\n            data = 5LL;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int64_t data = *pointer;\n                printLongLongLine(data);\n            }\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__long_alloca_use_16_bad()\n{\n    while(1)\n    {\n        {\n            long * pointer = (long *)ALLOCA(sizeof(long));\n            long data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printLongLine(data);\n        }\n        break;\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int64_t_malloc_use_03_good()\n{\n    good1();\n    good2();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_pointer_malloc_use_08_bad()\n{\n    if(staticReturnsTrue())\n    {\n        {\n            char * * pointer = (char * *)malloc(sizeof(char *));\n            if (pointer == NULL) {exit(-1);}\n            char * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printLine(data);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_pointer_malloc_use_18_bad()\n{\n    goto sink;\nsink:\n    {\n        int * * pointer = (int * *)malloc(sizeof(int *));\n        if (pointer == NULL) {exit(-1);}\n        int * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n        free(pointer);\n        printIntLine(*data);\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    goto sink;\nsink:\n    {\n        char data;\n        char * pointer = (char *)malloc(sizeof(char));\n        if (pointer == NULL) {exit(-1);}\n        data = 5;\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            char data = *pointer;\n            printHexCharLine(data);\n        }\n        free(pointer);\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(GLOBAL_CONST_TRUE)\n    {\n        {\n            long data;\n            long * pointer = (long *)malloc(sizeof(long));\n            if (pointer == NULL) {exit(-1);}\n            data = 5L;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                long data = *pointer;\n                printLongLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(STATIC_CONST_TRUE)\n    {\n        {\n            twoIntsStruct data;\n            twoIntsStruct * pointer = (twoIntsStruct *)ALLOCA(sizeof(twoIntsStruct));\n            data.intOne = 1;\n            data.intTwo = 2;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct data = *pointer;\n                printIntLine(data.intOne);\n                printIntLine(data.intTwo);\n            }\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_alloca_use_18_bad()\n{\n    goto sink;\nsink:\n    {\n        wchar_t * * pointer = (wchar_t * *)ALLOCA(sizeof(wchar_t *));\n        wchar_t * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n        printWLine(data);\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_pointer_malloc_use_01_good()\n{\n    good1();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_alloca_use_18_good()\n{\n    good1();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalFive!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int data;\n            int * pointer = (int *)ALLOCA(sizeof(int));\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int data = *pointer;\n                printIntLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(0)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            long data;\n            long * pointer = (long *)ALLOCA(sizeof(long));\n            data = 5L;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                long data = *pointer;\n                printLongLine(data);\n            }\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__double_pointer_alloca_use_14_bad()\n{\n    if(globalFive==5)\n    {\n        {\n            double * * pointer = (double * *)ALLOCA(sizeof(double *));\n            double * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printDoubleLine(*data);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__long_malloc_use_17_bad()\n{\n    int j;\n    for(j = 0; j < 1; j++)\n    {\n        {\n            long * pointer = (long *)malloc(sizeof(long));\n            if (pointer == NULL) {exit(-1);}\n            long data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printLongLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalReturnsTrueOrFalse())\n    {\n        {\n            int64_t data;\n            int64_t * pointer = (int64_t *)malloc(sizeof(int64_t));\n            if (pointer == NULL) {exit(-1);}\n            data = 5LL;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int64_t data = *pointer;\n                printLongLongLine(data);\n            }\n            free(pointer);\n        }\n    }\n    else\n    {\n        {\n            int64_t data;\n            int64_t * pointer = (int64_t *)malloc(sizeof(int64_t));\n            if (pointer == NULL) {exit(-1);}\n            data = 5LL;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int64_t data = *pointer;\n                printLongLongLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_alloca_use_09_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_alloca_use_01_good()\n{\n    good1();\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(STATIC_CONST_FIVE==5)\n    {\n        {\n            int data;\n            int * pointer = (int *)malloc(sizeof(int));\n            if (pointer == NULL) {exit(-1);}\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int data = *pointer;\n                printIntLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_alloca_use_01_bad()\n{\n    {\n        int * pointer = (int *)ALLOCA(sizeof(int));\n        int data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n        printIntLine(data);\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_pointer_malloc_use_18_good()\n{\n    good1();\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(staticFive==5)\n    {\n        {\n            int * data;\n            int * * pointer = (int * *)malloc(sizeof(int *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (int *)malloc(sizeof(int));\n            if (data == NULL) {exit(-1);}\n            *data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int * data = *pointer;\n                printIntLine(*data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalFalse)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            wchar_t * data;\n            wchar_t * * pointer = (wchar_t * *)malloc(sizeof(wchar_t *));\n            if (pointer == NULL) {exit(-1);}\n            data = L\"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                wchar_t * data = *pointer;\n                printWLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_alloca_use_09_bad()\n{\n    if(GLOBAL_CONST_TRUE)\n    {\n        {\n            twoIntsStruct * pointer = (twoIntsStruct *)ALLOCA(sizeof(twoIntsStruct));\n            twoIntsStruct data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printIntLine(data.intOne);\n            printIntLine(data.intTwo);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    goto sink;\nsink:\n    {\n        int64_t data;\n        int64_t * pointer = (int64_t *)malloc(sizeof(int64_t));\n        if (pointer == NULL) {exit(-1);}\n        data = 5LL;\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            int64_t data = *pointer;\n            printLongLongLine(data);\n        }\n        free(pointer);\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_alloca_use_17_bad()\n{\n    int j;\n    for(j = 0; j < 1; j++)\n    {\n        {\n            twoIntsStruct * pointer = (twoIntsStruct *)ALLOCA(sizeof(twoIntsStruct));\n            twoIntsStruct data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printIntLine(data.intOne);\n            printIntLine(data.intTwo);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_alloca_use_13_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(staticReturnsFalse())\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            char * data;\n            char * * pointer = (char * *)malloc(sizeof(char *));\n            if (pointer == NULL) {exit(-1);}\n            data = \"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char * data = *pointer;\n                printLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__long_malloc_use_15_bad()\n{\n    switch(6)\n    {\n    case 6:\n    {\n        long * pointer = (long *)malloc(sizeof(long));\n        if (pointer == NULL) {exit(-1);}\n        long data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n        free(pointer);\n        printLongLine(data);\n    }\n    break;\n    default:\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_alloca_use_17_bad()\n{\n    int j;\n    for(j = 0; j < 1; j++)\n    {\n        {\n            wchar_t * * pointer = (wchar_t * *)ALLOCA(sizeof(wchar_t *));\n            wchar_t * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printWLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_pointer_alloca_use_04_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_alloca_use_10_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__double_pointer_malloc_use_05_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalReturnsTrueOrFalse())\n    {\n        {\n            char * data;\n            char * * pointer = (char * *)malloc(sizeof(char *));\n            if (pointer == NULL) {exit(-1);}\n            data = \"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char * data = *pointer;\n                printLine(data);\n            }\n            free(pointer);\n        }\n    }\n    else\n    {\n        {\n            char * data;\n            char * * pointer = (char * *)malloc(sizeof(char *));\n            if (pointer == NULL) {exit(-1);}\n            data = \"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char * data = *pointer;\n                printLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(STATIC_CONST_FIVE==5)\n    {\n        {\n            char * data;\n            char * * pointer = (char * *)malloc(sizeof(char *));\n            if (pointer == NULL) {exit(-1);}\n            data = \"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char * data = *pointer;\n                printLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(globalFive==5)\n    {\n        {\n            int64_t data;\n            int64_t * pointer = (int64_t *)malloc(sizeof(int64_t));\n            if (pointer == NULL) {exit(-1);}\n            data = 5LL;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int64_t data = *pointer;\n                printLongLongLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    switch(6)\n    {\n    case 6:\n    {\n        char * data;\n        char * * pointer = (char * *)ALLOCA(sizeof(char *));\n        data = \"string\";\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            char * data = *pointer;\n            printLine(data);\n        }\n    }\n    break;\n    default:\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_malloc_use_08_bad()\n{\n    if(staticReturnsTrue())\n    {\n        {\n            char * pointer = (char *)malloc(sizeof(char));\n            if (pointer == NULL) {exit(-1);}\n            char data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printHexCharLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(staticReturnsTrue())\n    {\n        {\n            long data;\n            long * pointer = (long *)ALLOCA(sizeof(long));\n            data = 5L;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                long data = *pointer;\n                printLongLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_alloca_use_07_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_malloc_use_02_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(5!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            char * data;\n            char * * pointer = (char * *)ALLOCA(sizeof(char *));\n            data = \"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char * data = *pointer;\n                printLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(globalFive==5)\n    {\n        {\n            double * data;\n            double * * pointer = (double * *)ALLOCA(sizeof(double *));\n            /* initialize both the pointer and the data pointed to */\n            data = (double *)malloc(sizeof(double));\n            if (data == NULL) {exit(-1);}\n            *data = 5.0;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                double * data = *pointer;\n                printDoubleLine(*data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(1)\n    {\n        {\n            char data;\n            char * pointer = (char *)ALLOCA(sizeof(char));\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char data = *pointer;\n                printHexCharLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    while(1)\n    {\n        {\n            wchar_t * data;\n            wchar_t * * pointer = (wchar_t * *)ALLOCA(sizeof(wchar_t *));\n            data = L\"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                wchar_t * data = *pointer;\n                printWLine(data);\n            }\n        }\n        break;\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_malloc_use_08_bad()\n{\n    if(staticReturnsTrue())\n    {\n        {\n            twoIntsStruct * pointer = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (pointer == NULL) {exit(-1);}\n            twoIntsStruct data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printIntLine(data.intOne);\n            printIntLine(data.intTwo);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_malloc_use_16_bad()\n{\n    while(1)\n    {\n        {\n            wchar_t * * pointer = (wchar_t * *)malloc(sizeof(wchar_t *));\n            if (pointer == NULL) {exit(-1);}\n            wchar_t * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printWLine(data);\n        }\n        break;\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(staticFive==5)\n    {\n        {\n            long data;\n            long * pointer = (long *)ALLOCA(sizeof(long));\n            data = 5L;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                long data = *pointer;\n                printLongLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_malloc_use_14_good()\n{\n    good1();\n    good2();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_alloca_use_07_bad()\n{\n    if(staticFive==5)\n    {\n        {\n            int * pointer = (int *)ALLOCA(sizeof(int));\n            int data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printIntLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(STATIC_CONST_TRUE)\n    {\n        {\n            twoIntsStruct * data;\n            twoIntsStruct * * pointer = (twoIntsStruct * *)ALLOCA(sizeof(twoIntsStruct *));\n            /* initialize both the pointer and the data pointed to */\n            data = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (data == NULL) {exit(-1);}\n            data->intOne = 5;\n            data->intTwo = 6;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct * data = *pointer;\n                printIntLine(data->intOne);\n                printIntLine(data->intTwo);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalReturnsFalse())\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            char data;\n            char * pointer = (char *)ALLOCA(sizeof(char));\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char data = *pointer;\n                printHexCharLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(GLOBAL_CONST_FIVE!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            twoIntsStruct data;\n            twoIntsStruct * pointer = (twoIntsStruct *)ALLOCA(sizeof(twoIntsStruct));\n            data.intOne = 1;\n            data.intTwo = 2;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct data = *pointer;\n                printIntLine(data.intOne);\n                printIntLine(data.intTwo);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_malloc_use_03_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalFive!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            double * data;\n            double * * pointer = (double * *)ALLOCA(sizeof(double *));\n            /* initialize both the pointer and the data pointed to */\n            data = (double *)malloc(sizeof(double));\n            if (data == NULL) {exit(-1);}\n            *data = 5.0;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                double * data = *pointer;\n                printDoubleLine(*data);\n            }\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_alloca_use_05_bad()\n{\n    if(staticTrue)\n    {\n        {\n            char * pointer = (char *)ALLOCA(sizeof(char));\n            char data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printHexCharLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_pointer_alloca_use_03_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(staticFive!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            long data;\n            long * pointer = (long *)malloc(sizeof(long));\n            if (pointer == NULL) {exit(-1);}\n            data = 5L;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                long data = *pointer;\n                printLongLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_alloca_use_04_good()\n{\n    good1();\n    good2();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_pointer_malloc_use_04_bad()\n{\n    if(STATIC_CONST_TRUE)\n    {\n        {\n            char * * pointer = (char * *)malloc(sizeof(char *));\n            if (pointer == NULL) {exit(-1);}\n            char * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(GLOBAL_CONST_FIVE!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int data;\n            int * pointer = (int *)malloc(sizeof(int));\n            if (pointer == NULL) {exit(-1);}\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int data = *pointer;\n                printIntLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(STATIC_CONST_TRUE)\n    {\n        {\n            char * data;\n            char * * pointer = (char * *)malloc(sizeof(char *));\n            if (pointer == NULL) {exit(-1);}\n            data = \"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char * data = *pointer;\n                printLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(STATIC_CONST_FALSE)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            wchar_t * data;\n            wchar_t * * pointer = (wchar_t * *)ALLOCA(sizeof(wchar_t *));\n            data = L\"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                wchar_t * data = *pointer;\n                printWLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(GLOBAL_CONST_FALSE)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            char * data;\n            char * * pointer = (char * *)ALLOCA(sizeof(char *));\n            data = \"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char * data = *pointer;\n                printLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_malloc_use_14_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(staticFive!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            twoIntsStruct data;\n            twoIntsStruct * pointer = (twoIntsStruct *)ALLOCA(sizeof(twoIntsStruct));\n            data.intOne = 1;\n            data.intTwo = 2;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct data = *pointer;\n                printIntLine(data.intOne);\n                printIntLine(data.intTwo);\n            }\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_pointer_malloc_use_03_bad()\n{\n    if(5==5)\n    {\n        {\n            char * * pointer = (char * *)malloc(sizeof(char *));\n            if (pointer == NULL) {exit(-1);}\n            char * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(globalReturnsTrue())\n    {\n        {\n            double * data;\n            double * * pointer = (double * *)ALLOCA(sizeof(double *));\n            /* initialize both the pointer and the data pointed to */\n            data = (double *)malloc(sizeof(double));\n            if (data == NULL) {exit(-1);}\n            *data = 5.0;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                double * data = *pointer;\n                printDoubleLine(*data);\n            }\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__long_malloc_use_18_bad()\n{\n    goto sink;\nsink:\n    {\n        long * pointer = (long *)malloc(sizeof(long));\n        if (pointer == NULL) {exit(-1);}\n        long data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n        free(pointer);\n        printLongLine(data);\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__long_alloca_use_18_bad()\n{\n    goto sink;\nsink:\n    {\n        long * pointer = (long *)ALLOCA(sizeof(long));\n        long data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n        printLongLine(data);\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_pointer_alloca_use_01_good()\n{\n    good1();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_malloc_use_02_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(STATIC_CONST_FIVE==5)\n    {\n        {\n            char data;\n            char * pointer = (char *)ALLOCA(sizeof(char));\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char data = *pointer;\n                printHexCharLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_malloc_use_05_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(STATIC_CONST_FALSE)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int data;\n            int * pointer = (int *)malloc(sizeof(int));\n            if (pointer == NULL) {exit(-1);}\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int data = *pointer;\n                printIntLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_malloc_use_15_bad()\n{\n    switch(6)\n    {\n    case 6:\n    {\n        twoIntsStruct * pointer = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n        if (pointer == NULL) {exit(-1);}\n        twoIntsStruct data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n        free(pointer);\n        printIntLine(data.intOne);\n        printIntLine(data.intTwo);\n    }\n    break;\n    default:\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_pointer_malloc_use_08_good()\n{\n    good1();\n    good2();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_pointer_malloc_use_11_bad()\n{\n    if(globalReturnsTrue())\n    {\n        {\n            twoIntsStruct * * pointer = (twoIntsStruct * *)malloc(sizeof(twoIntsStruct *));\n            if (pointer == NULL) {exit(-1);}\n            twoIntsStruct * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printIntLine(data->intOne);\n            printIntLine(data->intTwo);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(staticTrue)\n    {\n        {\n            wchar_t * data;\n            wchar_t * * pointer = (wchar_t * *)ALLOCA(sizeof(wchar_t *));\n            data = L\"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                wchar_t * data = *pointer;\n                printWLine(data);\n            }\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_pointer_alloca_use_16_bad()\n{\n    while(1)\n    {\n        {\n            int * * pointer = (int * *)ALLOCA(sizeof(int *));\n            int * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printIntLine(*data);\n        }\n        break;\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(5==5)\n    {\n        {\n            long data;\n            long * pointer = (long *)ALLOCA(sizeof(long));\n            data = 5L;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                long data = *pointer;\n                printLongLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(staticReturnsTrue())\n    {\n        {\n            twoIntsStruct * data;\n            twoIntsStruct * * pointer = (twoIntsStruct * *)ALLOCA(sizeof(twoIntsStruct *));\n            /* initialize both the pointer and the data pointed to */\n            data = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (data == NULL) {exit(-1);}\n            data->intOne = 5;\n            data->intTwo = 6;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct * data = *pointer;\n                printIntLine(data->intOne);\n                printIntLine(data->intTwo);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalReturnsTrueOrFalse())\n    {\n        {\n            char data;\n            char * pointer = (char *)malloc(sizeof(char));\n            if (pointer == NULL) {exit(-1);}\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char data = *pointer;\n                printHexCharLine(data);\n            }\n            free(pointer);\n        }\n    }\n    else\n    {\n        {\n            char data;\n            char * pointer = (char *)malloc(sizeof(char));\n            if (pointer == NULL) {exit(-1);}\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char data = *pointer;\n                printHexCharLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_alloca_use_14_bad()\n{\n    if(globalFive==5)\n    {\n        {\n            int * pointer = (int *)ALLOCA(sizeof(int));\n            int data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printIntLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_malloc_use_07_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(STATIC_CONST_FIVE!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            char data;\n            char * pointer = (char *)ALLOCA(sizeof(char));\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char data = *pointer;\n                printHexCharLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(5!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int data;\n            int * pointer = (int *)malloc(sizeof(int));\n            if (pointer == NULL) {exit(-1);}\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int data = *pointer;\n                printIntLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__long_malloc_use_08_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(GLOBAL_CONST_FALSE)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            long data;\n            long * pointer = (long *)ALLOCA(sizeof(long));\n            data = 5L;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                long data = *pointer;\n                printLongLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_alloca_use_03_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(staticFive!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            char data;\n            char * pointer = (char *)ALLOCA(sizeof(char));\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char data = *pointer;\n                printHexCharLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_malloc_use_09_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_pointer_alloca_use_02_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalFive!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int data;\n            int * pointer = (int *)malloc(sizeof(int));\n            if (pointer == NULL) {exit(-1);}\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int data = *pointer;\n                printIntLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static int helperGood1(void)\n{    \n    /* FIX: return a value */\n    return 5;\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_malloc_use_02_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(5!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            double * data;\n            double * * pointer = (double * *)malloc(sizeof(double *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (double *)malloc(sizeof(double));\n            if (data == NULL) {exit(-1);}\n            *data = 5.0;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                double * data = *pointer;\n                printDoubleLine(*data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__long_alloca_use_09_bad()\n{\n    if(GLOBAL_CONST_TRUE)\n    {\n        {\n            long * pointer = (long *)ALLOCA(sizeof(long));\n            long data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printLongLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_alloca_use_09_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(GLOBAL_CONST_FIVE!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            twoIntsStruct * data;\n            twoIntsStruct * * pointer = (twoIntsStruct * *)malloc(sizeof(twoIntsStruct *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (data == NULL) {exit(-1);}\n            data->intOne = 5;\n            data->intTwo = 6;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct * data = *pointer;\n                printIntLine(data->intOne);\n                printIntLine(data->intTwo);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(STATIC_CONST_FIVE!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int data;\n            int * pointer = (int *)malloc(sizeof(int));\n            if (pointer == NULL) {exit(-1);}\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int data = *pointer;\n                printIntLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_pointer_alloca_use_11_bad()\n{\n    if(globalReturnsTrue())\n    {\n        {\n            int * * pointer = (int * *)ALLOCA(sizeof(int *));\n            int * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printIntLine(*data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(GLOBAL_CONST_FALSE)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            twoIntsStruct data;\n            twoIntsStruct * pointer = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (pointer == NULL) {exit(-1);}\n            data.intOne = 1;\n            data.intTwo = 2;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct data = *pointer;\n                printIntLine(data.intOne);\n                printIntLine(data.intTwo);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(GLOBAL_CONST_TRUE)\n    {\n        {\n            long data;\n            long * pointer = (long *)ALLOCA(sizeof(long));\n            data = 5L;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                long data = *pointer;\n                printLongLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(STATIC_CONST_FIVE!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            char data;\n            char * pointer = (char *)malloc(sizeof(char));\n            if (pointer == NULL) {exit(-1);}\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char data = *pointer;\n                printHexCharLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int64_t_malloc_use_07_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(1)\n    {\n        {\n            char * data;\n            char * * pointer = (char * *)malloc(sizeof(char *));\n            if (pointer == NULL) {exit(-1);}\n            data = \"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char * data = *pointer;\n                printLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(staticTrue)\n    {\n        {\n            wchar_t * data;\n            wchar_t * * pointer = (wchar_t * *)malloc(sizeof(wchar_t *));\n            if (pointer == NULL) {exit(-1);}\n            data = L\"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                wchar_t * data = *pointer;\n                printWLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int64_t_malloc_use_11_good()\n{\n    good1();\n    good2();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_pointer_alloca_use_04_bad()\n{\n    if(STATIC_CONST_TRUE)\n    {\n        {\n            char * * pointer = (char * *)ALLOCA(sizeof(char *));\n            char * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(GLOBAL_CONST_TRUE)\n    {\n        {\n            char data;\n            char * pointer = (char *)ALLOCA(sizeof(char));\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char data = *pointer;\n                printHexCharLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    int k;\n    for(k = 0; k < 1; k++)\n    {\n        {\n            int * data;\n            int * * pointer = (int * *)malloc(sizeof(int *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (int *)malloc(sizeof(int));\n            if (data == NULL) {exit(-1);}\n            *data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int * data = *pointer;\n                printIntLine(*data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(globalReturnsTrue())\n    {\n        {\n            char data;\n            char * pointer = (char *)malloc(sizeof(char));\n            if (pointer == NULL) {exit(-1);}\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char data = *pointer;\n                printHexCharLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(5!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            long data;\n            long * pointer = (long *)ALLOCA(sizeof(long));\n            data = 5L;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                long data = *pointer;\n                printLongLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(staticReturnsFalse())\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            wchar_t * data;\n            wchar_t * * pointer = (wchar_t * *)malloc(sizeof(wchar_t *));\n            if (pointer == NULL) {exit(-1);}\n            data = L\"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                wchar_t * data = *pointer;\n                printWLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_malloc_use_02_good()\n{\n    good1();\n    good2();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_pointer_alloca_use_05_bad()\n{\n    if(staticTrue)\n    {\n        {\n            twoIntsStruct * * pointer = (twoIntsStruct * *)ALLOCA(sizeof(twoIntsStruct *));\n            twoIntsStruct * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printIntLine(data->intOne);\n            printIntLine(data->intTwo);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__double_pointer_malloc_use_10_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good2()\n{\n    switch(6)\n    {\n    case 6:\n    {\n        double * data;\n        double * * pointer = (double * *)malloc(sizeof(double *));\n        if (pointer == NULL) {exit(-1);}\n        /* initialize both the pointer and the data pointed to */\n        data = (double *)malloc(sizeof(double));\n        if (data == NULL) {exit(-1);}\n        *data = 5.0;\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            double * data = *pointer;\n            printDoubleLine(*data);\n        }\n        free(pointer);\n    }\n    break;\n    default:\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_malloc_use_10_bad()\n{\n    if(globalTrue)\n    {\n        {\n            twoIntsStruct * pointer = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (pointer == NULL) {exit(-1);}\n            twoIntsStruct data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printIntLine(data.intOne);\n            printIntLine(data.intTwo);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    {\n        double * data;\n        double * * pointer = (double * *)ALLOCA(sizeof(double *));\n        /* initialize both the pointer and the data pointed to */\n        data = (double *)malloc(sizeof(double));\n        if (data == NULL) {exit(-1);}\n        *data = 5.0;\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            double * data = *pointer;\n            printDoubleLine(*data);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__w32_bare_return_01_good() \n{\n    good1();\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(1)\n    {\n        {\n            int * data;\n            int * * pointer = (int * *)malloc(sizeof(int *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (int *)malloc(sizeof(int));\n            if (data == NULL) {exit(-1);}\n            *data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int * data = *pointer;\n                printIntLine(*data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_alloca_use_10_good()\n{\n    good1();\n    good2();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_pointer_alloca_use_09_bad()\n{\n    if(GLOBAL_CONST_TRUE)\n    {\n        {\n            int * * pointer = (int * *)ALLOCA(sizeof(int *));\n            int * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printIntLine(*data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(GLOBAL_CONST_FIVE!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            wchar_t * data;\n            wchar_t * * pointer = (wchar_t * *)malloc(sizeof(wchar_t *));\n            if (pointer == NULL) {exit(-1);}\n            data = L\"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                wchar_t * data = *pointer;\n                printWLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalReturnsTrueOrFalse())\n    {\n        {\n            wchar_t * data;\n            wchar_t * * pointer = (wchar_t * *)ALLOCA(sizeof(wchar_t *));\n            data = L\"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                wchar_t * data = *pointer;\n                printWLine(data);\n            }\n        }\n    }\n    else\n    {\n        {\n            wchar_t * data;\n            wchar_t * * pointer = (wchar_t * *)ALLOCA(sizeof(wchar_t *));\n            data = L\"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                wchar_t * data = *pointer;\n                printWLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int64_t_malloc_use_01_good()\n{\n    good1();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_pointer_malloc_use_02_bad()\n{\n    if(1)\n    {\n        {\n            twoIntsStruct * * pointer = (twoIntsStruct * *)malloc(sizeof(twoIntsStruct *));\n            if (pointer == NULL) {exit(-1);}\n            twoIntsStruct * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printIntLine(data->intOne);\n            printIntLine(data->intTwo);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(5==5)\n    {\n        {\n            wchar_t * data;\n            wchar_t * * pointer = (wchar_t * *)malloc(sizeof(wchar_t *));\n            if (pointer == NULL) {exit(-1);}\n            data = L\"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                wchar_t * data = *pointer;\n                printWLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(5!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            double * data;\n            double * * pointer = (double * *)ALLOCA(sizeof(double *));\n            /* initialize both the pointer and the data pointed to */\n            data = (double *)malloc(sizeof(double));\n            if (data == NULL) {exit(-1);}\n            *data = 5.0;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                double * data = *pointer;\n                printDoubleLine(*data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__double_pointer_malloc_use_17_good()\n{\n    good1();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_malloc_use_01_bad()\n{\n    {\n        twoIntsStruct * pointer = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n        if (pointer == NULL) {exit(-1);}\n        twoIntsStruct data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n        free(pointer);\n        printIntLine(data.intOne);\n        printIntLine(data.intTwo);\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_malloc_use_15_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int64_t_malloc_use_06_good()\n{\n    good1();\n    good2();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_malloc_use_17_bad()\n{\n    int j;\n    for(j = 0; j < 1; j++)\n    {\n        {\n            int * pointer = (int *)malloc(sizeof(int));\n            if (pointer == NULL) {exit(-1);}\n            int data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printIntLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(STATIC_CONST_TRUE)\n    {\n        {\n            twoIntsStruct * data;\n            twoIntsStruct * * pointer = (twoIntsStruct * *)malloc(sizeof(twoIntsStruct *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (data == NULL) {exit(-1);}\n            data->intOne = 5;\n            data->intTwo = 6;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct * data = *pointer;\n                printIntLine(data->intOne);\n                printIntLine(data->intTwo);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_pointer_malloc_use_11_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(globalReturnsTrue())\n    {\n        {\n            int64_t data;\n            int64_t * pointer = (int64_t *)ALLOCA(sizeof(int64_t));\n            data = 5LL;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int64_t data = *pointer;\n                printLongLongLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_pointer_alloca_use_16_good()\n{\n    good1();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalFive!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            long data;\n            long * pointer = (long *)ALLOCA(sizeof(long));\n            data = 5L;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                long data = *pointer;\n                printLongLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_malloc_use_04_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    int k;\n    for(k = 0; k < 1; k++)\n    {\n        {\n            twoIntsStruct * data;\n            twoIntsStruct * * pointer = (twoIntsStruct * *)malloc(sizeof(twoIntsStruct *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (data == NULL) {exit(-1);}\n            data->intOne = 5;\n            data->intTwo = 6;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct * data = *pointer;\n                printIntLine(data->intOne);\n                printIntLine(data->intTwo);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_pointer_malloc_use_03_bad()\n{\n    if(5==5)\n    {\n        {\n            twoIntsStruct * * pointer = (twoIntsStruct * *)malloc(sizeof(twoIntsStruct *));\n            if (pointer == NULL) {exit(-1);}\n            twoIntsStruct * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printIntLine(data->intOne);\n            printIntLine(data->intTwo);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_malloc_use_16_bad()\n{\n    while(1)\n    {\n        {\n            char * pointer = (char *)malloc(sizeof(char));\n            if (pointer == NULL) {exit(-1);}\n            char data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printHexCharLine(data);\n        }\n        break;\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_pointer_malloc_use_02_bad()\n{\n    if(1)\n    {\n        {\n            int * * pointer = (int * *)malloc(sizeof(int *));\n            if (pointer == NULL) {exit(-1);}\n            int * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printIntLine(*data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalFive!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            twoIntsStruct data;\n            twoIntsStruct * pointer = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (pointer == NULL) {exit(-1);}\n            data.intOne = 1;\n            data.intTwo = 2;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct data = *pointer;\n                printIntLine(data.intOne);\n                printIntLine(data.intTwo);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__double_pointer_alloca_use_11_bad()\n{\n    if(globalReturnsTrue())\n    {\n        {\n            double * * pointer = (double * *)ALLOCA(sizeof(double *));\n            double * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printDoubleLine(*data);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_pointer_alloca_use_16_bad()\n{\n    while(1)\n    {\n        {\n            char * * pointer = (char * *)ALLOCA(sizeof(char *));\n            char * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printLine(data);\n        }\n        break;\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_malloc_use_10_bad()\n{\n    if(globalTrue)\n    {\n        {\n            char * pointer = (char *)malloc(sizeof(char));\n            if (pointer == NULL) {exit(-1);}\n            char data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printHexCharLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_malloc_use_10_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_alloca_use_07_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_alloca_use_03_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    {\n        char * data;\n        char * * pointer = (char * *)ALLOCA(sizeof(char *));\n        data = \"string\";\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            char * data = *pointer;\n            printLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        {\n            long data;\n            long * pointer = (long *)ALLOCA(sizeof(long));\n            data = 5L;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                long data = *pointer;\n                printLongLine(data);\n            }\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__long_malloc_use_05_bad()\n{\n    if(staticTrue)\n    {\n        {\n            long * pointer = (long *)malloc(sizeof(long));\n            if (pointer == NULL) {exit(-1);}\n            long data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printLongLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_alloca_use_14_good()\n{\n    good1();\n    good2();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_malloc_use_15_bad()\n{\n    switch(6)\n    {\n    case 6:\n    {\n        int * pointer = (int *)malloc(sizeof(int));\n        if (pointer == NULL) {exit(-1);}\n        int data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n        free(pointer);\n        printIntLine(data);\n    }\n    break;\n    default:\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(GLOBAL_CONST_FIVE!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int * data;\n            int * * pointer = (int * *)malloc(sizeof(int *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (int *)malloc(sizeof(int));\n            if (data == NULL) {exit(-1);}\n            *data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int * data = *pointer;\n                printIntLine(*data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__long_alloca_use_06_bad()\n{\n    if(STATIC_CONST_FIVE==5)\n    {\n        {\n            long * pointer = (long *)ALLOCA(sizeof(long));\n            long data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printLongLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(globalTrue)\n    {\n        {\n            int64_t data;\n            int64_t * pointer = (int64_t *)ALLOCA(sizeof(int64_t));\n            data = 5LL;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int64_t data = *pointer;\n                printLongLongLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalFalse)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int * data;\n            int * * pointer = (int * *)ALLOCA(sizeof(int *));\n            /* initialize both the pointer and the data pointed to */\n            data = (int *)malloc(sizeof(int));\n            if (data == NULL) {exit(-1);}\n            *data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int * data = *pointer;\n                printIntLine(*data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(staticReturnsTrue())\n    {\n        {\n            int data;\n            int * pointer = (int *)malloc(sizeof(int));\n            if (pointer == NULL) {exit(-1);}\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int data = *pointer;\n                printIntLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_pointer_alloca_use_07_bad()\n{\n    if(staticFive==5)\n    {\n        {\n            twoIntsStruct * * pointer = (twoIntsStruct * *)ALLOCA(sizeof(twoIntsStruct *));\n            twoIntsStruct * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printIntLine(data->intOne);\n            printIntLine(data->intTwo);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(5!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            twoIntsStruct * data;\n            twoIntsStruct * * pointer = (twoIntsStruct * *)ALLOCA(sizeof(twoIntsStruct *));\n            /* initialize both the pointer and the data pointed to */\n            data = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (data == NULL) {exit(-1);}\n            data->intOne = 5;\n            data->intTwo = 6;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct * data = *pointer;\n                printIntLine(data->intOne);\n                printIntLine(data->intTwo);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(staticReturnsFalse())\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int64_t data;\n            int64_t * pointer = (int64_t *)malloc(sizeof(int64_t));\n            if (pointer == NULL) {exit(-1);}\n            data = 5LL;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int64_t data = *pointer;\n                printLongLongLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_alloca_use_16_bad()\n{\n    while(1)\n    {\n        {\n            wchar_t * * pointer = (wchar_t * *)ALLOCA(sizeof(wchar_t *));\n            wchar_t * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printWLine(data);\n        }\n        break;\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_malloc_use_12_bad()\n{\n    if(globalReturnsTrueOrFalse())\n    {\n        {\n            twoIntsStruct * pointer = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (pointer == NULL) {exit(-1);}\n            twoIntsStruct data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printIntLine(data.intOne);\n            printIntLine(data.intTwo);\n        }\n    }\n    else\n    {\n        {\n            twoIntsStruct data;\n            twoIntsStruct * pointer = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (pointer == NULL) {exit(-1);}\n            data.intOne = 1;\n            data.intTwo = 2;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct data = *pointer;\n                printIntLine(data.intOne);\n                printIntLine(data.intTwo);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_pointer_malloc_use_02_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(5!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            char data;\n            char * pointer = (char *)ALLOCA(sizeof(char));\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char data = *pointer;\n                printHexCharLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int64_t_malloc_use_13_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_malloc_use_01_good()\n{\n    good1();\n}"}
{"target": 0, "func": "static void good1()\n{\n    int k;\n    for(k = 0; k < 1; k++)\n    {\n        {\n            int * data;\n            int * * pointer = (int * *)ALLOCA(sizeof(int *));\n            /* initialize both the pointer and the data pointed to */\n            data = (int *)malloc(sizeof(int));\n            if (data == NULL) {exit(-1);}\n            *data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int * data = *pointer;\n                printIntLine(*data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(1)\n    {\n        {\n            wchar_t * data;\n            wchar_t * * pointer = (wchar_t * *)malloc(sizeof(wchar_t *));\n            if (pointer == NULL) {exit(-1);}\n            data = L\"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                wchar_t * data = *pointer;\n                printWLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        {\n            twoIntsStruct data;\n            twoIntsStruct * pointer = (twoIntsStruct *)ALLOCA(sizeof(twoIntsStruct));\n            data.intOne = 1;\n            data.intTwo = 2;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct data = *pointer;\n                printIntLine(data.intOne);\n                printIntLine(data.intTwo);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(STATIC_CONST_TRUE)\n    {\n        {\n            int * data;\n            int * * pointer = (int * *)ALLOCA(sizeof(int *));\n            /* initialize both the pointer and the data pointed to */\n            data = (int *)malloc(sizeof(int));\n            if (data == NULL) {exit(-1);}\n            *data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int * data = *pointer;\n                printIntLine(*data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(GLOBAL_CONST_FIVE!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            double * data;\n            double * * pointer = (double * *)ALLOCA(sizeof(double *));\n            /* initialize both the pointer and the data pointed to */\n            data = (double *)malloc(sizeof(double));\n            if (data == NULL) {exit(-1);}\n            *data = 5.0;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                double * data = *pointer;\n                printDoubleLine(*data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__long_malloc_use_11_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_pointer_malloc_use_15_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__double_pointer_malloc_use_11_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    int k;\n    for(k = 0; k < 1; k++)\n    {\n        {\n            int data;\n            int * pointer = (int *)malloc(sizeof(int));\n            if (pointer == NULL) {exit(-1);}\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int data = *pointer;\n                printIntLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_malloc_use_17_good()\n{\n    good1();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__double_pointer_alloca_use_13_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__double_pointer_alloca_use_16_good()\n{\n    good1();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalFalse)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            double * data;\n            double * * pointer = (double * *)ALLOCA(sizeof(double *));\n            /* initialize both the pointer and the data pointed to */\n            data = (double *)malloc(sizeof(double));\n            if (data == NULL) {exit(-1);}\n            *data = 5.0;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                double * data = *pointer;\n                printDoubleLine(*data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(staticFalse)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            long data;\n            long * pointer = (long *)malloc(sizeof(long));\n            if (pointer == NULL) {exit(-1);}\n            data = 5L;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                long data = *pointer;\n                printLongLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(staticFalse)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            twoIntsStruct * data;\n            twoIntsStruct * * pointer = (twoIntsStruct * *)ALLOCA(sizeof(twoIntsStruct *));\n            /* initialize both the pointer and the data pointed to */\n            data = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (data == NULL) {exit(-1);}\n            data->intOne = 5;\n            data->intTwo = 6;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct * data = *pointer;\n                printIntLine(data->intOne);\n                printIntLine(data->intTwo);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(STATIC_CONST_TRUE)\n    {\n        {\n            double * data;\n            double * * pointer = (double * *)ALLOCA(sizeof(double *));\n            /* initialize both the pointer and the data pointed to */\n            data = (double *)malloc(sizeof(double));\n            if (data == NULL) {exit(-1);}\n            *data = 5.0;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                double * data = *pointer;\n                printDoubleLine(*data);\n            }\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__double_pointer_malloc_use_12_bad()\n{\n    if(globalReturnsTrueOrFalse())\n    {\n        {\n            double * * pointer = (double * *)malloc(sizeof(double *));\n            if (pointer == NULL) {exit(-1);}\n            double * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printDoubleLine(*data);\n        }\n    }\n    else\n    {\n        {\n            double * data;\n            double * * pointer = (double * *)malloc(sizeof(double *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (double *)malloc(sizeof(double));\n            if (data == NULL) {exit(-1);}\n            *data = 5.0;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                double * data = *pointer;\n                printDoubleLine(*data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__double_pointer_malloc_use_16_good()\n{\n    good1();\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(GLOBAL_CONST_TRUE)\n    {\n        {\n            char * data;\n            char * * pointer = (char * *)malloc(sizeof(char *));\n            if (pointer == NULL) {exit(-1);}\n            data = \"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char * data = *pointer;\n                printLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(staticFive!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            wchar_t * data;\n            wchar_t * * pointer = (wchar_t * *)malloc(sizeof(wchar_t *));\n            if (pointer == NULL) {exit(-1);}\n            data = L\"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                wchar_t * data = *pointer;\n                printWLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    int k;\n    for(k = 0; k < 1; k++)\n    {\n        {\n            char * data;\n            char * * pointer = (char * *)malloc(sizeof(char *));\n            if (pointer == NULL) {exit(-1);}\n            data = \"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char * data = *pointer;\n                printLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(staticTrue)\n    {\n        {\n            twoIntsStruct * data;\n            twoIntsStruct * * pointer = (twoIntsStruct * *)ALLOCA(sizeof(twoIntsStruct *));\n            /* initialize both the pointer and the data pointed to */\n            data = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (data == NULL) {exit(-1);}\n            data->intOne = 5;\n            data->intTwo = 6;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct * data = *pointer;\n                printIntLine(data->intOne);\n                printIntLine(data->intTwo);\n            }\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_pointer_alloca_use_03_bad()\n{\n    if(5==5)\n    {\n        {\n            twoIntsStruct * * pointer = (twoIntsStruct * *)ALLOCA(sizeof(twoIntsStruct *));\n            twoIntsStruct * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printIntLine(data->intOne);\n            printIntLine(data->intTwo);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_alloca_use_01_bad()\n{\n    {\n        twoIntsStruct * pointer = (twoIntsStruct *)ALLOCA(sizeof(twoIntsStruct));\n        twoIntsStruct data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n        printIntLine(data.intOne);\n        printIntLine(data.intTwo);\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_alloca_use_16_good()\n{\n    good1();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_alloca_use_13_bad()\n{\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        {\n            wchar_t * * pointer = (wchar_t * *)ALLOCA(sizeof(wchar_t *));\n            wchar_t * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printWLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(staticFive!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            char * data;\n            char * * pointer = (char * *)ALLOCA(sizeof(char *));\n            data = \"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char * data = *pointer;\n                printLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_pointer_alloca_use_18_good()\n{\n    good1();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__double_pointer_malloc_use_02_good()\n{\n    good1();\n    good2();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_alloca_use_05_bad()\n{\n    if(staticTrue)\n    {\n        {\n            wchar_t * * pointer = (wchar_t * *)ALLOCA(sizeof(wchar_t *));\n            wchar_t * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printWLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    int k;\n    for(k = 0; k < 1; k++)\n    {\n        {\n            twoIntsStruct data;\n            twoIntsStruct * pointer = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (pointer == NULL) {exit(-1);}\n            data.intOne = 1;\n            data.intTwo = 2;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct data = *pointer;\n                printIntLine(data.intOne);\n                printIntLine(data.intTwo);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(staticTrue)\n    {\n        {\n            twoIntsStruct * data;\n            twoIntsStruct * * pointer = (twoIntsStruct * *)malloc(sizeof(twoIntsStruct *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (data == NULL) {exit(-1);}\n            data->intOne = 5;\n            data->intTwo = 6;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct * data = *pointer;\n                printIntLine(data->intOne);\n                printIntLine(data->intTwo);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__double_pointer_malloc_use_15_bad()\n{\n    switch(6)\n    {\n    case 6:\n    {\n        double * * pointer = (double * *)malloc(sizeof(double *));\n        if (pointer == NULL) {exit(-1);}\n        double * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n        free(pointer);\n        printDoubleLine(*data);\n    }\n    break;\n    default:\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_alloca_use_14_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(STATIC_CONST_FALSE)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            twoIntsStruct data;\n            twoIntsStruct * pointer = (twoIntsStruct *)ALLOCA(sizeof(twoIntsStruct));\n            data.intOne = 1;\n            data.intTwo = 2;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct data = *pointer;\n                printIntLine(data.intOne);\n                printIntLine(data.intTwo);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    while(1)\n    {\n        {\n            wchar_t * data;\n            wchar_t * * pointer = (wchar_t * *)malloc(sizeof(wchar_t *));\n            if (pointer == NULL) {exit(-1);}\n            data = L\"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                wchar_t * data = *pointer;\n                printWLine(data);\n            }\n            free(pointer);\n        }\n        break;\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_alloca_use_05_good()\n{\n    good1();\n    good2();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_pointer_malloc_use_14_bad()\n{\n    if(globalFive==5)\n    {\n        {\n            twoIntsStruct * * pointer = (twoIntsStruct * *)malloc(sizeof(twoIntsStruct *));\n            if (pointer == NULL) {exit(-1);}\n            twoIntsStruct * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printIntLine(data->intOne);\n            printIntLine(data->intTwo);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(globalReturnsTrue())\n    {\n        {\n            twoIntsStruct data;\n            twoIntsStruct * pointer = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (pointer == NULL) {exit(-1);}\n            data.intOne = 1;\n            data.intTwo = 2;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct data = *pointer;\n                printIntLine(data.intOne);\n                printIntLine(data.intTwo);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(0)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            wchar_t * data;\n            wchar_t * * pointer = (wchar_t * *)ALLOCA(sizeof(wchar_t *));\n            data = L\"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                wchar_t * data = *pointer;\n                printWLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_malloc_use_13_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalFive!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            char data;\n            char * pointer = (char *)ALLOCA(sizeof(char));\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char data = *pointer;\n                printHexCharLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(globalFive==5)\n    {\n        {\n            char * data;\n            char * * pointer = (char * *)malloc(sizeof(char *));\n            if (pointer == NULL) {exit(-1);}\n            data = \"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char * data = *pointer;\n                printLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_malloc_use_06_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalFive!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            wchar_t * data;\n            wchar_t * * pointer = (wchar_t * *)ALLOCA(sizeof(wchar_t *));\n            data = L\"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                wchar_t * data = *pointer;\n                printWLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    switch(6)\n    {\n    case 6:\n    {\n        double * data;\n        double * * pointer = (double * *)ALLOCA(sizeof(double *));\n        /* initialize both the pointer and the data pointed to */\n        data = (double *)malloc(sizeof(double));\n        if (data == NULL) {exit(-1);}\n        *data = 5.0;\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            double * data = *pointer;\n            printDoubleLine(*data);\n        }\n    }\n    break;\n    default:\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(staticFalse)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            twoIntsStruct * data;\n            twoIntsStruct * * pointer = (twoIntsStruct * *)malloc(sizeof(twoIntsStruct *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (data == NULL) {exit(-1);}\n            data->intOne = 5;\n            data->intTwo = 6;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct * data = *pointer;\n                printIntLine(data->intOne);\n                printIntLine(data->intTwo);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int64_t_malloc_use_03_bad()\n{\n    if(5==5)\n    {\n        {\n            int64_t * pointer = (int64_t *)malloc(sizeof(int64_t));\n            if (pointer == NULL) {exit(-1);}\n            int64_t data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printLongLongLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_alloca_use_04_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__long_malloc_use_13_good()\n{\n    good1();\n    good2();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_pointer_alloca_use_12_bad()\n{\n    if(globalReturnsTrueOrFalse())\n    {\n        {\n            char * * pointer = (char * *)ALLOCA(sizeof(char *));\n            char * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printLine(data);\n        }\n    }\n    else\n    {\n        {\n            char * data;\n            char * * pointer = (char * *)ALLOCA(sizeof(char *));\n            data = \"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char * data = *pointer;\n                printLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    while(1)\n    {\n        {\n            twoIntsStruct * data;\n            twoIntsStruct * * pointer = (twoIntsStruct * *)malloc(sizeof(twoIntsStruct *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (data == NULL) {exit(-1);}\n            data->intOne = 5;\n            data->intTwo = 6;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct * data = *pointer;\n                printIntLine(data->intOne);\n                printIntLine(data->intTwo);\n            }\n            free(pointer);\n        }\n        break;\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalReturnsTrueOrFalse())\n    {\n        {\n            char data;\n            char * pointer = (char *)ALLOCA(sizeof(char));\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char data = *pointer;\n                printHexCharLine(data);\n            }\n        }\n    }\n    else\n    {\n        {\n            char data;\n            char * pointer = (char *)ALLOCA(sizeof(char));\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char data = *pointer;\n                printHexCharLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_pointer_alloca_use_03_good()\n{\n    good1();\n    good2();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__long_malloc_use_14_bad()\n{\n    if(globalFive==5)\n    {\n        {\n            long * pointer = (long *)malloc(sizeof(long));\n            if (pointer == NULL) {exit(-1);}\n            long data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printLongLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(STATIC_CONST_TRUE)\n    {\n        {\n            int64_t data;\n            int64_t * pointer = (int64_t *)ALLOCA(sizeof(int64_t));\n            data = 5LL;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int64_t data = *pointer;\n                printLongLongLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        {\n            int64_t data;\n            int64_t * pointer = (int64_t *)malloc(sizeof(int64_t));\n            if (pointer == NULL) {exit(-1);}\n            data = 5LL;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int64_t data = *pointer;\n                printLongLongLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalFive!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            char * data;\n            char * * pointer = (char * *)ALLOCA(sizeof(char *));\n            data = \"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char * data = *pointer;\n                printLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_pointer_malloc_use_02_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_pointer_malloc_use_05_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(GLOBAL_CONST_FALSE)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            wchar_t * data;\n            wchar_t * * pointer = (wchar_t * *)ALLOCA(sizeof(wchar_t *));\n            data = L\"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                wchar_t * data = *pointer;\n                printWLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_alloca_use_02_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    {\n        int data;\n        int * pointer = (int *)malloc(sizeof(int));\n        if (pointer == NULL) {exit(-1);}\n        data = 5;\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            int data = *pointer;\n            printIntLine(data);\n        }\n        free(pointer);\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_malloc_use_05_bad()\n{\n    if(staticTrue)\n    {\n        {\n            int * pointer = (int *)malloc(sizeof(int));\n            if (pointer == NULL) {exit(-1);}\n            int data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printIntLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalFalse)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int data;\n            int * pointer = (int *)ALLOCA(sizeof(int));\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int data = *pointer;\n                printIntLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    while(1)\n    {\n        {\n            twoIntsStruct * data;\n            twoIntsStruct * * pointer = (twoIntsStruct * *)ALLOCA(sizeof(twoIntsStruct *));\n            /* initialize both the pointer and the data pointed to */\n            data = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (data == NULL) {exit(-1);}\n            data->intOne = 5;\n            data->intTwo = 6;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct * data = *pointer;\n                printIntLine(data->intOne);\n                printIntLine(data->intTwo);\n            }\n        }\n        break;\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_alloca_use_04_bad()\n{\n    if(STATIC_CONST_TRUE)\n    {\n        {\n            int * pointer = (int *)ALLOCA(sizeof(int));\n            int data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printIntLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(STATIC_CONST_FALSE)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            twoIntsStruct data;\n            twoIntsStruct * pointer = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (pointer == NULL) {exit(-1);}\n            data.intOne = 1;\n            data.intTwo = 2;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct data = *pointer;\n                printIntLine(data.intOne);\n                printIntLine(data.intTwo);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_alloca_use_17_good()\n{\n    good1();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__double_pointer_malloc_use_09_bad()\n{\n    if(GLOBAL_CONST_TRUE)\n    {\n        {\n            double * * pointer = (double * *)malloc(sizeof(double *));\n            if (pointer == NULL) {exit(-1);}\n            double * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printDoubleLine(*data);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_malloc_use_05_bad()\n{\n    if(staticTrue)\n    {\n        {\n            twoIntsStruct * pointer = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (pointer == NULL) {exit(-1);}\n            twoIntsStruct data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printIntLine(data.intOne);\n            printIntLine(data.intTwo);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_alloca_use_01_good()\n{\n    good1();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_alloca_use_05_bad()\n{\n    if(staticTrue)\n    {\n        {\n            twoIntsStruct * pointer = (twoIntsStruct *)ALLOCA(sizeof(twoIntsStruct));\n            twoIntsStruct data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printIntLine(data.intOne);\n            printIntLine(data.intTwo);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(5!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            char data;\n            char * pointer = (char *)malloc(sizeof(char));\n            if (pointer == NULL) {exit(-1);}\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char data = *pointer;\n                printHexCharLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(0)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            twoIntsStruct * data;\n            twoIntsStruct * * pointer = (twoIntsStruct * *)malloc(sizeof(twoIntsStruct *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (data == NULL) {exit(-1);}\n            data->intOne = 5;\n            data->intTwo = 6;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct * data = *pointer;\n                printIntLine(data->intOne);\n                printIntLine(data->intTwo);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(5==5)\n    {\n        {\n            char data;\n            char * pointer = (char *)ALLOCA(sizeof(char));\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char data = *pointer;\n                printHexCharLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(globalTrue)\n    {\n        {\n            char data;\n            char * pointer = (char *)ALLOCA(sizeof(char));\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char data = *pointer;\n                printHexCharLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(staticReturnsFalse())\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            twoIntsStruct data;\n            twoIntsStruct * pointer = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (pointer == NULL) {exit(-1);}\n            data.intOne = 1;\n            data.intTwo = 2;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct data = *pointer;\n                printIntLine(data.intOne);\n                printIntLine(data.intTwo);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__long_alloca_use_17_good()\n{\n    good1();\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(staticReturnsTrue())\n    {\n        {\n            char data;\n            char * pointer = (char *)ALLOCA(sizeof(char));\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char data = *pointer;\n                printHexCharLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(GLOBAL_CONST_TRUE)\n    {\n        {\n            double * data;\n            double * * pointer = (double * *)ALLOCA(sizeof(double *));\n            /* initialize both the pointer and the data pointed to */\n            data = (double *)malloc(sizeof(double));\n            if (data == NULL) {exit(-1);}\n            *data = 5.0;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                double * data = *pointer;\n                printDoubleLine(*data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_alloca_use_08_good()\n{\n    good1();\n    good2();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_pointer_alloca_use_07_bad()\n{\n    if(staticFive==5)\n    {\n        {\n            char * * pointer = (char * *)ALLOCA(sizeof(char *));\n            char * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(5!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int64_t data;\n            int64_t * pointer = (int64_t *)ALLOCA(sizeof(int64_t));\n            data = 5LL;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int64_t data = *pointer;\n                printLongLongLine(data);\n            }\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_alloca_use_15_bad()\n{\n    switch(6)\n    {\n    case 6:\n    {\n        char * pointer = (char *)ALLOCA(sizeof(char));\n        char data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n        printHexCharLine(data);\n    }\n    break;\n    default:\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        {\n            double * data;\n            double * * pointer = (double * *)malloc(sizeof(double *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (double *)malloc(sizeof(double));\n            if (data == NULL) {exit(-1);}\n            *data = 5.0;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                double * data = *pointer;\n                printDoubleLine(*data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_pointer_alloca_use_12_bad()\n{\n    if(globalReturnsTrueOrFalse())\n    {\n        {\n            twoIntsStruct * * pointer = (twoIntsStruct * *)ALLOCA(sizeof(twoIntsStruct *));\n            twoIntsStruct * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printIntLine(data->intOne);\n            printIntLine(data->intTwo);\n        }\n    }\n    else\n    {\n        {\n            twoIntsStruct * data;\n            twoIntsStruct * * pointer = (twoIntsStruct * *)ALLOCA(sizeof(twoIntsStruct *));\n            /* initialize both the pointer and the data pointed to */\n            data = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (data == NULL) {exit(-1);}\n            data->intOne = 5;\n            data->intTwo = 6;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct * data = *pointer;\n                printIntLine(data->intOne);\n                printIntLine(data->intTwo);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(globalFive==5)\n    {\n        {\n            int data;\n            int * pointer = (int *)malloc(sizeof(int));\n            if (pointer == NULL) {exit(-1);}\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int data = *pointer;\n                printIntLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int64_t_malloc_use_09_bad()\n{\n    if(GLOBAL_CONST_TRUE)\n    {\n        {\n            int64_t * pointer = (int64_t *)malloc(sizeof(int64_t));\n            if (pointer == NULL) {exit(-1);}\n            int64_t data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printLongLongLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        {\n            twoIntsStruct * data;\n            twoIntsStruct * * pointer = (twoIntsStruct * *)ALLOCA(sizeof(twoIntsStruct *));\n            /* initialize both the pointer and the data pointed to */\n            data = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (data == NULL) {exit(-1);}\n            data->intOne = 5;\n            data->intTwo = 6;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct * data = *pointer;\n                printIntLine(data->intOne);\n                printIntLine(data->intTwo);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(GLOBAL_CONST_FALSE)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int data;\n            int * pointer = (int *)malloc(sizeof(int));\n            if (pointer == NULL) {exit(-1);}\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int data = *pointer;\n                printIntLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_pointer_malloc_use_01_good()\n{\n    good1();\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(staticFive==5)\n    {\n        {\n            char * data;\n            char * * pointer = (char * *)ALLOCA(sizeof(char *));\n            data = \"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char * data = *pointer;\n                printLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__double_pointer_alloca_use_09_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(staticTrue)\n    {\n        {\n            char data;\n            char * pointer = (char *)ALLOCA(sizeof(char));\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char data = *pointer;\n                printHexCharLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalFalse)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            twoIntsStruct * data;\n            twoIntsStruct * * pointer = (twoIntsStruct * *)ALLOCA(sizeof(twoIntsStruct *));\n            /* initialize both the pointer and the data pointed to */\n            data = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (data == NULL) {exit(-1);}\n            data->intOne = 5;\n            data->intTwo = 6;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct * data = *pointer;\n                printIntLine(data->intOne);\n                printIntLine(data->intTwo);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_malloc_use_11_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_alloca_use_08_good()\n{\n    good1();\n    good2();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__long_malloc_use_09_bad()\n{\n    if(GLOBAL_CONST_TRUE)\n    {\n        {\n            long * pointer = (long *)malloc(sizeof(long));\n            if (pointer == NULL) {exit(-1);}\n            long data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printLongLine(data);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_malloc_use_07_bad()\n{\n    if(staticFive==5)\n    {\n        {\n            int * pointer = (int *)malloc(sizeof(int));\n            if (pointer == NULL) {exit(-1);}\n            int data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printIntLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(staticFive!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            wchar_t * data;\n            wchar_t * * pointer = (wchar_t * *)ALLOCA(sizeof(wchar_t *));\n            data = L\"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                wchar_t * data = *pointer;\n                printWLine(data);\n            }\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__double_pointer_alloca_use_15_bad()\n{\n    switch(6)\n    {\n    case 6:\n    {\n        double * * pointer = (double * *)ALLOCA(sizeof(double *));\n        double * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n        printDoubleLine(*data);\n    }\n    break;\n    default:\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_alloca_use_14_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_alloca_use_12_good()\n{\n    good1();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_alloca_use_18_bad()\n{\n    goto sink;\nsink:\n    {\n        twoIntsStruct * pointer = (twoIntsStruct *)ALLOCA(sizeof(twoIntsStruct));\n        twoIntsStruct data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n        printIntLine(data.intOne);\n        printIntLine(data.intTwo);\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_malloc_use_12_good()\n{\n    good1();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalReturnsFalse())\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int64_t data;\n            int64_t * pointer = (int64_t *)malloc(sizeof(int64_t));\n            if (pointer == NULL) {exit(-1);}\n            data = 5LL;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int64_t data = *pointer;\n                printLongLongLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__no_return_01_good() \n{\n    good1();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_pointer_malloc_use_01_bad()\n{\n    {\n        char * * pointer = (char * *)malloc(sizeof(char *));\n        if (pointer == NULL) {exit(-1);}\n        char * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n        free(pointer);\n        printLine(data);\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_pointer_alloca_use_13_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_pointer_alloca_use_01_good()\n{\n    good1();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(5!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int * data;\n            int * * pointer = (int * *)malloc(sizeof(int *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (int *)malloc(sizeof(int));\n            if (data == NULL) {exit(-1);}\n            *data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int * data = *pointer;\n                printIntLine(*data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__long_malloc_use_01_bad()\n{\n    {\n        long * pointer = (long *)malloc(sizeof(long));\n        if (pointer == NULL) {exit(-1);}\n        long data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n        free(pointer);\n        printLongLine(data);\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int64_t_alloca_use_12_good()\n{\n    good1();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int64_t_alloca_use_13_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(STATIC_CONST_TRUE)\n    {\n        {\n            long data;\n            long * pointer = (long *)ALLOCA(sizeof(long));\n            data = 5L;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                long data = *pointer;\n                printLongLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(globalFive==5)\n    {\n        {\n            twoIntsStruct data;\n            twoIntsStruct * pointer = (twoIntsStruct *)ALLOCA(sizeof(twoIntsStruct));\n            data.intOne = 1;\n            data.intTwo = 2;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct data = *pointer;\n                printIntLine(data.intOne);\n                printIntLine(data.intTwo);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(1)\n    {\n        {\n            double * data;\n            double * * pointer = (double * *)ALLOCA(sizeof(double *));\n            /* initialize both the pointer and the data pointed to */\n            data = (double *)malloc(sizeof(double));\n            if (data == NULL) {exit(-1);}\n            *data = 5.0;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                double * data = *pointer;\n                printDoubleLine(*data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(staticFalse)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int * data;\n            int * * pointer = (int * *)malloc(sizeof(int *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (int *)malloc(sizeof(int));\n            if (data == NULL) {exit(-1);}\n            *data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int * data = *pointer;\n                printIntLine(*data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_malloc_use_14_bad()\n{\n    if(globalFive==5)\n    {\n        {\n            twoIntsStruct * pointer = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (pointer == NULL) {exit(-1);}\n            twoIntsStruct data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printIntLine(data.intOne);\n            printIntLine(data.intTwo);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_malloc_use_12_good()\n{\n    good1();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int64_t_malloc_use_08_bad()\n{\n    if(staticReturnsTrue())\n    {\n        {\n            int64_t * pointer = (int64_t *)malloc(sizeof(int64_t));\n            if (pointer == NULL) {exit(-1);}\n            int64_t data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printLongLongLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_alloca_use_02_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_pointer_malloc_use_16_good()\n{\n    good1();\n}"}
{"target": 0, "func": "static void good1()\n{\n    {\n        long data;\n        long * pointer = (long *)malloc(sizeof(long));\n        if (pointer == NULL) {exit(-1);}\n        data = 5L;\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            long data = *pointer;\n            printLongLine(data);\n        }\n        free(pointer);\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    while(1)\n    {\n        {\n            int64_t data;\n            int64_t * pointer = (int64_t *)ALLOCA(sizeof(int64_t));\n            data = 5LL;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int64_t data = *pointer;\n                printLongLongLine(data);\n            }\n        }\n        break;\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(0)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            char data;\n            char * pointer = (char *)ALLOCA(sizeof(char));\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char data = *pointer;\n                printHexCharLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(GLOBAL_CONST_FALSE)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            twoIntsStruct * data;\n            twoIntsStruct * * pointer = (twoIntsStruct * *)ALLOCA(sizeof(twoIntsStruct *));\n            /* initialize both the pointer and the data pointed to */\n            data = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (data == NULL) {exit(-1);}\n            data->intOne = 5;\n            data->intTwo = 6;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct * data = *pointer;\n                printIntLine(data->intOne);\n                printIntLine(data->intTwo);\n            }\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_pointer_alloca_use_09_bad()\n{\n    if(GLOBAL_CONST_TRUE)\n    {\n        {\n            char * * pointer = (char * *)ALLOCA(sizeof(char *));\n            char * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(STATIC_CONST_FIVE!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            twoIntsStruct data;\n            twoIntsStruct * pointer = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (pointer == NULL) {exit(-1);}\n            data.intOne = 1;\n            data.intTwo = 2;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct data = *pointer;\n                printIntLine(data.intOne);\n                printIntLine(data.intTwo);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    goto sink;\nsink:\n    {\n        wchar_t * data;\n        wchar_t * * pointer = (wchar_t * *)malloc(sizeof(wchar_t *));\n        if (pointer == NULL) {exit(-1);}\n        data = L\"string\";\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            wchar_t * data = *pointer;\n            printWLine(data);\n        }\n        free(pointer);\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(staticFive==5)\n    {\n        {\n            int64_t data;\n            int64_t * pointer = (int64_t *)ALLOCA(sizeof(int64_t));\n            data = 5LL;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int64_t data = *pointer;\n                printLongLongLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_malloc_use_17_good()\n{\n    good1();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_alloca_use_06_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalReturnsTrueOrFalse())\n    {\n        {\n            twoIntsStruct data;\n            twoIntsStruct * pointer = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (pointer == NULL) {exit(-1);}\n            data.intOne = 1;\n            data.intTwo = 2;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct data = *pointer;\n                printIntLine(data.intOne);\n                printIntLine(data.intTwo);\n            }\n            free(pointer);\n        }\n    }\n    else\n    {\n        {\n            twoIntsStruct data;\n            twoIntsStruct * pointer = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (pointer == NULL) {exit(-1);}\n            data.intOne = 1;\n            data.intTwo = 2;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct data = *pointer;\n                printIntLine(data.intOne);\n                printIntLine(data.intTwo);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_pointer_alloca_use_05_bad()\n{\n    if(staticTrue)\n    {\n        {\n            char * * pointer = (char * *)ALLOCA(sizeof(char *));\n            char * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(5==5)\n    {\n        {\n            char data;\n            char * pointer = (char *)malloc(sizeof(char));\n            if (pointer == NULL) {exit(-1);}\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char data = *pointer;\n                printHexCharLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(globalFive==5)\n    {\n        {\n            twoIntsStruct data;\n            twoIntsStruct * pointer = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (pointer == NULL) {exit(-1);}\n            data.intOne = 1;\n            data.intTwo = 2;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct data = *pointer;\n                printIntLine(data.intOne);\n                printIntLine(data.intTwo);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_alloca_use_06_bad()\n{\n    if(STATIC_CONST_FIVE==5)\n    {\n        {\n            char * pointer = (char *)ALLOCA(sizeof(char));\n            char data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printHexCharLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_pointer_malloc_use_15_good()\n{\n    good1();\n    good2();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_malloc_use_13_bad()\n{\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        {\n            twoIntsStruct * pointer = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (pointer == NULL) {exit(-1);}\n            twoIntsStruct data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printIntLine(data.intOne);\n            printIntLine(data.intTwo);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__double_pointer_malloc_use_07_bad()\n{\n    if(staticFive==5)\n    {\n        {\n            double * * pointer = (double * *)malloc(sizeof(double *));\n            if (pointer == NULL) {exit(-1);}\n            double * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printDoubleLine(*data);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_alloca_use_17_good()\n{\n    good1();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_pointer_malloc_use_15_bad()\n{\n    switch(6)\n    {\n    case 6:\n    {\n        int * * pointer = (int * *)malloc(sizeof(int *));\n        if (pointer == NULL) {exit(-1);}\n        int * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n        free(pointer);\n        printIntLine(*data);\n    }\n    break;\n    default:\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_pointer_alloca_use_14_bad()\n{\n    if(globalFive==5)\n    {\n        {\n            char * * pointer = (char * *)ALLOCA(sizeof(char *));\n            char * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printLine(data);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_malloc_use_04_bad()\n{\n    if(STATIC_CONST_TRUE)\n    {\n        {\n            twoIntsStruct * pointer = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (pointer == NULL) {exit(-1);}\n            twoIntsStruct data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printIntLine(data.intOne);\n            printIntLine(data.intTwo);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(GLOBAL_CONST_TRUE)\n    {\n        {\n            int64_t data;\n            int64_t * pointer = (int64_t *)ALLOCA(sizeof(int64_t));\n            data = 5LL;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int64_t data = *pointer;\n                printLongLongLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    switch(5)\n    {\n    case 6:\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n    {\n        wchar_t * data;\n        wchar_t * * pointer = (wchar_t * *)malloc(sizeof(wchar_t *));\n        if (pointer == NULL) {exit(-1);}\n        data = L\"string\";\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            wchar_t * data = *pointer;\n            printWLine(data);\n        }\n        free(pointer);\n    }\n    break;\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(staticTrue)\n    {\n        {\n            int data;\n            int * pointer = (int *)ALLOCA(sizeof(int));\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int data = *pointer;\n                printIntLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(staticTrue)\n    {\n        {\n            char * data;\n            char * * pointer = (char * *)malloc(sizeof(char *));\n            if (pointer == NULL) {exit(-1);}\n            data = \"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char * data = *pointer;\n                printLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_malloc_use_11_bad()\n{\n    if(globalReturnsTrue())\n    {\n        {\n            int * pointer = (int *)malloc(sizeof(int));\n            if (pointer == NULL) {exit(-1);}\n            int data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printIntLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__double_pointer_malloc_use_01_good()\n{\n    good1();\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(STATIC_CONST_TRUE)\n    {\n        {\n            twoIntsStruct data;\n            twoIntsStruct * pointer = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (pointer == NULL) {exit(-1);}\n            data.intOne = 1;\n            data.intTwo = 2;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct data = *pointer;\n                printIntLine(data.intOne);\n                printIntLine(data.intTwo);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_malloc_use_17_bad()\n{\n    int j;\n    for(j = 0; j < 1; j++)\n    {\n        {\n            wchar_t * * pointer = (wchar_t * *)malloc(sizeof(wchar_t *));\n            if (pointer == NULL) {exit(-1);}\n            wchar_t * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printWLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int64_t_alloca_use_18_good()\n{\n    good1();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_pointer_malloc_use_09_bad()\n{\n    if(GLOBAL_CONST_TRUE)\n    {\n        {\n            int * * pointer = (int * *)malloc(sizeof(int *));\n            if (pointer == NULL) {exit(-1);}\n            int * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printIntLine(*data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(staticFive!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int data;\n            int * pointer = (int *)ALLOCA(sizeof(int));\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int data = *pointer;\n                printIntLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_pointer_alloca_use_01_good()\n{\n    good1();\n}"}
{"target": 0, "func": "static void good1()\n{\n    int k;\n    for(k = 0; k < 1; k++)\n    {\n        {\n            int data;\n            int * pointer = (int *)ALLOCA(sizeof(int));\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int data = *pointer;\n                printIntLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_pointer_alloca_use_07_good()\n{\n    good1();\n    good2();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_pointer_malloc_use_17_bad()\n{\n    int j;\n    for(j = 0; j < 1; j++)\n    {\n        {\n            twoIntsStruct * * pointer = (twoIntsStruct * *)malloc(sizeof(twoIntsStruct *));\n            if (pointer == NULL) {exit(-1);}\n            twoIntsStruct * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printIntLine(data->intOne);\n            printIntLine(data->intTwo);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_pointer_malloc_use_11_bad()\n{\n    if(globalReturnsTrue())\n    {\n        {\n            char * * pointer = (char * *)malloc(sizeof(char *));\n            if (pointer == NULL) {exit(-1);}\n            char * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_malloc_use_18_good()\n{\n    good1();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_malloc_use_16_good()\n{\n    good1();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(STATIC_CONST_FIVE!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            double * data;\n            double * * pointer = (double * *)ALLOCA(sizeof(double *));\n            /* initialize both the pointer and the data pointed to */\n            data = (double *)malloc(sizeof(double));\n            if (data == NULL) {exit(-1);}\n            *data = 5.0;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                double * data = *pointer;\n                printDoubleLine(*data);\n            }\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_pointer_alloca_use_11_bad()\n{\n    if(globalReturnsTrue())\n    {\n        {\n            char * * pointer = (char * *)ALLOCA(sizeof(char *));\n            char * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_pointer_alloca_use_11_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(globalReturnsTrue())\n    {\n        {\n            long data;\n            long * pointer = (long *)ALLOCA(sizeof(long));\n            data = 5L;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                long data = *pointer;\n                printLongLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(STATIC_CONST_FALSE)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            char data;\n            char * pointer = (char *)ALLOCA(sizeof(char));\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char data = *pointer;\n                printHexCharLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(staticReturnsFalse())\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int data;\n            int * pointer = (int *)ALLOCA(sizeof(int));\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int data = *pointer;\n                printIntLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    switch(5)\n    {\n    case 6:\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n    {\n        twoIntsStruct * data;\n        twoIntsStruct * * pointer = (twoIntsStruct * *)ALLOCA(sizeof(twoIntsStruct *));\n        /* initialize both the pointer and the data pointed to */\n        data = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n        if (data == NULL) {exit(-1);}\n        data->intOne = 5;\n        data->intTwo = 6;\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            twoIntsStruct * data = *pointer;\n            printIntLine(data->intOne);\n            printIntLine(data->intTwo);\n        }\n    }\n    break;\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    while(1)\n    {\n        {\n            twoIntsStruct data;\n            twoIntsStruct * pointer = (twoIntsStruct *)ALLOCA(sizeof(twoIntsStruct));\n            data.intOne = 1;\n            data.intTwo = 2;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct data = *pointer;\n                printIntLine(data.intOne);\n                printIntLine(data.intTwo);\n            }\n        }\n        break;\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__long_malloc_use_07_bad()\n{\n    if(staticFive==5)\n    {\n        {\n            long * pointer = (long *)malloc(sizeof(long));\n            if (pointer == NULL) {exit(-1);}\n            long data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printLongLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_pointer_alloca_use_09_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int64_t_alloca_use_15_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int64_t_alloca_use_11_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(STATIC_CONST_FIVE!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            wchar_t * data;\n            wchar_t * * pointer = (wchar_t * *)malloc(sizeof(wchar_t *));\n            if (pointer == NULL) {exit(-1);}\n            data = L\"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                wchar_t * data = *pointer;\n                printWLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalReturnsTrueOrFalse())\n    {\n        {\n            long data;\n            long * pointer = (long *)malloc(sizeof(long));\n            if (pointer == NULL) {exit(-1);}\n            data = 5L;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                long data = *pointer;\n                printLongLine(data);\n            }\n            free(pointer);\n        }\n    }\n    else\n    {\n        {\n            long data;\n            long * pointer = (long *)malloc(sizeof(long));\n            if (pointer == NULL) {exit(-1);}\n            data = 5L;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                long data = *pointer;\n                printLongLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(STATIC_CONST_FALSE)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int64_t data;\n            int64_t * pointer = (int64_t *)malloc(sizeof(int64_t));\n            if (pointer == NULL) {exit(-1);}\n            data = 5LL;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int64_t data = *pointer;\n                printLongLongLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(globalFive==5)\n    {\n        {\n            twoIntsStruct * data;\n            twoIntsStruct * * pointer = (twoIntsStruct * *)ALLOCA(sizeof(twoIntsStruct *));\n            /* initialize both the pointer and the data pointed to */\n            data = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (data == NULL) {exit(-1);}\n            data->intOne = 5;\n            data->intTwo = 6;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct * data = *pointer;\n                printIntLine(data->intOne);\n                printIntLine(data->intTwo);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int64_t_alloca_use_03_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_pointer_alloca_use_10_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(staticTrue)\n    {\n        {\n            double * data;\n            double * * pointer = (double * *)ALLOCA(sizeof(double *));\n            /* initialize both the pointer and the data pointed to */\n            data = (double *)malloc(sizeof(double));\n            if (data == NULL) {exit(-1);}\n            *data = 5.0;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                double * data = *pointer;\n                printDoubleLine(*data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_alloca_use_05_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(staticReturnsFalse())\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            char data;\n            char * pointer = (char *)ALLOCA(sizeof(char));\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char data = *pointer;\n                printHexCharLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__long_malloc_use_15_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    int intGood1 = helperGood1();\n    printIntLine(intGood1);\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(STATIC_CONST_FALSE)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int * data;\n            int * * pointer = (int * *)ALLOCA(sizeof(int *));\n            /* initialize both the pointer and the data pointed to */\n            data = (int *)malloc(sizeof(int));\n            if (data == NULL) {exit(-1);}\n            *data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int * data = *pointer;\n                printIntLine(*data);\n            }\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_malloc_use_16_bad()\n{\n    while(1)\n    {\n        {\n            twoIntsStruct * pointer = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (pointer == NULL) {exit(-1);}\n            twoIntsStruct data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printIntLine(data.intOne);\n            printIntLine(data.intTwo);\n        }\n        break;\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_malloc_use_11_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(staticFive==5)\n    {\n        {\n            int64_t data;\n            int64_t * pointer = (int64_t *)malloc(sizeof(int64_t));\n            if (pointer == NULL) {exit(-1);}\n            data = 5LL;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int64_t data = *pointer;\n                printLongLongLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_pointer_malloc_use_07_bad()\n{\n    if(staticFive==5)\n    {\n        {\n            int * * pointer = (int * *)malloc(sizeof(int *));\n            if (pointer == NULL) {exit(-1);}\n            int * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printIntLine(*data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(staticFive==5)\n    {\n        {\n            long data;\n            long * pointer = (long *)malloc(sizeof(long));\n            if (pointer == NULL) {exit(-1);}\n            data = 5L;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                long data = *pointer;\n                printLongLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_pointer_malloc_use_09_bad()\n{\n    if(GLOBAL_CONST_TRUE)\n    {\n        {\n            char * * pointer = (char * *)malloc(sizeof(char *));\n            if (pointer == NULL) {exit(-1);}\n            char * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(staticFive!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int64_t data;\n            int64_t * pointer = (int64_t *)malloc(sizeof(int64_t));\n            if (pointer == NULL) {exit(-1);}\n            data = 5LL;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int64_t data = *pointer;\n                printLongLongLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        {\n            wchar_t * data;\n            wchar_t * * pointer = (wchar_t * *)ALLOCA(sizeof(wchar_t *));\n            data = L\"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                wchar_t * data = *pointer;\n                printWLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    switch(6)\n    {\n    case 6:\n    {\n        long data;\n        long * pointer = (long *)ALLOCA(sizeof(long));\n        data = 5L;\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            long data = *pointer;\n            printLongLine(data);\n        }\n    }\n    break;\n    default:\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__long_alloca_use_15_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(STATIC_CONST_FALSE)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            twoIntsStruct * data;\n            twoIntsStruct * * pointer = (twoIntsStruct * *)ALLOCA(sizeof(twoIntsStruct *));\n            /* initialize both the pointer and the data pointed to */\n            data = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (data == NULL) {exit(-1);}\n            data->intOne = 5;\n            data->intTwo = 6;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct * data = *pointer;\n                printIntLine(data->intOne);\n                printIntLine(data->intTwo);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__double_pointer_malloc_use_03_good()\n{\n    good1();\n    good2();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_alloca_use_08_bad()\n{\n    if(staticReturnsTrue())\n    {\n        {\n            wchar_t * * pointer = (wchar_t * *)ALLOCA(sizeof(wchar_t *));\n            wchar_t * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printWLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(globalFive==5)\n    {\n        {\n            char data;\n            char * pointer = (char *)malloc(sizeof(char));\n            if (pointer == NULL) {exit(-1);}\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char data = *pointer;\n                printHexCharLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_alloca_use_09_good()\n{\n    good1();\n    good2();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__double_pointer_malloc_use_14_bad()\n{\n    if(globalFive==5)\n    {\n        {\n            double * * pointer = (double * *)malloc(sizeof(double *));\n            if (pointer == NULL) {exit(-1);}\n            double * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printDoubleLine(*data);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int64_t_alloca_use_07_bad()\n{\n    if(staticFive==5)\n    {\n        {\n            int64_t * pointer = (int64_t *)ALLOCA(sizeof(int64_t));\n            int64_t data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printLongLongLine(data);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_pointer_malloc_use_17_bad()\n{\n    int j;\n    for(j = 0; j < 1; j++)\n    {\n        {\n            char * * pointer = (char * *)malloc(sizeof(char *));\n            if (pointer == NULL) {exit(-1);}\n            char * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(5==5)\n    {\n        {\n            int * data;\n            int * * pointer = (int * *)malloc(sizeof(int *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (int *)malloc(sizeof(int));\n            if (data == NULL) {exit(-1);}\n            *data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int * data = *pointer;\n                printIntLine(*data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(GLOBAL_CONST_FALSE)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            long data;\n            long * pointer = (long *)malloc(sizeof(long));\n            if (pointer == NULL) {exit(-1);}\n            data = 5L;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                long data = *pointer;\n                printLongLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_malloc_use_14_bad()\n{\n    if(globalFive==5)\n    {\n        {\n            wchar_t * * pointer = (wchar_t * *)malloc(sizeof(wchar_t *));\n            if (pointer == NULL) {exit(-1);}\n            wchar_t * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printWLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalReturnsFalse())\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int * data;\n            int * * pointer = (int * *)malloc(sizeof(int *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (int *)malloc(sizeof(int));\n            if (data == NULL) {exit(-1);}\n            *data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int * data = *pointer;\n                printIntLine(*data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalFive!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            long data;\n            long * pointer = (long *)malloc(sizeof(long));\n            if (pointer == NULL) {exit(-1);}\n            data = 5L;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                long data = *pointer;\n                printLongLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    {\n        char data;\n        char * pointer = (char *)ALLOCA(sizeof(char));\n        data = 5;\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            char data = *pointer;\n            printHexCharLine(data);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_malloc_use_05_bad()\n{\n    if(staticTrue)\n    {\n        {\n            char * pointer = (char *)malloc(sizeof(char));\n            if (pointer == NULL) {exit(-1);}\n            char data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printHexCharLine(data);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__long_alloca_use_14_bad()\n{\n    if(globalFive==5)\n    {\n        {\n            long * pointer = (long *)ALLOCA(sizeof(long));\n            long data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printLongLine(data);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_pointer_malloc_use_04_bad()\n{\n    if(STATIC_CONST_TRUE)\n    {\n        {\n            int * * pointer = (int * *)malloc(sizeof(int *));\n            if (pointer == NULL) {exit(-1);}\n            int * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printIntLine(*data);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_malloc_use_05_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_pointer_alloca_use_12_good()\n{\n    good1();\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        {\n            char * data;\n            char * * pointer = (char * *)malloc(sizeof(char *));\n            if (pointer == NULL) {exit(-1);}\n            data = \"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char * data = *pointer;\n                printLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_alloca_use_04_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(STATIC_CONST_FALSE)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            long data;\n            long * pointer = (long *)malloc(sizeof(long));\n            if (pointer == NULL) {exit(-1);}\n            data = 5L;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                long data = *pointer;\n                printLongLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    switch(5)\n    {\n    case 6:\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n    {\n        int * data;\n        int * * pointer = (int * *)ALLOCA(sizeof(int *));\n        /* initialize both the pointer and the data pointed to */\n        data = (int *)malloc(sizeof(int));\n        if (data == NULL) {exit(-1);}\n        *data = 5;\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            int * data = *pointer;\n            printIntLine(*data);\n        }\n    }\n    break;\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        {\n            int data;\n            int * pointer = (int *)ALLOCA(sizeof(int));\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int data = *pointer;\n                printIntLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_alloca_use_13_good()\n{\n    good1();\n    good2();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_pointer_alloca_use_09_bad()\n{\n    if(GLOBAL_CONST_TRUE)\n    {\n        {\n            twoIntsStruct * * pointer = (twoIntsStruct * *)ALLOCA(sizeof(twoIntsStruct *));\n            twoIntsStruct * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printIntLine(data->intOne);\n            printIntLine(data->intTwo);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__long_alloca_use_12_bad()\n{\n    if(globalReturnsTrueOrFalse())\n    {\n        {\n            long * pointer = (long *)ALLOCA(sizeof(long));\n            long data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printLongLine(data);\n        }\n    }\n    else\n    {\n        {\n            long data;\n            long * pointer = (long *)ALLOCA(sizeof(long));\n            data = 5L;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                long data = *pointer;\n                printLongLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int64_t_alloca_use_01_good()\n{\n    good1();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_pointer_malloc_use_09_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    goto sink;\nsink:\n    {\n        int * data;\n        int * * pointer = (int * *)malloc(sizeof(int *));\n        if (pointer == NULL) {exit(-1);}\n        /* initialize both the pointer and the data pointed to */\n        data = (int *)malloc(sizeof(int));\n        if (data == NULL) {exit(-1);}\n        *data = 5;\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            int * data = *pointer;\n            printIntLine(*data);\n        }\n        free(pointer);\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(globalReturnsTrue())\n    {\n        {\n            char * data;\n            char * * pointer = (char * *)ALLOCA(sizeof(char *));\n            data = \"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char * data = *pointer;\n                printLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(1)\n    {\n        {\n            long data;\n            long * pointer = (long *)ALLOCA(sizeof(long));\n            data = 5L;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                long data = *pointer;\n                printLongLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(GLOBAL_CONST_FIVE!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            char * data;\n            char * * pointer = (char * *)ALLOCA(sizeof(char *));\n            data = \"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char * data = *pointer;\n                printLine(data);\n            }\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int64_t_alloca_use_11_bad()\n{\n    if(globalReturnsTrue())\n    {\n        {\n            int64_t * pointer = (int64_t *)ALLOCA(sizeof(int64_t));\n            int64_t data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printLongLongLine(data);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_pointer_malloc_use_15_bad()\n{\n    switch(6)\n    {\n    case 6:\n    {\n        char * * pointer = (char * *)malloc(sizeof(char *));\n        if (pointer == NULL) {exit(-1);}\n        char * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n        free(pointer);\n        printLine(data);\n    }\n    break;\n    default:\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_malloc_use_04_bad()\n{\n    if(STATIC_CONST_TRUE)\n    {\n        {\n            char * pointer = (char *)malloc(sizeof(char));\n            if (pointer == NULL) {exit(-1);}\n            char data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printHexCharLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(STATIC_CONST_FIVE==5)\n    {\n        {\n            int64_t data;\n            int64_t * pointer = (int64_t *)ALLOCA(sizeof(int64_t));\n            data = 5LL;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int64_t data = *pointer;\n                printLongLongLine(data);\n            }\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_pointer_alloca_use_07_bad()\n{\n    if(staticFive==5)\n    {\n        {\n            int * * pointer = (int * *)ALLOCA(sizeof(int *));\n            int * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printIntLine(*data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    switch(5)\n    {\n    case 6:\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n    {\n        twoIntsStruct * data;\n        twoIntsStruct * * pointer = (twoIntsStruct * *)malloc(sizeof(twoIntsStruct *));\n        if (pointer == NULL) {exit(-1);}\n        /* initialize both the pointer and the data pointed to */\n        data = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n        if (data == NULL) {exit(-1);}\n        data->intOne = 5;\n        data->intTwo = 6;\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            twoIntsStruct * data = *pointer;\n            printIntLine(data->intOne);\n            printIntLine(data->intTwo);\n        }\n        free(pointer);\n    }\n    break;\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_alloca_use_12_bad()\n{\n    if(globalReturnsTrueOrFalse())\n    {\n        {\n            wchar_t * * pointer = (wchar_t * *)ALLOCA(sizeof(wchar_t *));\n            wchar_t * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printWLine(data);\n        }\n    }\n    else\n    {\n        {\n            wchar_t * data;\n            wchar_t * * pointer = (wchar_t * *)ALLOCA(sizeof(wchar_t *));\n            data = L\"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                wchar_t * data = *pointer;\n                printWLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_alloca_use_01_good()\n{\n    good1();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_pointer_malloc_use_06_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_pointer_alloca_use_03_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalReturnsTrueOrFalse())\n    {\n        {\n            int * data;\n            int * * pointer = (int * *)ALLOCA(sizeof(int *));\n            /* initialize both the pointer and the data pointed to */\n            data = (int *)malloc(sizeof(int));\n            if (data == NULL) {exit(-1);}\n            *data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int * data = *pointer;\n                printIntLine(*data);\n            }\n        }\n    }\n    else\n    {\n        {\n            int * data;\n            int * * pointer = (int * *)ALLOCA(sizeof(int *));\n            /* initialize both the pointer and the data pointed to */\n            data = (int *)malloc(sizeof(int));\n            if (data == NULL) {exit(-1);}\n            *data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int * data = *pointer;\n                printIntLine(*data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(5==5)\n    {\n        {\n            double * data;\n            double * * pointer = (double * *)ALLOCA(sizeof(double *));\n            /* initialize both the pointer and the data pointed to */\n            data = (double *)malloc(sizeof(double));\n            if (data == NULL) {exit(-1);}\n            *data = 5.0;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                double * data = *pointer;\n                printDoubleLine(*data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(staticReturnsTrue())\n    {\n        {\n            wchar_t * data;\n            wchar_t * * pointer = (wchar_t * *)ALLOCA(sizeof(wchar_t *));\n            data = L\"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                wchar_t * data = *pointer;\n                printWLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_pointer_malloc_use_16_good()\n{\n    good1();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_alloca_use_05_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_pointer_malloc_use_13_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(STATIC_CONST_FIVE==5)\n    {\n        {\n            double * data;\n            double * * pointer = (double * *)malloc(sizeof(double *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (double *)malloc(sizeof(double));\n            if (data == NULL) {exit(-1);}\n            *data = 5.0;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                double * data = *pointer;\n                printDoubleLine(*data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(STATIC_CONST_FALSE)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            double * data;\n            double * * pointer = (double * *)ALLOCA(sizeof(double *));\n            /* initialize both the pointer and the data pointed to */\n            data = (double *)malloc(sizeof(double));\n            if (data == NULL) {exit(-1);}\n            *data = 5.0;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                double * data = *pointer;\n                printDoubleLine(*data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(GLOBAL_CONST_FIVE!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int data;\n            int * pointer = (int *)ALLOCA(sizeof(int));\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int data = *pointer;\n                printIntLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__long_malloc_use_01_good()\n{\n    good1();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int64_t_alloca_use_10_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalFive!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            double * data;\n            double * * pointer = (double * *)malloc(sizeof(double *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (double *)malloc(sizeof(double));\n            if (data == NULL) {exit(-1);}\n            *data = 5.0;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                double * data = *pointer;\n                printDoubleLine(*data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_malloc_use_05_good()\n{\n    good1();\n    good2();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__long_alloca_use_05_bad()\n{\n    if(staticTrue)\n    {\n        {\n            long * pointer = (long *)ALLOCA(sizeof(long));\n            long data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printLongLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(staticFalse)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            twoIntsStruct data;\n            twoIntsStruct * pointer = (twoIntsStruct *)ALLOCA(sizeof(twoIntsStruct));\n            data.intOne = 1;\n            data.intTwo = 2;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct data = *pointer;\n                printIntLine(data.intOne);\n                printIntLine(data.intTwo);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_pointer_alloca_use_15_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_pointer_alloca_use_13_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(STATIC_CONST_TRUE)\n    {\n        {\n            int * data;\n            int * * pointer = (int * *)malloc(sizeof(int *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (int *)malloc(sizeof(int));\n            if (data == NULL) {exit(-1);}\n            *data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int * data = *pointer;\n                printIntLine(*data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__no_return_01_bad() \n{\n    int intBad = helperBad();\n    printIntLine(intBad);\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_alloca_use_03_bad()\n{\n    if(5==5)\n    {\n        {\n            int * pointer = (int *)ALLOCA(sizeof(int));\n            int data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printIntLine(data);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__long_alloca_use_10_bad()\n{\n    if(globalTrue)\n    {\n        {\n            long * pointer = (long *)ALLOCA(sizeof(long));\n            long data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printLongLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(STATIC_CONST_FIVE!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            long data;\n            long * pointer = (long *)ALLOCA(sizeof(long));\n            data = 5L;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                long data = *pointer;\n                printLongLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalReturnsFalse())\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            char * data;\n            char * * pointer = (char * *)malloc(sizeof(char *));\n            if (pointer == NULL) {exit(-1);}\n            data = \"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char * data = *pointer;\n                printLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_alloca_use_17_bad()\n{\n    int j;\n    for(j = 0; j < 1; j++)\n    {\n        {\n            int * pointer = (int *)ALLOCA(sizeof(int));\n            int data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printIntLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_pointer_alloca_use_07_good()\n{\n    good1();\n    good2();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_malloc_use_03_bad()\n{\n    if(5==5)\n    {\n        {\n            wchar_t * * pointer = (wchar_t * *)malloc(sizeof(wchar_t *));\n            if (pointer == NULL) {exit(-1);}\n            wchar_t * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printWLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalFive!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            twoIntsStruct data;\n            twoIntsStruct * pointer = (twoIntsStruct *)ALLOCA(sizeof(twoIntsStruct));\n            data.intOne = 1;\n            data.intTwo = 2;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct data = *pointer;\n                printIntLine(data.intOne);\n                printIntLine(data.intTwo);\n            }\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_alloca_use_12_bad()\n{\n    if(globalReturnsTrueOrFalse())\n    {\n        {\n            twoIntsStruct * pointer = (twoIntsStruct *)ALLOCA(sizeof(twoIntsStruct));\n            twoIntsStruct data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printIntLine(data.intOne);\n            printIntLine(data.intTwo);\n        }\n    }\n    else\n    {\n        {\n            twoIntsStruct data;\n            twoIntsStruct * pointer = (twoIntsStruct *)ALLOCA(sizeof(twoIntsStruct));\n            data.intOne = 1;\n            data.intTwo = 2;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct data = *pointer;\n                printIntLine(data.intOne);\n                printIntLine(data.intTwo);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__long_malloc_use_04_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_alloca_use_07_good()\n{\n    good1();\n    good2();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_malloc_use_18_bad()\n{\n    goto sink;\nsink:\n    {\n        char * pointer = (char *)malloc(sizeof(char));\n        if (pointer == NULL) {exit(-1);}\n        char data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n        free(pointer);\n        printHexCharLine(data);\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(0)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            double * data;\n            double * * pointer = (double * *)malloc(sizeof(double *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (double *)malloc(sizeof(double));\n            if (data == NULL) {exit(-1);}\n            *data = 5.0;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                double * data = *pointer;\n                printDoubleLine(*data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int64_t_malloc_use_15_bad()\n{\n    switch(6)\n    {\n    case 6:\n    {\n        int64_t * pointer = (int64_t *)malloc(sizeof(int64_t));\n        if (pointer == NULL) {exit(-1);}\n        int64_t data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n        free(pointer);\n        printLongLongLine(data);\n    }\n    break;\n    default:\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_pointer_alloca_use_10_bad()\n{\n    if(globalTrue)\n    {\n        {\n            int * * pointer = (int * *)ALLOCA(sizeof(int *));\n            int * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printIntLine(*data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    int k;\n    for(k = 0; k < 1; k++)\n    {\n        {\n            double * data;\n            double * * pointer = (double * *)ALLOCA(sizeof(double *));\n            /* initialize both the pointer and the data pointed to */\n            data = (double *)malloc(sizeof(double));\n            if (data == NULL) {exit(-1);}\n            *data = 5.0;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                double * data = *pointer;\n                printDoubleLine(*data);\n            }\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_pointer_malloc_use_17_bad()\n{\n    int j;\n    for(j = 0; j < 1; j++)\n    {\n        {\n            int * * pointer = (int * *)malloc(sizeof(int *));\n            if (pointer == NULL) {exit(-1);}\n            int * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printIntLine(*data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    {\n        twoIntsStruct * data;\n        twoIntsStruct * * pointer = (twoIntsStruct * *)ALLOCA(sizeof(twoIntsStruct *));\n        /* initialize both the pointer and the data pointed to */\n        data = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n        if (data == NULL) {exit(-1);}\n        data->intOne = 5;\n        data->intTwo = 6;\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            twoIntsStruct * data = *pointer;\n            printIntLine(data->intOne);\n            printIntLine(data->intTwo);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_pointer_malloc_use_03_bad()\n{\n    if(5==5)\n    {\n        {\n            int * * pointer = (int * *)malloc(sizeof(int *));\n            if (pointer == NULL) {exit(-1);}\n            int * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printIntLine(*data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalReturnsFalse())\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            double * data;\n            double * * pointer = (double * *)ALLOCA(sizeof(double *));\n            /* initialize both the pointer and the data pointed to */\n            data = (double *)malloc(sizeof(double));\n            if (data == NULL) {exit(-1);}\n            *data = 5.0;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                double * data = *pointer;\n                printDoubleLine(*data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(GLOBAL_CONST_FALSE)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            char data;\n            char * pointer = (char *)malloc(sizeof(char));\n            if (pointer == NULL) {exit(-1);}\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char data = *pointer;\n                printHexCharLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__double_pointer_alloca_use_06_bad()\n{\n    if(STATIC_CONST_FIVE==5)\n    {\n        {\n            double * * pointer = (double * *)ALLOCA(sizeof(double *));\n            double * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printDoubleLine(*data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalFive!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            twoIntsStruct * data;\n            twoIntsStruct * * pointer = (twoIntsStruct * *)malloc(sizeof(twoIntsStruct *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (data == NULL) {exit(-1);}\n            data->intOne = 5;\n            data->intTwo = 6;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct * data = *pointer;\n                printIntLine(data->intOne);\n                printIntLine(data->intTwo);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(globalReturnsTrue())\n    {\n        {\n            double * data;\n            double * * pointer = (double * *)malloc(sizeof(double *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (double *)malloc(sizeof(double));\n            if (data == NULL) {exit(-1);}\n            *data = 5.0;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                double * data = *pointer;\n                printDoubleLine(*data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__long_alloca_use_14_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_pointer_malloc_use_17_good()\n{\n    good1();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int64_t_malloc_use_05_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_pointer_malloc_use_06_good()\n{\n    good1();\n    good2();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_pointer_malloc_use_10_bad()\n{\n    if(globalTrue)\n    {\n        {\n            int * * pointer = (int * *)malloc(sizeof(int *));\n            if (pointer == NULL) {exit(-1);}\n            int * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printIntLine(*data);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__long_alloca_use_07_bad()\n{\n    if(staticFive==5)\n    {\n        {\n            long * pointer = (long *)ALLOCA(sizeof(long));\n            long data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printLongLine(data);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__long_alloca_use_11_bad()\n{\n    if(globalReturnsTrue())\n    {\n        {\n            long * pointer = (long *)ALLOCA(sizeof(long));\n            long data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printLongLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(staticFive==5)\n    {\n        {\n            int * data;\n            int * * pointer = (int * *)ALLOCA(sizeof(int *));\n            /* initialize both the pointer and the data pointed to */\n            data = (int *)malloc(sizeof(int));\n            if (data == NULL) {exit(-1);}\n            *data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int * data = *pointer;\n                printIntLine(*data);\n            }\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_malloc_use_03_bad()\n{\n    if(5==5)\n    {\n        {\n            char * pointer = (char *)malloc(sizeof(char));\n            if (pointer == NULL) {exit(-1);}\n            char data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printHexCharLine(data);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_alloca_use_08_bad()\n{\n    if(staticReturnsTrue())\n    {\n        {\n            char * pointer = (char *)ALLOCA(sizeof(char));\n            char data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printHexCharLine(data);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_alloca_use_02_bad()\n{\n    if(1)\n    {\n        {\n            twoIntsStruct * pointer = (twoIntsStruct *)ALLOCA(sizeof(twoIntsStruct));\n            twoIntsStruct data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printIntLine(data.intOne);\n            printIntLine(data.intTwo);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_malloc_use_18_good()\n{\n    good1();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_malloc_use_16_good()\n{\n    good1();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_malloc_use_14_bad()\n{\n    if(globalFive==5)\n    {\n        {\n            int * pointer = (int *)malloc(sizeof(int));\n            if (pointer == NULL) {exit(-1);}\n            int data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printIntLine(data);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__double_pointer_alloca_use_13_bad()\n{\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        {\n            double * * pointer = (double * *)ALLOCA(sizeof(double *));\n            double * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printDoubleLine(*data);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__double_pointer_alloca_use_02_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    goto sink;\nsink:\n    {\n        long data;\n        long * pointer = (long *)ALLOCA(sizeof(long));\n        data = 5L;\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            long data = *pointer;\n            printLongLine(data);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_alloca_use_11_bad()\n{\n    if(globalReturnsTrue())\n    {\n        {\n            char * pointer = (char *)ALLOCA(sizeof(char));\n            char data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printHexCharLine(data);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_pointer_alloca_use_02_bad()\n{\n    if(1)\n    {\n        {\n            twoIntsStruct * * pointer = (twoIntsStruct * *)ALLOCA(sizeof(twoIntsStruct *));\n            twoIntsStruct * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printIntLine(data->intOne);\n            printIntLine(data->intTwo);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(staticTrue)\n    {\n        {\n            int * data;\n            int * * pointer = (int * *)malloc(sizeof(int *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (int *)malloc(sizeof(int));\n            if (data == NULL) {exit(-1);}\n            *data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int * data = *pointer;\n                printIntLine(*data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__long_alloca_use_12_good()\n{\n    good1();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_pointer_alloca_use_18_good()\n{\n    good1();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_alloca_use_11_bad()\n{\n    if(globalReturnsTrue())\n    {\n        {\n            wchar_t * * pointer = (wchar_t * *)ALLOCA(sizeof(wchar_t *));\n            wchar_t * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printWLine(data);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_malloc_use_17_bad()\n{\n    int j;\n    for(j = 0; j < 1; j++)\n    {\n        {\n            twoIntsStruct * pointer = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (pointer == NULL) {exit(-1);}\n            twoIntsStruct data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printIntLine(data.intOne);\n            printIntLine(data.intTwo);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_pointer_malloc_use_14_good()\n{\n    good1();\n    good2();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__long_alloca_use_15_bad()\n{\n    switch(6)\n    {\n    case 6:\n    {\n        long * pointer = (long *)ALLOCA(sizeof(long));\n        long data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n        printLongLine(data);\n    }\n    break;\n    default:\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(STATIC_CONST_FIVE!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            twoIntsStruct * data;\n            twoIntsStruct * * pointer = (twoIntsStruct * *)ALLOCA(sizeof(twoIntsStruct *));\n            /* initialize both the pointer and the data pointed to */\n            data = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (data == NULL) {exit(-1);}\n            data->intOne = 5;\n            data->intTwo = 6;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct * data = *pointer;\n                printIntLine(data->intOne);\n                printIntLine(data->intTwo);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__double_pointer_alloca_use_12_good()\n{\n    good1();\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(globalReturnsTrue())\n    {\n        {\n            twoIntsStruct * data;\n            twoIntsStruct * * pointer = (twoIntsStruct * *)malloc(sizeof(twoIntsStruct *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (data == NULL) {exit(-1);}\n            data->intOne = 5;\n            data->intTwo = 6;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct * data = *pointer;\n                printIntLine(data->intOne);\n                printIntLine(data->intTwo);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_pointer_alloca_use_05_bad()\n{\n    if(staticTrue)\n    {\n        {\n            int * * pointer = (int * *)ALLOCA(sizeof(int *));\n            int * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printIntLine(*data);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_pointer_malloc_use_13_bad()\n{\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        {\n            char * * pointer = (char * *)malloc(sizeof(char *));\n            if (pointer == NULL) {exit(-1);}\n            char * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printLine(data);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_alloca_use_03_bad()\n{\n    if(5==5)\n    {\n        {\n            char * pointer = (char *)ALLOCA(sizeof(char));\n            char data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printHexCharLine(data);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int64_t_malloc_use_06_bad()\n{\n    if(STATIC_CONST_FIVE==5)\n    {\n        {\n            int64_t * pointer = (int64_t *)malloc(sizeof(int64_t));\n            if (pointer == NULL) {exit(-1);}\n            int64_t data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printLongLongLine(data);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_malloc_use_13_bad()\n{\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        {\n            wchar_t * * pointer = (wchar_t * *)malloc(sizeof(wchar_t *));\n            if (pointer == NULL) {exit(-1);}\n            wchar_t * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printWLine(data);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int64_t_alloca_use_06_bad()\n{\n    if(STATIC_CONST_FIVE==5)\n    {\n        {\n            int64_t * pointer = (int64_t *)ALLOCA(sizeof(int64_t));\n            int64_t data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printLongLongLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_pointer_malloc_use_05_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(staticFive==5)\n    {\n        {\n            char data;\n            char * pointer = (char *)ALLOCA(sizeof(char));\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char data = *pointer;\n                printHexCharLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(GLOBAL_CONST_FIVE!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int64_t data;\n            int64_t * pointer = (int64_t *)malloc(sizeof(int64_t));\n            if (pointer == NULL) {exit(-1);}\n            data = 5LL;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int64_t data = *pointer;\n                printLongLongLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    switch(6)\n    {\n    case 6:\n    {\n        int * data;\n        int * * pointer = (int * *)malloc(sizeof(int *));\n        if (pointer == NULL) {exit(-1);}\n        /* initialize both the pointer and the data pointed to */\n        data = (int *)malloc(sizeof(int));\n        if (data == NULL) {exit(-1);}\n        *data = 5;\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            int * data = *pointer;\n            printIntLine(*data);\n        }\n        free(pointer);\n    }\n    break;\n    default:\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_pointer_malloc_use_14_bad()\n{\n    if(globalFive==5)\n    {\n        {\n            char * * pointer = (char * *)malloc(sizeof(char *));\n            if (pointer == NULL) {exit(-1);}\n            char * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(globalReturnsTrue())\n    {\n        {\n            char data;\n            char * pointer = (char *)ALLOCA(sizeof(char));\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char data = *pointer;\n                printHexCharLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__long_alloca_use_09_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(staticFalse)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            char data;\n            char * pointer = (char *)malloc(sizeof(char));\n            if (pointer == NULL) {exit(-1);}\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char data = *pointer;\n                printHexCharLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_pointer_malloc_use_18_good()\n{\n    good1();\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(staticFive==5)\n    {\n        {\n            twoIntsStruct data;\n            twoIntsStruct * pointer = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (pointer == NULL) {exit(-1);}\n            data.intOne = 1;\n            data.intTwo = 2;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct data = *pointer;\n                printIntLine(data.intOne);\n                printIntLine(data.intTwo);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_pointer_alloca_use_10_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_pointer_malloc_use_01_good()\n{\n    good1();\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(STATIC_CONST_FIVE==5)\n    {\n        {\n            long data;\n            long * pointer = (long *)ALLOCA(sizeof(long));\n            data = 5L;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                long data = *pointer;\n                printLongLine(data);\n            }\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_pointer_malloc_use_01_bad()\n{\n    {\n        int * * pointer = (int * *)malloc(sizeof(int *));\n        if (pointer == NULL) {exit(-1);}\n        int * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n        free(pointer);\n        printIntLine(*data);\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    switch(6)\n    {\n    case 6:\n    {\n        int data;\n        int * pointer = (int *)malloc(sizeof(int));\n        if (pointer == NULL) {exit(-1);}\n        data = 5;\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            int data = *pointer;\n            printIntLine(data);\n        }\n        free(pointer);\n    }\n    break;\n    default:\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(STATIC_CONST_FIVE==5)\n    {\n        {\n            int64_t data;\n            int64_t * pointer = (int64_t *)malloc(sizeof(int64_t));\n            if (pointer == NULL) {exit(-1);}\n            data = 5LL;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int64_t data = *pointer;\n                printLongLongLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    int k;\n    for(k = 0; k < 1; k++)\n    {\n        {\n            wchar_t * data;\n            wchar_t * * pointer = (wchar_t * *)malloc(sizeof(wchar_t *));\n            if (pointer == NULL) {exit(-1);}\n            data = L\"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                wchar_t * data = *pointer;\n                printWLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_alloca_use_13_good()\n{\n    good1();\n    good2();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int64_t_malloc_use_14_bad()\n{\n    if(globalFive==5)\n    {\n        {\n            int64_t * pointer = (int64_t *)malloc(sizeof(int64_t));\n            if (pointer == NULL) {exit(-1);}\n            int64_t data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printLongLongLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(GLOBAL_CONST_FIVE!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            char data;\n            char * pointer = (char *)ALLOCA(sizeof(char));\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char data = *pointer;\n                printHexCharLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(5==5)\n    {\n        {\n            char * data;\n            char * * pointer = (char * *)malloc(sizeof(char *));\n            if (pointer == NULL) {exit(-1);}\n            data = \"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char * data = *pointer;\n                printLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_malloc_use_16_bad()\n{\n    while(1)\n    {\n        {\n            int * pointer = (int *)malloc(sizeof(int));\n            if (pointer == NULL) {exit(-1);}\n            int data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printIntLine(data);\n        }\n        break;\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    switch(5)\n    {\n    case 6:\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n    {\n        int data;\n        int * pointer = (int *)ALLOCA(sizeof(int));\n        data = 5;\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            int data = *pointer;\n            printIntLine(data);\n        }\n    }\n    break;\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_pointer_malloc_use_14_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int64_t_alloca_use_17_good()\n{\n    good1();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_alloca_use_07_bad()\n{\n    if(staticFive==5)\n    {\n        {\n            wchar_t * * pointer = (wchar_t * *)ALLOCA(sizeof(wchar_t *));\n            wchar_t * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printWLine(data);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_malloc_use_12_bad()\n{\n    if(globalReturnsTrueOrFalse())\n    {\n        {\n            wchar_t * * pointer = (wchar_t * *)malloc(sizeof(wchar_t *));\n            if (pointer == NULL) {exit(-1);}\n            wchar_t * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printWLine(data);\n        }\n    }\n    else\n    {\n        {\n            wchar_t * data;\n            wchar_t * * pointer = (wchar_t * *)malloc(sizeof(wchar_t *));\n            if (pointer == NULL) {exit(-1);}\n            data = L\"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                wchar_t * data = *pointer;\n                printWLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(STATIC_CONST_TRUE)\n    {\n        {\n            double * data;\n            double * * pointer = (double * *)malloc(sizeof(double *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (double *)malloc(sizeof(double));\n            if (data == NULL) {exit(-1);}\n            *data = 5.0;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                double * data = *pointer;\n                printDoubleLine(*data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_alloca_use_16_bad()\n{\n    while(1)\n    {\n        {\n            twoIntsStruct * pointer = (twoIntsStruct *)ALLOCA(sizeof(twoIntsStruct));\n            twoIntsStruct data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printIntLine(data.intOne);\n            printIntLine(data.intTwo);\n        }\n        break;\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(5!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            twoIntsStruct * data;\n            twoIntsStruct * * pointer = (twoIntsStruct * *)malloc(sizeof(twoIntsStruct *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (data == NULL) {exit(-1);}\n            data->intOne = 5;\n            data->intTwo = 6;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct * data = *pointer;\n                printIntLine(data->intOne);\n                printIntLine(data->intTwo);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__long_alloca_use_18_good()\n{\n    good1();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_pointer_malloc_use_09_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__w32_no_return_implicit_01_good() \n{\n    good1();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_malloc_use_04_bad()\n{\n    if(STATIC_CONST_TRUE)\n    {\n        {\n            wchar_t * * pointer = (wchar_t * *)malloc(sizeof(wchar_t *));\n            if (pointer == NULL) {exit(-1);}\n            wchar_t * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printWLine(data);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_pointer_alloca_use_14_bad()\n{\n    if(globalFive==5)\n    {\n        {\n            int * * pointer = (int * *)ALLOCA(sizeof(int *));\n            int * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printIntLine(*data);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_malloc_use_03_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(staticFalse)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            long data;\n            long * pointer = (long *)ALLOCA(sizeof(long));\n            data = 5L;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                long data = *pointer;\n                printLongLine(data);\n            }\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_alloca_use_02_bad()\n{\n    if(1)\n    {\n        {\n            char * pointer = (char *)ALLOCA(sizeof(char));\n            char data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printHexCharLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    while(1)\n    {\n        {\n            int64_t data;\n            int64_t * pointer = (int64_t *)malloc(sizeof(int64_t));\n            if (pointer == NULL) {exit(-1);}\n            data = 5LL;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int64_t data = *pointer;\n                printLongLongLine(data);\n            }\n            free(pointer);\n        }\n        break;\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(globalTrue)\n    {\n        {\n            twoIntsStruct * data;\n            twoIntsStruct * * pointer = (twoIntsStruct * *)malloc(sizeof(twoIntsStruct *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (data == NULL) {exit(-1);}\n            data->intOne = 5;\n            data->intTwo = 6;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct * data = *pointer;\n                printIntLine(data->intOne);\n                printIntLine(data->intTwo);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static int helperGood1(void)\n{  \n    /* FIX: return a value and define the return value */\n    return 5;\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(globalFive==5)\n    {\n        {\n            long data;\n            long * pointer = (long *)malloc(sizeof(long));\n            if (pointer == NULL) {exit(-1);}\n            data = 5L;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                long data = *pointer;\n                printLongLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_alloca_use_10_bad()\n{\n    if(globalTrue)\n    {\n        {\n            twoIntsStruct * pointer = (twoIntsStruct *)ALLOCA(sizeof(twoIntsStruct));\n            twoIntsStruct data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printIntLine(data.intOne);\n            printIntLine(data.intTwo);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_pointer_malloc_use_08_bad()\n{\n    if(staticReturnsTrue())\n    {\n        {\n            int * * pointer = (int * *)malloc(sizeof(int *));\n            if (pointer == NULL) {exit(-1);}\n            int * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printIntLine(*data);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int64_t_malloc_use_04_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int64_t_alloca_use_09_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalFalse)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            wchar_t * data;\n            wchar_t * * pointer = (wchar_t * *)ALLOCA(sizeof(wchar_t *));\n            data = L\"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                wchar_t * data = *pointer;\n                printWLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(staticFalse)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int data;\n            int * pointer = (int *)malloc(sizeof(int));\n            if (pointer == NULL) {exit(-1);}\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int data = *pointer;\n                printIntLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__long_malloc_use_02_bad()\n{\n    if(1)\n    {\n        {\n            long * pointer = (long *)malloc(sizeof(long));\n            if (pointer == NULL) {exit(-1);}\n            long data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printLongLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(GLOBAL_CONST_FALSE)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            twoIntsStruct data;\n            twoIntsStruct * pointer = (twoIntsStruct *)ALLOCA(sizeof(twoIntsStruct));\n            data.intOne = 1;\n            data.intTwo = 2;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct data = *pointer;\n                printIntLine(data.intOne);\n                printIntLine(data.intTwo);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_malloc_use_06_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__long_malloc_use_14_good()\n{\n    good1();\n    good2();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_alloca_use_10_bad()\n{\n    if(globalTrue)\n    {\n        {\n            int * pointer = (int *)ALLOCA(sizeof(int));\n            int data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printIntLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(GLOBAL_CONST_TRUE)\n    {\n        {\n            char data;\n            char * pointer = (char *)malloc(sizeof(char));\n            if (pointer == NULL) {exit(-1);}\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char data = *pointer;\n                printHexCharLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(globalTrue)\n    {\n        {\n            int data;\n            int * pointer = (int *)ALLOCA(sizeof(int));\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int data = *pointer;\n                printIntLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    switch(5)\n    {\n    case 6:\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n    {\n        char data;\n        char * pointer = (char *)malloc(sizeof(char));\n        if (pointer == NULL) {exit(-1);}\n        data = 5;\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            char data = *pointer;\n            printHexCharLine(data);\n        }\n        free(pointer);\n    }\n    break;\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(GLOBAL_CONST_FALSE)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            double * data;\n            double * * pointer = (double * *)malloc(sizeof(double *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (double *)malloc(sizeof(double));\n            if (data == NULL) {exit(-1);}\n            *data = 5.0;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                double * data = *pointer;\n                printDoubleLine(*data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__double_pointer_malloc_use_05_bad()\n{\n    if(staticTrue)\n    {\n        {\n            double * * pointer = (double * *)malloc(sizeof(double *));\n            if (pointer == NULL) {exit(-1);}\n            double * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printDoubleLine(*data);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_pointer_alloca_use_17_bad()\n{\n    int j;\n    for(j = 0; j < 1; j++)\n    {\n        {\n            char * * pointer = (char * *)ALLOCA(sizeof(char *));\n            char * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(STATIC_CONST_FIVE==5)\n    {\n        {\n            char data;\n            char * pointer = (char *)malloc(sizeof(char));\n            if (pointer == NULL) {exit(-1);}\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char data = *pointer;\n                printHexCharLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_alloca_use_06_bad()\n{\n    if(STATIC_CONST_FIVE==5)\n    {\n        {\n            twoIntsStruct * pointer = (twoIntsStruct *)ALLOCA(sizeof(twoIntsStruct));\n            twoIntsStruct data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printIntLine(data.intOne);\n            printIntLine(data.intTwo);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_pointer_malloc_use_09_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__double_pointer_malloc_use_04_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        {\n            twoIntsStruct data;\n            twoIntsStruct * pointer = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (pointer == NULL) {exit(-1);}\n            data.intOne = 1;\n            data.intTwo = 2;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct data = *pointer;\n                printIntLine(data.intOne);\n                printIntLine(data.intTwo);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__long_alloca_use_06_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__long_alloca_use_11_good()\n{\n    good1();\n    good2();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_alloca_use_18_bad()\n{\n    goto sink;\nsink:\n    {\n        char * pointer = (char *)ALLOCA(sizeof(char));\n        char data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n        printHexCharLine(data);\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_pointer_alloca_use_05_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(staticFive==5)\n    {\n        {\n            double * data;\n            double * * pointer = (double * *)ALLOCA(sizeof(double *));\n            /* initialize both the pointer and the data pointed to */\n            data = (double *)malloc(sizeof(double));\n            if (data == NULL) {exit(-1);}\n            *data = 5.0;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                double * data = *pointer;\n                printDoubleLine(*data);\n            }\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_pointer_malloc_use_06_bad()\n{\n    if(STATIC_CONST_FIVE==5)\n    {\n        {\n            twoIntsStruct * * pointer = (twoIntsStruct * *)malloc(sizeof(twoIntsStruct *));\n            if (pointer == NULL) {exit(-1);}\n            twoIntsStruct * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printIntLine(data->intOne);\n            printIntLine(data->intTwo);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(staticFive==5)\n    {\n        {\n            twoIntsStruct * data;\n            twoIntsStruct * * pointer = (twoIntsStruct * *)malloc(sizeof(twoIntsStruct *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (data == NULL) {exit(-1);}\n            data->intOne = 5;\n            data->intTwo = 6;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct * data = *pointer;\n                printIntLine(data->intOne);\n                printIntLine(data->intTwo);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    switch(5)\n    {\n    case 6:\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n    {\n        char * data;\n        char * * pointer = (char * *)malloc(sizeof(char *));\n        if (pointer == NULL) {exit(-1);}\n        data = \"string\";\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            char * data = *pointer;\n            printLine(data);\n        }\n        free(pointer);\n    }\n    break;\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int64_t_malloc_use_01_bad()\n{\n    {\n        int64_t * pointer = (int64_t *)malloc(sizeof(int64_t));\n        if (pointer == NULL) {exit(-1);}\n        int64_t data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n        free(pointer);\n        printLongLongLine(data);\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_alloca_use_11_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalFalse)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            char * data;\n            char * * pointer = (char * *)ALLOCA(sizeof(char *));\n            data = \"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char * data = *pointer;\n                printLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_pointer_alloca_use_09_good()\n{\n    good1();\n    good2();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_malloc_use_06_bad()\n{\n    if(STATIC_CONST_FIVE==5)\n    {\n        {\n            twoIntsStruct * pointer = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (pointer == NULL) {exit(-1);}\n            twoIntsStruct data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printIntLine(data.intOne);\n            printIntLine(data.intTwo);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    switch(6)\n    {\n    case 6:\n    {\n        twoIntsStruct * data;\n        twoIntsStruct * * pointer = (twoIntsStruct * *)ALLOCA(sizeof(twoIntsStruct *));\n        /* initialize both the pointer and the data pointed to */\n        data = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n        if (data == NULL) {exit(-1);}\n        data->intOne = 5;\n        data->intTwo = 6;\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            twoIntsStruct * data = *pointer;\n            printIntLine(data->intOne);\n            printIntLine(data->intTwo);\n        }\n    }\n    break;\n    default:\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_pointer_malloc_use_12_good()\n{\n    good1();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalReturnsTrueOrFalse())\n    {\n        {\n            twoIntsStruct data;\n            twoIntsStruct * pointer = (twoIntsStruct *)ALLOCA(sizeof(twoIntsStruct));\n            data.intOne = 1;\n            data.intTwo = 2;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct data = *pointer;\n                printIntLine(data.intOne);\n                printIntLine(data.intTwo);\n            }\n        }\n    }\n    else\n    {\n        {\n            twoIntsStruct data;\n            twoIntsStruct * pointer = (twoIntsStruct *)ALLOCA(sizeof(twoIntsStruct));\n            data.intOne = 1;\n            data.intTwo = 2;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct data = *pointer;\n                printIntLine(data.intOne);\n                printIntLine(data.intTwo);\n            }\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_pointer_alloca_use_03_bad()\n{\n    if(5==5)\n    {\n        {\n            char * * pointer = (char * *)ALLOCA(sizeof(char *));\n            char * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printLine(data);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_alloca_use_16_bad()\n{\n    while(1)\n    {\n        {\n            char * pointer = (char *)ALLOCA(sizeof(char));\n            char data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printHexCharLine(data);\n        }\n        break;\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_pointer_malloc_use_13_good()\n{\n    good1();\n    good2();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_malloc_use_13_bad()\n{\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        {\n            int * pointer = (int *)malloc(sizeof(int));\n            if (pointer == NULL) {exit(-1);}\n            int data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printIntLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(GLOBAL_CONST_FALSE)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            twoIntsStruct * data;\n            twoIntsStruct * * pointer = (twoIntsStruct * *)malloc(sizeof(twoIntsStruct *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (data == NULL) {exit(-1);}\n            data->intOne = 5;\n            data->intTwo = 6;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct * data = *pointer;\n                printIntLine(data->intOne);\n                printIntLine(data->intTwo);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__double_pointer_malloc_use_14_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_alloca_use_15_good()\n{\n    good1();\n    good2();\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_alloca_use_18_bad()\n{\n    goto sink;\nsink:\n    {\n        int * pointer = (int *)ALLOCA(sizeof(int));\n        int data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n        printIntLine(data);\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(staticTrue)\n    {\n        {\n            int data;\n            int * pointer = (int *)malloc(sizeof(int));\n            if (pointer == NULL) {exit(-1);}\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int data = *pointer;\n                printIntLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__long_malloc_use_02_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int64_t_malloc_use_08_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        {\n            twoIntsStruct * data;\n            twoIntsStruct * * pointer = (twoIntsStruct * *)malloc(sizeof(twoIntsStruct *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (data == NULL) {exit(-1);}\n            data->intOne = 5;\n            data->intTwo = 6;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct * data = *pointer;\n                printIntLine(data->intOne);\n                printIntLine(data->intTwo);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__double_pointer_alloca_use_05_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_pointer_alloca_use_08_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_malloc_use_08_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_alloca_use_12_good()\n{\n    good1();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_alloca_use_08_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(globalReturnsTrueOrFalse())\n    {\n        {\n            char * data;\n            char * * pointer = (char * *)ALLOCA(sizeof(char *));\n            data = \"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char * data = *pointer;\n                printLine(data);\n            }\n        }\n    }\n    else\n    {\n        {\n            char * data;\n            char * * pointer = (char * *)ALLOCA(sizeof(char *));\n            data = \"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char * data = *pointer;\n                printLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(STATIC_CONST_FIVE==5)\n    {\n        {\n            twoIntsStruct * data;\n            twoIntsStruct * * pointer = (twoIntsStruct * *)malloc(sizeof(twoIntsStruct *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (data == NULL) {exit(-1);}\n            data->intOne = 5;\n            data->intTwo = 6;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct * data = *pointer;\n                printIntLine(data->intOne);\n                printIntLine(data->intTwo);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(globalTrue)\n    {\n        {\n            twoIntsStruct * data;\n            twoIntsStruct * * pointer = (twoIntsStruct * *)ALLOCA(sizeof(twoIntsStruct *));\n            /* initialize both the pointer and the data pointed to */\n            data = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (data == NULL) {exit(-1);}\n            data->intOne = 5;\n            data->intTwo = 6;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct * data = *pointer;\n                printIntLine(data->intOne);\n                printIntLine(data->intTwo);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(staticReturnsTrue())\n    {\n        {\n            int data;\n            int * pointer = (int *)ALLOCA(sizeof(int));\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int data = *pointer;\n                printIntLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(globalTrue)\n    {\n        {\n            long data;\n            long * pointer = (long *)ALLOCA(sizeof(long));\n            data = 5L;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                long data = *pointer;\n                printLongLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_pointer_alloca_use_11_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(GLOBAL_CONST_FALSE)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int data;\n            int * pointer = (int *)ALLOCA(sizeof(int));\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int data = *pointer;\n                printIntLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__double_pointer_alloca_use_14_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    {\n        double * data;\n        double * * pointer = (double * *)malloc(sizeof(double *));\n        if (pointer == NULL) {exit(-1);}\n        /* initialize both the pointer and the data pointed to */\n        data = (double *)malloc(sizeof(double));\n        if (data == NULL) {exit(-1);}\n        *data = 5.0;\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            double * data = *pointer;\n            printDoubleLine(*data);\n        }\n        free(pointer);\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_pointer_alloca_use_06_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__struct_alloca_use_06_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        {\n            int * data;\n            int * * pointer = (int * *)malloc(sizeof(int *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (int *)malloc(sizeof(int));\n            if (data == NULL) {exit(-1);}\n            *data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int * data = *pointer;\n                printIntLine(*data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_pointer_alloca_use_02_bad()\n{\n    if(1)\n    {\n        {\n            int * * pointer = (int * *)ALLOCA(sizeof(int *));\n            int * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printIntLine(*data);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int64_t_malloc_use_04_bad()\n{\n    if(STATIC_CONST_TRUE)\n    {\n        {\n            int64_t * pointer = (int64_t *)malloc(sizeof(int64_t));\n            if (pointer == NULL) {exit(-1);}\n            int64_t data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printLongLongLine(data);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_pointer_alloca_use_03_bad()\n{\n    if(5==5)\n    {\n        {\n            int * * pointer = (int * *)ALLOCA(sizeof(int *));\n            int * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printIntLine(*data);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_alloca_use_12_good()\n{\n    good1();\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(globalReturnsTrue())\n    {\n        {\n            twoIntsStruct * data;\n            twoIntsStruct * * pointer = (twoIntsStruct * *)ALLOCA(sizeof(twoIntsStruct *));\n            /* initialize both the pointer and the data pointed to */\n            data = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (data == NULL) {exit(-1);}\n            data->intOne = 5;\n            data->intTwo = 6;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                twoIntsStruct * data = *pointer;\n                printIntLine(data->intOne);\n                printIntLine(data->intTwo);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    goto sink;\nsink:\n    {\n        char data;\n        char * pointer = (char *)ALLOCA(sizeof(char));\n        data = 5;\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            char data = *pointer;\n            printHexCharLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(staticFive!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            double * data;\n            double * * pointer = (double * *)malloc(sizeof(double *));\n            if (pointer == NULL) {exit(-1);}\n            /* initialize both the pointer and the data pointed to */\n            data = (double *)malloc(sizeof(double));\n            if (data == NULL) {exit(-1);}\n            *data = 5.0;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                double * data = *pointer;\n                printDoubleLine(*data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    switch(6)\n    {\n    case 6:\n    {\n        int * data;\n        int * * pointer = (int * *)ALLOCA(sizeof(int *));\n        /* initialize both the pointer and the data pointed to */\n        data = (int *)malloc(sizeof(int));\n        if (data == NULL) {exit(-1);}\n        *data = 5;\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            int * data = *pointer;\n            printIntLine(*data);\n        }\n    }\n    break;\n    default:\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n        break;\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_pointer_alloca_use_13_bad()\n{\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        {\n            char * * pointer = (char * *)ALLOCA(sizeof(char *));\n            char * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(globalFive==5)\n    {\n        {\n            char data;\n            char * pointer = (char *)ALLOCA(sizeof(char));\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char data = *pointer;\n                printHexCharLine(data);\n            }\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__char_malloc_use_07_bad()\n{\n    if(staticFive==5)\n    {\n        {\n            char * pointer = (char *)malloc(sizeof(char));\n            if (pointer == NULL) {exit(-1);}\n            char data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printHexCharLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_malloc_use_04_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(staticReturnsFalse())\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            wchar_t * data;\n            wchar_t * * pointer = (wchar_t * *)ALLOCA(sizeof(wchar_t *));\n            data = L\"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                wchar_t * data = *pointer;\n                printWLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(globalTrue)\n    {\n        {\n            long data;\n            long * pointer = (long *)malloc(sizeof(long));\n            if (pointer == NULL) {exit(-1);}\n            data = 5L;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                long data = *pointer;\n                printLongLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(0)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int * data;\n            int * * pointer = (int * *)ALLOCA(sizeof(int *));\n            /* initialize both the pointer and the data pointed to */\n            data = (int *)malloc(sizeof(int));\n            if (data == NULL) {exit(-1);}\n            *data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int * data = *pointer;\n                printIntLine(*data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    {\n        int64_t data;\n        int64_t * pointer = (int64_t *)malloc(sizeof(int64_t));\n        if (pointer == NULL) {exit(-1);}\n        data = 5LL;\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            int64_t data = *pointer;\n            printLongLongLine(data);\n        }\n        free(pointer);\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        {\n            int data;\n            int * pointer = (int *)malloc(sizeof(int));\n            if (pointer == NULL) {exit(-1);}\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int data = *pointer;\n                printIntLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(5==5)\n    {\n        {\n            int data;\n            int * pointer = (int *)malloc(sizeof(int));\n            if (pointer == NULL) {exit(-1);}\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int data = *pointer;\n                printIntLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_malloc_use_06_bad()\n{\n    if(STATIC_CONST_FIVE==5)\n    {\n        {\n            wchar_t * * pointer = (wchar_t * *)malloc(sizeof(wchar_t *));\n            if (pointer == NULL) {exit(-1);}\n            wchar_t * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printWLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__double_pointer_malloc_use_12_good()\n{\n    good1();\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(1)\n    {\n        {\n            int64_t data;\n            int64_t * pointer = (int64_t *)malloc(sizeof(int64_t));\n            if (pointer == NULL) {exit(-1);}\n            data = 5LL;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int64_t data = *pointer;\n                printLongLongLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(staticFive==5)\n    {\n        {\n            int data;\n            int * pointer = (int *)ALLOCA(sizeof(int));\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int data = *pointer;\n                printIntLine(data);\n            }\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int64_t_alloca_use_04_bad()\n{\n    if(STATIC_CONST_TRUE)\n    {\n        {\n            int64_t * pointer = (int64_t *)ALLOCA(sizeof(int64_t));\n            int64_t data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printLongLongLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    {\n        twoIntsStruct data;\n        twoIntsStruct * pointer = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n        if (pointer == NULL) {exit(-1);}\n        data.intOne = 1;\n        data.intTwo = 2;\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            twoIntsStruct data = *pointer;\n            printIntLine(data.intOne);\n            printIntLine(data.intTwo);\n        }\n        free(pointer);\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_pointer_alloca_use_16_bad()\n{\n    while(1)\n    {\n        {\n            twoIntsStruct * * pointer = (twoIntsStruct * *)ALLOCA(sizeof(twoIntsStruct *));\n            twoIntsStruct * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printIntLine(data->intOne);\n            printIntLine(data->intTwo);\n        }\n        break;\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_alloca_use_14_bad()\n{\n    if(globalFive==5)\n    {\n        {\n            wchar_t * * pointer = (wchar_t * *)ALLOCA(sizeof(wchar_t *));\n            wchar_t * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printWLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(STATIC_CONST_FIVE!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int * data;\n            int * * pointer = (int * *)ALLOCA(sizeof(int *));\n            /* initialize both the pointer and the data pointed to */\n            data = (int *)malloc(sizeof(int));\n            if (data == NULL) {exit(-1);}\n            *data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int * data = *pointer;\n                printIntLine(*data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(staticReturnsFalse())\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            long data;\n            long * pointer = (long *)malloc(sizeof(long));\n            if (pointer == NULL) {exit(-1);}\n            data = 5L;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                long data = *pointer;\n                printLongLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(GLOBAL_CONST_FALSE)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int * data;\n            int * * pointer = (int * *)ALLOCA(sizeof(int *));\n            /* initialize both the pointer and the data pointed to */\n            data = (int *)malloc(sizeof(int));\n            if (data == NULL) {exit(-1);}\n            *data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int * data = *pointer;\n                printIntLine(*data);\n            }\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_alloca_use_09_bad()\n{\n    if(GLOBAL_CONST_TRUE)\n    {\n        {\n            wchar_t * * pointer = (wchar_t * *)ALLOCA(sizeof(wchar_t *));\n            wchar_t * data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printWLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(STATIC_CONST_FALSE)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            int data;\n            int * pointer = (int *)ALLOCA(sizeof(int));\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int data = *pointer;\n                printIntLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    switch(5)\n    {\n    case 6:\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n        break;\n    default:\n    {\n        wchar_t * data;\n        wchar_t * * pointer = (wchar_t * *)ALLOCA(sizeof(wchar_t *));\n        data = L\"string\";\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            wchar_t * data = *pointer;\n            printWLine(data);\n        }\n    }\n    break;\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    int k;\n    for(k = 0; k < 1; k++)\n    {\n        {\n            long data;\n            long * pointer = (long *)malloc(sizeof(long));\n            if (pointer == NULL) {exit(-1);}\n            data = 5L;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                long data = *pointer;\n                printLongLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(staticReturnsFalse())\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            char * data;\n            char * * pointer = (char * *)ALLOCA(sizeof(char *));\n            data = \"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char * data = *pointer;\n                printLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__double_pointer_malloc_use_13_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(staticReturnsTrue())\n    {\n        {\n            char data;\n            char * pointer = (char *)malloc(sizeof(char));\n            if (pointer == NULL) {exit(-1);}\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char data = *pointer;\n                printHexCharLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    if(STATIC_CONST_FIVE!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        {\n            char * data;\n            char * * pointer = (char * *)ALLOCA(sizeof(char *));\n            data = \"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                char * data = *pointer;\n                printLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "static void good1()\n{\n    {\n        int64_t data;\n        int64_t * pointer = (int64_t *)ALLOCA(sizeof(int64_t));\n        data = 5LL;\n        *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n        {\n            int64_t data = *pointer;\n            printLongLongLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__wchar_t_pointer_alloca_use_04_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(5==5)\n    {\n        {\n            int data;\n            int * pointer = (int *)ALLOCA(sizeof(int));\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int data = *pointer;\n                printIntLine(data);\n            }\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__long_alloca_use_08_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__char_alloca_use_16_good()\n{\n    good1();\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        {\n            double * data;\n            double * * pointer = (double * *)ALLOCA(sizeof(double *));\n            /* initialize both the pointer and the data pointed to */\n            data = (double *)malloc(sizeof(double));\n            if (data == NULL) {exit(-1);}\n            *data = 5.0;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                double * data = *pointer;\n                printDoubleLine(*data);\n            }\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__struct_malloc_use_07_bad()\n{\n    if(staticFive==5)\n    {\n        {\n            twoIntsStruct * pointer = (twoIntsStruct *)malloc(sizeof(twoIntsStruct));\n            if (pointer == NULL) {exit(-1);}\n            twoIntsStruct data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printIntLine(data.intOne);\n            printIntLine(data.intTwo);\n        }\n    }\n}"}
{"target": 0, "func": "void CWE758_Undefined_Behavior__int_alloca_use_06_good()\n{\n    good1();\n    good2();\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(globalReturnsTrue())\n    {\n        {\n            int data;\n            int * pointer = (int *)ALLOCA(sizeof(int));\n            data = 5;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int data = *pointer;\n                printIntLine(data);\n            }\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__long_alloca_use_01_bad()\n{\n    {\n        long * pointer = (long *)ALLOCA(sizeof(long));\n        long data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n        printLongLine(data);\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__long_alloca_use_04_bad()\n{\n    if(STATIC_CONST_TRUE)\n    {\n        {\n            long * pointer = (long *)ALLOCA(sizeof(long));\n            long data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            printLongLine(data);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        {\n            wchar_t * data;\n            wchar_t * * pointer = (wchar_t * *)malloc(sizeof(wchar_t *));\n            if (pointer == NULL) {exit(-1);}\n            data = L\"string\";\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                wchar_t * data = *pointer;\n                printWLine(data);\n            }\n            free(pointer);\n        }\n    }\n}"}
{"target": 0, "func": "static void good2()\n{\n    if(staticReturnsTrue())\n    {\n        {\n            int64_t data;\n            int64_t * pointer = (int64_t *)ALLOCA(sizeof(int64_t));\n            data = 5LL;\n            *pointer = data; /* FIX: Assign a value to the thing pointed to by pointer */\n            {\n                int64_t data = *pointer;\n                printLongLongLine(data);\n            }\n        }\n    }\n}"}
{"target": 1, "func": "void CWE758_Undefined_Behavior__int_malloc_use_02_bad()\n{\n    if(1)\n    {\n        {\n            int * pointer = (int *)malloc(sizeof(int));\n            if (pointer == NULL) {exit(-1);}\n            int data = *pointer; /* FLAW: the value pointed to by pointer is undefined */\n            free(pointer);\n            printIntLine(data);\n        }\n    }\n}"}
